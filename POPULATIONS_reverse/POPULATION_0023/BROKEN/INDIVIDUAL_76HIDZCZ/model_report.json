{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "R script failed with return code 1",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp -o POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o\ng++ -std=gnu++17 -shared -s -static-libgcc -o POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.dll tmp.def POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib/x64 -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib -LC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/bin/x64 -lR\nStarting model phases\nNumber of phases: 1 \nPhase 1 \nInitial parameter values for phase 1 :\n                    log_r_cots                     log_K_cots \n                            NA                             NA \n                    log_m_cots                     log_p_cots \n                        -2.355                             NA \n                   log_K1_cots                     log_a_fast \n                            NA                             NA \n                    log_a_slow                     log_K_fast \n                            NA                             NA \n                    log_K_slow                     log_r_fast \n                            NA                             NA \n                    log_r_slow                     log_m_fast \n                            NA                         -0.694 \n                    log_m_slow      log_temp_sensitivity_fast \n                            NA                             NA \n     log_temp_sensitivity_slow                 log_sigma_cots \n                            NA                             NA \n                log_sigma_slow                 log_sigma_fast \n                            NA                             NA \nlog_density_dependence_cotsimm                 log_allee_cots \n                            NA                             NA \n                   log_sst_opt                  log_sst_sigma \n                            NA                             NA \nError in model phases: NA/NaN gradient evaluation",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nError in value[[3L]](cond) : \n  Error in model phases: NA/NaN gradient evaluation\nCalls: tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>\nIn addition: Warning message:\nIn nlminb(model$par, model$fn, model$gr) : NA/NaN function evaluation\nExecution halted"
    },
    "2": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp -o POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/cppad.hpp:38,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:121,\n                 from POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Core:380,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Dense:1,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:92:\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "3": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp -o POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/cppad.hpp:38,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:121,\n                 from POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Core:380,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Dense:1,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:92:\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "4": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp -o POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/cppad.hpp:38,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:121,\n                 from POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Core:380,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Dense:1,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:92:\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "5": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp -o POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/cppad.hpp:38,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:121,\n                 from POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Core:380,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Dense:1,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:92:\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "6": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp -o POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<double> >' to non-scalar type 'CppAD::AD<double>' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/cppad.hpp:38,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:121,\n                 from POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Core:380,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/Dense:1,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:92:\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<double>, AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<double> >, const Eigen::Array<AD<double>, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<double>; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<double>; typename Derived::Scalar = CppAD::AD<double>; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<double> >, const Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: cannot convert 'tmbutils::vector<double>' to 'double' in initialization\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:9: error: no match for 'operator+=' (operand types are 'double' and 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >')\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<double> > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<double> >, AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<double> > >, const Eigen::Array<AD<AD<double> >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<double> >; typename Derived::Scalar = CppAD::AD<CppAD::AD<double> >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:48:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   48 |   Type a_fast  = exp(log_a_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:49:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   49 |   Type a_slow  = exp(log_a_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:50:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   50 |   Type K_fast   = exp(log_K_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:51:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   51 |   Type K_slow   = exp(log_K_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:52:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   52 |   Type r_fast   = exp(log_r_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:53:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   53 |   Type r_slow   = exp(log_r_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:54:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   54 |   Type m_fast   = exp(log_m_fast);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:55:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   55 |   Type m_slow   = exp(log_m_slow);\n      |        ^~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:56:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   56 |   Type temp_sensitivity_fast = exp(log_temp_sensitivity_fast);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:57:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   57 |   Type temp_sensitivity_slow = exp(log_temp_sensitivity_slow);\n      |        ^~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:58:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   58 |   Type sigma_cots = exp(log_sigma_cots);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:59:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   59 |   Type sigma_slow = exp(log_sigma_slow);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:60:8: error: conversion from 'tmbutils::vector<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   60 |   Type sigma_fast = exp(log_sigma_fast);\n      |        ^~~~~~~~~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:192:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  192 |     nll += Type(0.01) * pow(log_r_cots - 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:193:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  193 |     nll += Type(0.01) * pow(log_K_cots - 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:194:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  194 |     nll += Type(0.01) * pow(log_m_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:195:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  195 |     nll += Type(0.01) * pow(log_p_cots + 1.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:196:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  196 |     nll += Type(0.01) * pow(log_K1_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:197:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  197 |     nll += Type(0.01) * pow(log_a_fast + 2.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:198:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  198 |     nll += Type(0.01) * pow(log_a_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:199:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  199 |     nll += Type(0.01) * pow(log_K_fast - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:200:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  200 |     nll += Type(0.01) * pow(log_K_slow - 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:201:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  201 |     nll += Type(0.01) * pow(log_r_fast - 0.8, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:202:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  202 |     nll += Type(0.01) * pow(log_r_slow - 0.3, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:203:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  203 |     nll += Type(0.01) * pow(log_m_fast + 0.2, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:204:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  204 |     nll += Type(0.01) * pow(log_m_slow + 0.7, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:205:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  205 |     nll += Type(0.01) * pow(log_temp_sensitivity_fast + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:206:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  206 |     nll += Type(0.01) * pow(log_temp_sensitivity_slow + 3.0, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:207:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  207 |     nll += Type(0.01) * pow(log_sigma_cots + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:208:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  208 |     nll += Type(0.01) * pow(log_sigma_slow + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nPOPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.cpp:209:28: error: call of overloaded 'pow(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, double)' is ambiguous\n  209 |     nll += Type(0.01) * pow(log_sigma_fast + 0.5, 2.0);\n      |                         ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/pow_int.hpp:120:21: note: candidate: 'Type CppAD::pow(const Type&, const int&) [with Type = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<AD<AD<AD<double> > >, AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<AD<AD<AD<double> > > >, const Eigen::Array<AD<AD<AD<double> > >, -1, 1, 0, -1, 1> > >]'\n  120 |         inline Type pow (const Type& x, const int& n)\n      |                     ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include/Eigen/src/Core/GlobalFunctions.h:121:3: note: candidate: 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_pow_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, Eigen::internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type> Eigen::pow(const ArrayBase<Derived>&, const ScalarExponent&) [with Derived = CwiseBinaryOp<internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; ScalarExponent = double; typename internal::traits<T>::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename Derived::Scalar = CppAD::AD<CppAD::AD<CppAD::AD<double> > >; typename internal::plain_constant_type<Derived, typename internal::promote_scalar_arg<typename Derived::Scalar, ScalarExponent, internal::has_ReturnType<ScalarBinaryOpTraits<typename Derived::Scalar, ScalarExponent, internal::scalar_pow_op<typename Derived::Scalar, ScalarExponent> > >::value>::type>::type = CwiseNullaryOp<internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >]'\n  121 |   pow(const Eigen::ArrayBase<Derived>& x, const ScalarExponent& exponent)\n      |   ^~~\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0023//INDIVIDUAL_76HIDZCZ/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "7": {
      "status": "BROKEN"
    }
  }
}