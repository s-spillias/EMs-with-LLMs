{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp -o POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:244: error: no matching function for call to 'max(CppAD::AD<double>, CppAD::AD<double>)'\n   58 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps; // (1) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:215,\n                 from POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note: candidate: 'template<class Type> Type max(const tmbutils::vector<Type>&)'\n  145 | Type max(const vector<Type> &x)\n      |      ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note:   template argument deduction/substitution failed:\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:244: note:   'CppAD::AD<double>' is not derived from 'const tmbutils::vector<Type>'\n   58 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps; // (1) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:244: error: no matching function for call to 'max(CppAD::AD<double>, CppAD::AD<double>)'\n   59 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note: candidate: 'template<class Type> Type max(const tmbutils::vector<Type>&)'\n  145 | Type max(const vector<Type> &x)\n      |      ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note:   template argument deduction/substitution failed:\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:244: note:   'CppAD::AD<double>' is not derived from 'const tmbutils::vector<Type>'\n   59 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:244: error: no matching function for call to 'max(double, Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>::Scalar)'\n   58 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps; // (1) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note: candidate: 'template<class Type> Type max(const tmbutils::vector<Type>&)'\n  145 | Type max(const vector<Type> &x)\n      |      ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note:   template argument deduction/substitution failed:\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:244: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'\n   58 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps; // (1) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:244: error: no matching function for call to 'max(double, Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>::Scalar)'\n   59 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note: candidate: 'template<class Type> Type max(const tmbutils::vector<Type>&)'\n  145 | Type max(const vector<Type> &x)\n      |      ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note:   template argument deduction/substitution failed:\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:244: note:   mismatched types 'const tmbutils::vector<Type>' and 'double'\n   59 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:244: error: no matching function for call to 'max(CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> >)'\n   58 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps; // (1) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note: candidate: 'template<class Type> Type max(const tmbutils::vector<Type>&)'\n  145 | Type max(const vector<Type> &x)\n      |      ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note:   template argument deduction/substitution failed:\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:244: note:   'CppAD::AD<CppAD::AD<double> >' is not derived from 'const tmbutils::vector<Type>'\n   58 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps; // (1) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:244: error: no matching function for call to 'max(CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> >)'\n   59 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note: candidate: 'template<class Type> Type max(const tmbutils::vector<Type>&)'\n  145 | Type max(const vector<Type> &x)\n      |      ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note:   template argument deduction/substitution failed:\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:244: note:   'CppAD::AD<CppAD::AD<double> >' is not derived from 'const tmbutils::vector<Type>'\n   59 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:244: error: no matching function for call to 'max(CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > >)'\n   58 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps; // (1) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note: candidate: 'template<class Type> Type max(const tmbutils::vector<Type>&)'\n  145 | Type max(const vector<Type> &x)\n      |      ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note:   template argument deduction/substitution failed:\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:244: note:   'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' is not derived from 'const tmbutils::vector<Type>'\n   58 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps; // (1) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:244: error: no matching function for call to 'max(CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > >)'\n   59 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note: candidate: 'template<class Type> Type max(const tmbutils::vector<Type>&)'\n  145 | Type max(const vector<Type> &x)\n      |      ^~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/convenience.hpp:145:6: note:   template argument deduction/substitution failed:\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:244: note:   'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' is not derived from 'const tmbutils::vector<Type>'\n   59 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * max(Type(0), sst_dat[i] - Topt)))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |                                                                                                                                                                                                                                                 ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp -o POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:18: error: cannot convert 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >' to 'Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>::Scalar' {aka 'double'} in assignment\n   58 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * ((sst_dat[i]-Topt) > Type(0) ? sst_dat[i]-Topt : Type(0))))) + eps; // (1) logistic regulation with saturating COTS effect\n      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:18: error: cannot convert 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >' to 'Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>::Scalar' {aka 'double'} in assignment\n   59 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * ((sst_dat[i]-Topt) > Type(0) ? sst_dat[i]-Topt : Type(0))))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/user_ad.hpp:67,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/cppad.hpp:82,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:121,\n                 from POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp: In instantiation of 'CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; Base = double]':\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:18:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp:141:24: error: invalid cast from type 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >' to type 'double'\n  141 | {       return *this = Base(t); }\n      |                        ^~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/user_ad.hpp:66:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; Base = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp:141:18:   required from 'CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<double>]'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:18:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >' to type 'double'\n  184 | : value_(Base(t))\n      |          ^~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10:   required from 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<double>]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp:141:18:   required from 'CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<CppAD::AD<double> >]'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:18:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >' to type 'double'\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "3": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp -o POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:18: error: cannot convert 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >' to 'Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>::Scalar' {aka 'double'} in assignment\n   58 |     slow_pred[i] = slow_base / (Type(1) + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * ((sst_dat[i]-Topt) > Type(0) ? sst_dat[i]-Topt : Type(0))))) + eps; // (1) logistic regulation with saturating COTS effect\n      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:18: error: cannot convert 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >' to 'Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>::Scalar' {aka 'double'} in assignment\n   59 |     fast_pred[i] = fast_base / (Type(1) + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i])) - delta*(sst_dat[i]-Topt)*(cots_dat[i] / (cots_half + cots_dat[i])) - theta * ((sst_dat[i]-Topt) > Type(0) ? sst_dat[i]-Topt : Type(0))))) + eps;   // (2) logistic regulation with saturating COTS effect\n      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/user_ad.hpp:67,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/cppad.hpp:82,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:121,\n                 from POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp: In instantiation of 'CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; Base = double]':\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:18:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp:141:24: error: invalid cast from type 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >' to type 'double'\n  141 | {       return *this = Base(t); }\n      |                        ^~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/user_ad.hpp:66:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; Base = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp:141:18:   required from 'CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<double>]'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:18:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >' to type 'double'\n  184 | : value_(Base(t))\n      |          ^~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10:   required from 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<double>]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp:141:18:   required from 'CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<CppAD::AD<double> >]'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:58:18:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >' to type 'double'\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "4": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp -o POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:12: error: conversion from 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > > >' to non-scalar type 'CppAD::AD<double>' requested\n   59 |       Type denom_slow = Type(1) + exp(\n      |            ^~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:70:12: error: conversion from 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > > >' to non-scalar type 'CppAD::AD<double>' requested\n   70 |       Type denom_fast = Type(1) + exp(\n      |            ^~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:12: error: cannot convert 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >' to 'double' in initialization\n   59 |       Type denom_slow = Type(1) + exp(\n      |            ^~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:70:12: error: cannot convert 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >' to 'double' in initialization\n   70 |       Type denom_fast = Type(1) + exp(\n      |            ^~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:12: error: conversion from 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   59 |       Type denom_slow = Type(1) + exp(\n      |            ^~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:70:12: error: conversion from 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   70 |       Type denom_fast = Type(1) + exp(\n      |            ^~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:59:12: error: conversion from 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   59 |       Type denom_slow = Type(1) + exp(\n      |            ^~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:70:12: error: conversion from 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   70 |       Type denom_fast = Type(1) + exp(\n      |            ^~~~~~~~~~\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "5": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp -o POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:60:12: error: conversion from 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > >' to non-scalar type 'CppAD::AD<double>' requested\n   60 |       Type exp_val = exp(\n      |            ^~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:73:12: error: conversion from 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > >' to non-scalar type 'CppAD::AD<double>' requested\n   73 |       Type exp_val = exp(\n      |            ^~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:60:12: error: cannot convert 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >' to 'double' in initialization\n   60 |       Type exp_val = exp(\n      |            ^~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:73:12: error: cannot convert 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >' to 'double' in initialization\n   73 |       Type exp_val = exp(\n      |            ^~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:60:12: error: conversion from 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   60 |       Type exp_val = exp(\n      |            ^~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:73:12: error: conversion from 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > >' to non-scalar type 'CppAD::AD<CppAD::AD<double> >' requested\n   73 |       Type exp_val = exp(\n      |            ^~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:60:12: error: conversion from 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   60 |       Type exp_val = exp(\n      |            ^~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:73:12: error: conversion from 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > >' to non-scalar type 'CppAD::AD<CppAD::AD<CppAD::AD<double> > >' requested\n   73 |       Type exp_val = exp(\n      |            ^~~~~~~\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "6": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp -o POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:60:22: error: invalid cast from type 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >' to type 'double'\n   60 |       Type exp_val = Type(exp(\n      |                      ^~~~~~~~~\n   61 |         -(growth_slow\n      |         ~~~~~~~~~~~~~ \n   62 |           - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt)\n      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   63 |           - beta_slow * (cots_dat[i] / (cots_half + cots_dat[i]))\n      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   64 |           - delta * (sst_dat[i]-Topt) * (cots_dat[i] / (cots_half + cots_dat[i]))\n      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   65 |           - theta * bleach\n      |           ~~~~~~~~~~~~~~~~\n   66 |         )\n      |         ~             \n   67 |       ));\n      |       ~~              \nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:73:22: error: invalid cast from type 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > >' to type 'double'\n   73 |       Type exp_val = Type(exp(\n      |                      ^~~~~~~~~\n   74 |         -(growth_fast\n      |         ~~~~~~~~~~~~~ \n   75 |           - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt)\n      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   76 |           - beta_fast * (cots_dat[i] / (cots_half + cots_dat[i]))\n      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   77 |           - delta * (sst_dat[i]-Topt) * (cots_dat[i] / (cots_half + cots_dat[i]))\n      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   78 |           - theta * bleach\n      |           ~~~~~~~~~~~~~~~~\n   79 |         )\n      |         ~             \n   80 |       ));\n      |       ~~              \nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/user_ad.hpp:66,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/cppad.hpp:82,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:121,\n                 from POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > >; Base = double]':\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:60:22:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > >' to type 'double'\n  184 | : value_(Base(t))\n      |          ^~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > >; Base = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10:   required from 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > >; Base = CppAD::AD<double>]'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:60:22:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > >' to type 'double'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > >; Base = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10:   recursively required from 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > >; Base = CppAD::AD<double>]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10:   required from 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > >; Base = CppAD::AD<CppAD::AD<double> >]'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.cpp:60:22:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type 'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > >' to type 'double'\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0003//INDIVIDUAL_91ZXUA7K/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "7": {
      "status": "BROKEN"
    }
  }
}