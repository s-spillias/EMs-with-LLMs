{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.cpp -o POPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.cpp: In instantiation of 'Type objective_function<Type>::operator()() [with Type = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2031:7:   required from here\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.cpp:57:18: error: cannot convert 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >' to 'Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>::Scalar' {aka 'double'} in assignment\n   57 |     slow_pred[i] = slow_base / (1 + exp(-(growth_slow - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - theta*(sst_dat[i]-Topt) - beta_slow * cots_dat[i] - delta*(sst_dat[i]-Topt)*cots_dat[i]))) + eps; // (1) logistic regulation with interaction term\n      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.cpp:58:18: error: cannot convert 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<double>, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::Array<double, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >' to 'Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>::Scalar' {aka 'double'} in assignment\n   58 |     fast_pred[i] = fast_base / (1 + exp(-(growth_fast - gamma * (sst_dat[i] - Topt) * (sst_dat[i] - Topt) - theta*(sst_dat[i]-Topt) - beta_fast * cots_dat[i] - delta*(sst_dat[i]-Topt)*cots_dat[i]))) + eps;   // (2) logistic regulation with interaction term\n      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/user_ad.hpp:67,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/cppad.hpp:82,\n                 from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/TMB.hpp:121,\n                 from POPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.cpp:1:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp: In instantiation of 'CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; Base = double]':\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.cpp:57:18:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:1308:6:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp:141:24: error: invalid cast from type 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<double> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >' to type 'double'\n  141 | {       return *this = Base(t); }\n      |                        ^~~~~~~\nIn file included from C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/user_ad.hpp:66:\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; Base = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp:141:18:   required from 'CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<double>]'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.cpp:57:18:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2112:26:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >' to type 'double'\n  184 | : value_(Base(t))\n      |          ^~~~~~~\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = double]':\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10:   required from 'CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<double>]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_assign.hpp:141:18:   required from 'CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<CppAD::AD<double> >]'\nPOPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.cpp:57:18:   required from 'Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:913:29:   required from 'Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]'\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/tmb_core.hpp:2361:28:   required from here\nC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/library/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_exp_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > > > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >' to type 'double'\nmake: *** [C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/etc/x64/Makeconf:296: POPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "SUCCESS",
      "objective_value": 0.7787,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         14     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "growth_fast": -7.8086,
        "cots_pred": [
          0.5053,
          0.5071,
          0.5251,
          0.4478,
          0.5,
          0.5143,
          0.4838,
          0.4766,
          0.482,
          1.9532,
          0.473,
          2.0658,
          1.1838,
          0.464,
          0.4172,
          0.5197,
          0.5431,
          0.5647,
          0.4568,
          0.4622,
          0.4406,
          0.4694,
          0.482,
          0.5,
          0.4514,
          0.473
        ],
        "growth_slow": -8.8143,
        "fast_pred": [
          6.7855,
          9.5818,
          9.8806,
          10.1417,
          10.1129,
          9.6517,
          10.1419,
          10.0786,
          9.0664,
          10.1611,
          10.1654,
          10.1658,
          10.0485,
          10.1658,
          10.1627,
          9.9459,
          10.1275,
          10.1649,
          10.1509,
          3.7793,
          2.2125,
          3.1973,
          5.232,
          6.1445,
          5.1011,
          8.4384
        ],
        "cots_rate": 0.018,
        "slow_pred": [
          10.1851,
          15.5633,
          15.8661,
          15.9602,
          15.9623,
          15.6108,
          15.9685,
          15.9305,
          14.9652,
          15.9743,
          15.9766,
          15.9767,
          15.9176,
          15.9767,
          15.9739,
          15.9118,
          15.9277,
          15.9755,
          15.9685,
          6.0589,
          3.0847,
          4.9933,
          8.6895,
          9.4862,
          8.2963,
          14.1043
        ]
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.5053,
            0.5071,
            0.5251,
            0.4478,
            0.5,
            0.5143,
            0.4838,
            0.4766,
            0.482,
            1.9532,
            0.473,
            2.0658,
            1.1838,
            0.464,
            0.4172,
            0.5197,
            0.5431,
            0.5647,
            0.4568,
            0.4622,
            0.4406,
            0.4694,
            0.482,
            0.5,
            0.4514,
            0.473
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.1851,
            15.5633,
            15.8661,
            15.9602,
            15.9623,
            15.6108,
            15.9685,
            15.9305,
            14.9652,
            15.9743,
            15.9766,
            15.9767,
            15.9176,
            15.9767,
            15.9739,
            15.9118,
            15.9277,
            15.9755,
            15.9685,
            6.0589,
            3.0847,
            4.9933,
            8.6895,
            9.4862,
            8.2963,
            14.1043
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            6.7855,
            9.5818,
            9.8806,
            10.1417,
            10.1129,
            9.6517,
            10.1419,
            10.0786,
            9.0664,
            10.1611,
            10.1654,
            10.1658,
            10.0485,
            10.1658,
            10.1627,
            9.9459,
            10.1275,
            10.1649,
            10.1509,
            3.7793,
            2.2125,
            3.1973,
            5.232,
            6.1445,
            5.1011,
            8.4384
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17  -I\"C:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/include\" -DNDEBUG -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/TMB/include\" -I\"C:/Users/spi085/AppData/Local/Programs/R/R-44~1.1/library/RCPPEI~1/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK    -I\"C:/rtools44/x86_64-w64-mingw32.static.posix/include\"     -O2 -Wa,-mbig-obj -c POPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.cpp -o POPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.o\ng++ -std=gnu++17 -shared -s -static-libgcc -o POPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.dll tmp.def POPULATIONS//POPULATION_0003//INDIVIDUAL_VSIGY12Z/model.o -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib/x64 -LC:/rtools44/x86_64-w64-mingw32.static.posix/lib -LC:/Users/spi085/AppData/Local/Programs/R/R-4.4.1/bin/x64 -lR\nStarting model phases\nNumber of phases: 1 \nPhase 1 \nInitial parameter values for phase 1 :\nlog_growth_slow log_growth_fast       beta_slow       beta_fast       slow_base \n           0.00            0.14            0.10            0.10           80.00 \n      fast_base   log_cots_rate      sigma_slow      sigma_fast      sigma_cots \n          60.00            0.00            0.10            0.10            0.10 \n          gamma            Topt           delta           theta \n           0.00           27.00            0.01            0.00 \nFinal parameter values for phase 1 :\nlog_growth_slow log_growth_fast       beta_slow       beta_fast       slow_base \n     -0.7675932       0.8067124     -21.8291907     -16.4807982      16.2357732 \n      fast_base   log_cots_rate      sigma_slow      sigma_fast      sigma_cots \n     10.5890258      -4.0182927       0.5606574       0.4839589       0.5056335 \n          gamma            Topt           delta           theta \n     -0.1857287      19.2672024       1.0240563       1.8940349 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 59.04001 \nGradient at solution for phase 1 :\n             [,1]        [,2]        [,3]       [,4]        [,5]        [,6]\n[1,] 0.0008932588 -0.09789018 0.001513205 0.04129934 0.002599673 -0.03206485\n             [,7]       [,8]        [,9]      [,10]    [,11]       [,12]\n[1,] -0.001182723 0.03081977 -0.08525924 0.01677478 1.839614 -0.06050528\n         [,13]     [,14]\n[1,] 0.2033547 0.4497225\nFinal Phase\nInitial parameter values for final phase:\nlog_growth_slow log_growth_fast       beta_slow       beta_fast       slow_base \n     -0.7675932       0.8067124     -21.8291907     -16.4807982      16.2357732 \n      fast_base   log_cots_rate      sigma_slow      sigma_fast      sigma_cots \n     10.5890258      -4.0182927       0.5606574       0.4839589       0.5056335 \n          gamma            Topt           delta           theta \n     -0.1857287      19.2672024       1.0240563       1.8940349 \nFinal parameter values for final phase:\nlog_growth_slow log_growth_fast       beta_slow       beta_fast       slow_base \n     -8.8143239      -7.8086329     -46.0433069     -42.7034641      15.9766548 \n      fast_base   log_cots_rate      sigma_slow      sigma_fast      sigma_cots \n     10.1658250      -4.0182802       0.5620542       0.4788596       0.5055509 \n          gamma            Topt           delta           theta \n     -0.3596496      21.8983798       5.7214112       1.1634273 \nConvergence message: relative convergence (4) \nNumber of iterations: 64 \nObjective function value: 58.81732 \nGradient at solution for final phase:\n              [,1]          [,2]         [,3]         [,4]          [,5]\n[1,] -1.000001e-05 -2.066032e-05 3.766458e-06 6.075606e-06 -2.465959e-06\n              [,6]          [,7]          [,8]          [,9]        [,10]\n[1,] -2.441632e-06 -2.939443e-05 -6.748089e-06 -9.504197e-06 -9.63884e-06\n            [,11]         [,12]        [,13]       [,14]\n[1,] 0.0004166451 -9.748363e-06 3.702824e-05 0.000114324\nAll phases completed\n\nDEBUG: Report contents:\nList of 6\n $ growth_fast: num -7.81\n $ cots_pred  : num [1:26] 0.505 0.507 0.525 0.448 0.5 ...\n $ growth_slow: num -8.81\n $ fast_pred  : num [1:26] 6.79 9.58 9.88 10.14 10.11 ...\n $ cots_rate  : num 0.018\n $ slow_pred  : num [1:26] 10.2 15.6 15.9 16 16 ...\nNULL\n\nDEBUG: Available variables in report:\n[1] \"growth_fast\" \"cots_pred\"   \"growth_slow\" \"fast_pred\"   \"cots_rate\"  \n[6] \"slow_pred\"  \n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.5053467 0.5071451 0.5251289 0.4477983 0.4999515 0.5143386 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.4172  0.4653  0.4829  0.6293  0.5184  2.0658 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 10.18508 15.56326 15.86614 15.96022 15.96229 15.61084 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  3.085  11.165  15.915  13.473  15.968  15.977 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 6.785525 9.581781 9.880613 10.14166 10.11293 9.651667 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.212   7.199   9.997   8.492  10.149  10.166 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing sst_pred \nDEBUG: sst_pred not found in report\nDEBUG: Available variables: growth_fast, cots_pred, growth_slow, fast_pred, cots_rate, slow_pred \n\nDEBUG: Calculating MSE for each variable:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.5053467 0.5071451 0.5251289 0.4477983 0.4999515 0.5143386 ...\nMSE (normalized): 0.9035234 \n\nDEBUG: slow_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.18508 15.56326 15.86614 15.96022 15.96229 15.61084 ...\nMSE (normalized): 0.7610464 \n\nDEBUG: fast_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 6.785525 9.581781 9.880613 10.14166 10.11293 9.651667 ...\nMSE (normalized): 0.6714438 \n\nDEBUG: MSE values:\n   cots_dat    slow_dat    fast_dat     sst_dat cotsimm_dat \n  0.9035234   0.7610464   0.6714438          NA          NA \n\nDEBUG: Final objective value (mean of MSEs): 0.7786712 \n\nFinal objective function value: 0.7786712 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 0.7787,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         14     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"growth_fast\": -7.8086,\n    \"cots_pred\": [0.5053, 0.5071, 0.5251, 0.4478, 0.5, 0.5143, 0.4838, 0.4766, 0.482, 1.9532, 0.473, 2.0658, 1.1838, 0.464, 0.4172, 0.5197, 0.5431, 0.5647, 0.4568, 0.4622, 0.4406, 0.4694, 0.482, 0.5, 0.4514, 0.473],\n    \"growth_slow\": -8.8143,\n    \"fast_pred\": [6.7855, 9.5818, 9.8806, 10.1417, 10.1129, 9.6517, 10.1419, 10.0786, 9.0664, 10.1611, 10.1654, 10.1658, 10.0485, 10.1658, 10.1627, 9.9459, 10.1275, 10.1649, 10.1509, 3.7793, 2.2125, 3.1973, 5.232, 6.1445, 5.1011, 8.4384],\n    \"cots_rate\": 0.018,\n    \"slow_pred\": [10.1851, 15.5633, 15.8661, 15.9602, 15.9623, 15.6108, 15.9685, 15.9305, 14.9652, 15.9743, 15.9766, 15.9767, 15.9176, 15.9767, 15.9739, 15.9118, 15.9277, 15.9755, 15.9685, 6.0589, 3.0847, 4.9933, 8.6895, 9.4862, 8.2963, 14.1043]\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.5053, 0.5071, 0.5251, 0.4478, 0.5, 0.5143, 0.4838, 0.4766, 0.482, 1.9532, 0.473, 2.0658, 1.1838, 0.464, 0.4172, 0.5197, 0.5431, 0.5647, 0.4568, 0.4622, 0.4406, 0.4694, 0.482, 0.5, 0.4514, 0.473],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.1851, 15.5633, 15.8661, 15.9602, 15.9623, 15.6108, 15.9685, 15.9305, 14.9652, 15.9743, 15.9766, 15.9767, 15.9176, 15.9767, 15.9739, 15.9118, 15.9277, 15.9755, 15.9685, 6.0589, 3.0847, 4.9933, 8.6895, 9.4862, 8.2963, 14.1043],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [6.7855, 9.5818, 9.8806, 10.1417, 10.1129, 9.6517, 10.1419, 10.0786, 9.0664, 10.1611, 10.1654, 10.1658, 10.0485, 10.1658, 10.1627, 9.9459, 10.1275, 10.1649, 10.1509, 3.7793, 2.2125, 3.1973, 5.232, 6.1445, 5.1011, 8.4384],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at C:/Users/spi085/OneDrive - CSIRO/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: 'G__~1.EXE (GCC) 13.2.0'"
    },
    "3": {
      "status": "SUCCESS",
      "objective_value": 0.7787
    }
  }
}