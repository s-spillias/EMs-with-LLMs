Assessment of Current Model:
1. Model Fit: The model uses a process-based approach with lognormal likelihoods for COTS and coral cover, but without access to the residuals file, a detailed fit assessment is not possible. However, the structure is appropriate for time-series ecological data.
2. Project Context: The model captures key features of COTS outbreaks (boom-bust cycles, predation on coral, SST and immigration triggers). It includes resource limitation, environmental modifiers (SST), and outbreak thresholds.
3. Missing/Oversimplified Processes: The model currently assumes that COTS predation on coral is partitioned by coral type using a Holling Type II functional response, but it does not explicitly account for the possibility that COTS may switch their feeding preference depending on the relative abundance of coral types (prey switching). This can be ecologically important during outbreaks, as COTS may disproportionately consume the more abundant coral type, which can amplify boom-bust cycles and alter coral community composition.

Chosen Improvement:
I will implement a prey-switching functional response (e.g., a modified Holling Type III or a sigmoid preference function) for COTS predation on fast and slow coral. This introduces a non-linear, abundance-dependent predation rate, better capturing the ecological reality that COTS may switch to whichever coral type is more abundant. This mechanism is well-supported in predator-prey theory and is justified by observations of COTS outbreaks where predation pressure shifts as coral composition changes. This improvement should enhance the model's ability to reproduce the timing, magnitude, and duration of COTS outbreaks and their impact on coral communities.

Implementation:
- Add a prey-switching exponent parameter (q_switch) to parameters.json.
- Modify model.cpp so that predation on each coral type uses a generalized functional response: pred_x = alpha_x * cots_prev * (coral_x_prev^q_switch) / (fast_prev^q_switch + slow_prev^q_switch + eps).
- This allows for flexible switching behavior: q_switch=1 recovers Holling II, q_switch>1 gives switching (Holling III-like).
- This change is ecologically justified and mathematically robust, and does not introduce data leakage.
