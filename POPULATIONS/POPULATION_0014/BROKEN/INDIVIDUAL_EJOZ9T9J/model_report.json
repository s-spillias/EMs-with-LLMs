{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp -o POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:156:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  156 |     cots_pred(i) = fmax(cots_pred(i), Type(1e-8));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\nIn file included from /usr/include/c++/13/cmath:47,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Macros.h:679,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Core:19,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Dense:1,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:92,\n                 from POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:157:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  157 |     fast_pred(i) = fmax(fast_pred(i), Type(1e-8));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:158:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  158 |     slow_pred(i) = fmax(slow_pred(i), Type(1e-8));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:156:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  156 |     cots_pred(i) = fmax(cots_pred(i), Type(1e-8));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:157:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  157 |     fast_pred(i) = fmax(fast_pred(i), Type(1e-8));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:158:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  158 |     slow_pred(i) = fmax(slow_pred(i), Type(1e-8));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:156:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  156 |     cots_pred(i) = fmax(cots_pred(i), Type(1e-8));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:157:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  157 |     fast_pred(i) = fmax(fast_pred(i), Type(1e-8));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp:158:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  158 |     slow_pred(i) = fmax(slow_pred(i), Type(1e-8));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "SUCCESS",
      "objective_value": 0.7166,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         17     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "cots_pred": [
          0.2615,
          0.3677,
          0.4816,
          0.5942,
          0.6196,
          0.6624,
          0.6817,
          0.6563,
          0.6109,
          0.5593,
          1.9879,
          0.8128,
          2.2469,
          1.4715,
          0.928,
          0.6799,
          0.6409,
          0.6136,
          0.589,
          0.5032,
          0.4397,
          0.3727,
          0.3321,
          0.2989,
          0.271,
          0.2316
        ],
        "fast_pred": [
          10.0694,
          12.2157,
          14.2236,
          15.7876,
          17.6235,
          19.0035,
          20.181,
          21.7657,
          24.023,
          27.1758,
          32.0303,
          23.2498,
          24.6102,
          12.3674,
          7.823,
          7.411,
          6.6426,
          5.9193,
          5.2543,
          5.2836,
          5.5493,
          6.222,
          7.0489,
          8.1389,
          9.5479,
          11.705
        ],
        "slow_pred": [
          12.7726,
          12.5139,
          12.1804,
          11.7689,
          11.381,
          10.9493,
          10.5104,
          10.1119,
          9.762,
          9.4595,
          9.2251,
          8.4486,
          8.1062,
          7.1864,
          6.4935,
          6.1356,
          5.7564,
          5.3966,
          5.0569,
          4.8168,
          4.6163,
          4.4671,
          4.3296,
          4.2087,
          4.1014,
          4.0252
        ]
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.3677,
            0.4816,
            0.5942,
            0.6196,
            0.6624,
            0.6817,
            0.6563,
            0.6109,
            0.5593,
            1.9879,
            0.8128,
            2.2469,
            1.4715,
            0.928,
            0.6799,
            0.6409,
            0.6136,
            0.589,
            0.5032,
            0.4397,
            0.3727,
            0.3321,
            0.2989,
            0.271,
            0.2316
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            12.2157,
            14.2236,
            15.7876,
            17.6235,
            19.0035,
            20.181,
            21.7657,
            24.023,
            27.1758,
            32.0303,
            23.2498,
            24.6102,
            12.3674,
            7.823,
            7.411,
            6.6426,
            5.9193,
            5.2543,
            5.2836,
            5.5493,
            6.222,
            7.0489,
            8.1389,
            9.5479,
            11.705
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            12.5139,
            12.1804,
            11.7689,
            11.381,
            10.9493,
            10.5104,
            10.1119,
            9.762,
            9.4595,
            9.2251,
            8.4486,
            8.1062,
            7.1864,
            6.4935,
            6.1356,
            5.7564,
            5.3966,
            5.0569,
            4.8168,
            4.6163,
            4.4671,
            4.3296,
            4.2087,
            4.1014,
            4.0252
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp -o POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.so POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n         log_cots_ar           log_cots_h logit_cots_pref_fast \n               -2.30                -3.00                 1.38 \n   log_cots_eff_fast    log_cots_eff_slow        log_cots_mort \n               -2.30                -3.00                -1.60 \n    log_cots_mort_dd         sst_opt_cots   log_sst_width_cots \n               -2.30                28.00                 1.60 \n         log_fast_gr          log_slow_gr          log_K_total \n               -0.90                -2.30                 4.38 \nStarting model phases\nNumber of phases: 4 \nPhase 1 \nInitial parameter values for phase 1 :\n      log_cots_ar log_cots_eff_fast log_cots_eff_slow     log_cots_mort \n             -2.3              -2.3              -3.0              -1.6 \n      log_fast_gr       log_slow_gr \n             -0.9              -2.3 \nFinal parameter values for phase 1 :\n      log_cots_ar log_cots_eff_fast log_cots_eff_slow     log_cots_mort \n       -1.1004782       -22.0861874        -0.4022554        -1.2566412 \n      log_fast_gr       log_slow_gr \n       -1.2917224       -82.4005146 \nConvergence message: singular convergence (7) \nNumber of iterations: 80 \nObjective function value: 932.0075 \nGradient at solution for phase 1 :\n             [,1]         [,2]         [,3]          [,4]         [,5]\n[1,] 0.0002010751 2.140025e-07 0.0001253534 -0.0001115743 -0.000126471\n              [,6]\n[1,] -9.294189e-34\nPhase 2 \nInitial parameter values for phase 2 :\n          log_cots_h logit_cots_pref_fast     log_cots_mort_dd \n               -3.00                 1.38                -2.30 \n         log_K_total \n                4.38 \nFinal parameter values for phase 2 :\n          log_cots_h logit_cots_pref_fast     log_cots_mort_dd \n           -3.483142             1.438526            -2.062095 \n         log_K_total \n            4.450980 \nConvergence message: relative convergence (4) \nNumber of iterations: 27 \nObjective function value: 908.7589 \nGradient at solution for phase 2 :\n             [,1]         [,2]         [,3]         [,4]\n[1,] 2.331727e-05 3.097044e-05 6.747338e-05 4.170102e-05\nPhase 3 \nInitial parameter values for phase 3 :\n      sst_opt_cots log_sst_width_cots        log_comp_fs        log_comp_sf \n             28.00               1.60              -0.22               0.18 \nFinal parameter values for phase 3 :\n      sst_opt_cots log_sst_width_cots        log_comp_fs        log_comp_sf \n         30.785498           2.815301          -1.363144           0.180000 \nConvergence message: relative convergence (4) \nNumber of iterations: 28 \nObjective function value: 869.8256 \nGradient at solution for phase 3 :\n             [,1]          [,2]          [,3]         [,4]\n[1,] 3.058571e-06 -2.648283e-05 -1.269821e-05 1.393129e-33\nPhase 4 \nInitial parameter values for phase 4 :\nlog_sd_cots log_sd_fast log_sd_slow \n       -2.3        -2.3        -2.3 \nFinal parameter values for phase 4 :\nlog_sd_cots log_sd_fast log_sd_slow \n -0.4718781  -0.6956225  -0.9660912 \nConvergence message: relative convergence (4) \nNumber of iterations: 11 \nObjective function value: 53.08061 \nGradient at solution for phase 4 :\n              [,1]          [,2]          [,3]\n[1,] -1.202421e-05 -1.918312e-06 -1.778093e-05\nFinal Phase\nInitial parameter values for final phase:\n         log_cots_ar           log_cots_h logit_cots_pref_fast \n          -1.1004782           -3.4831416            1.4385263 \n   log_cots_eff_fast    log_cots_eff_slow        log_cots_mort \n         -22.0861874           -0.4022554           -1.2566412 \n    log_cots_mort_dd         sst_opt_cots   log_sst_width_cots \n          -2.0620945           30.7854979            2.8153013 \n         log_fast_gr          log_slow_gr          log_K_total \n          -1.2917224          -82.4005146            4.4509795 \n         log_comp_fs          log_comp_sf          log_sd_cots \n          -1.3631438            0.1800000           -0.4718781 \n         log_sd_fast          log_sd_slow \n          -0.6956225           -0.9660912 \nFinal parameter values for final phase:\n         log_cots_ar           log_cots_h logit_cots_pref_fast \n           0.2379637           -2.8473571            2.0312051 \n   log_cots_eff_fast    log_cots_eff_slow        log_cots_mort \n         -22.0861810           -0.2551574           -1.2750387 \n    log_cots_mort_dd         sst_opt_cots   log_sst_width_cots \n          -1.1742883           32.0000000            2.0447793 \n         log_fast_gr          log_slow_gr          log_K_total \n          -1.0008799          -82.4005146           12.2773191 \n         log_comp_fs          log_comp_sf          log_sd_cots \n          -1.6188873            0.1800000           -0.7358931 \n         log_sd_fast          log_sd_slow \n          -0.8175613           -0.9174259 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 44.63331 \nGradient at solution for final phase:\n          [,1]      [,2]      [,3]          [,4]     [,5]      [,6]\n[1,] 0.4787776 -2.050219 -1.567376 -1.743387e-09 1.497984 0.1580305\n             [,7]      [,8]    [,9]     [,10]         [,11]         [,12]\n[1,] -0.004555474 -0.283611 1.51574 -2.015178 -1.062954e-34 -0.0001079197\n           [,13]        [,14]      [,15]     [,16]     [,17]\n[1,] 4.00926e-05 1.276123e-38 0.06072393 -0.135307 0.1047263\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 3\n $ cots_pred: num [1:26] 0.262 0.368 0.482 0.594 0.62 ...\n $ fast_pred: num [1:26] 10.1 12.2 14.2 15.8 17.6 ...\n $ slow_pred: num [1:26] 12.8 12.5 12.2 11.8 11.4 ...\nNULL\n\nDEBUG: Available variables in report:\n[1] \"cots_pred\" \"fast_pred\" \"slow_pred\"\n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.3677089 0.481575 0.5941988 0.6195735 0.6623618 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.2316  0.3894  0.6026  0.6890  0.6755  2.2469 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 12.21572 14.22358 15.78765 17.6235 19.00352 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  5.254   7.139  11.960  13.880  19.887  32.030 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 12.51395 12.18044 11.76891 11.38104 10.94926 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.025   4.877   7.646   7.838  10.411  12.773 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.3677089 0.481575 0.5941988 0.6195735 0.6623618 ...\nMSE (normalized): 1.298143 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 12.21572 14.22358 15.78765 17.6235 19.00352 ...\nMSE (normalized): 0.4119171 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 12.51395 12.18044 11.76891 11.38104 10.94926 ...\nMSE (normalized): 0.4398567 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n1.2981433 0.4119171 0.4398567 \n\nDEBUG: Final objective value (mean of MSEs): 0.716639 \n\nFinal objective function value: 0.716639 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 0.7166,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         17     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"cots_pred\": [0.2615, 0.3677, 0.4816, 0.5942, 0.6196, 0.6624, 0.6817, 0.6563, 0.6109, 0.5593, 1.9879, 0.8128, 2.2469, 1.4715, 0.928, 0.6799, 0.6409, 0.6136, 0.589, 0.5032, 0.4397, 0.3727, 0.3321, 0.2989, 0.271, 0.2316],\n    \"fast_pred\": [10.0694, 12.2157, 14.2236, 15.7876, 17.6235, 19.0035, 20.181, 21.7657, 24.023, 27.1758, 32.0303, 23.2498, 24.6102, 12.3674, 7.823, 7.411, 6.6426, 5.9193, 5.2543, 5.2836, 5.5493, 6.222, 7.0489, 8.1389, 9.5479, 11.705],\n    \"slow_pred\": [12.7726, 12.5139, 12.1804, 11.7689, 11.381, 10.9493, 10.5104, 10.1119, 9.762, 9.4595, 9.2251, 8.4486, 8.1062, 7.1864, 6.4935, 6.1356, 5.7564, 5.3966, 5.0569, 4.8168, 4.6163, 4.4671, 4.3296, 4.2087, 4.1014, 4.0252]\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.3677, 0.4816, 0.5942, 0.6196, 0.6624, 0.6817, 0.6563, 0.6109, 0.5593, 1.9879, 0.8128, 2.2469, 1.4715, 0.928, 0.6799, 0.6409, 0.6136, 0.589, 0.5032, 0.4397, 0.3727, 0.3321, 0.2989, 0.271, 0.2316],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 12.2157, 14.2236, 15.7876, 17.6235, 19.0035, 20.181, 21.7657, 24.023, 27.1758, 32.0303, 23.2498, 24.6102, 12.3674, 7.823, 7.411, 6.6426, 5.9193, 5.2543, 5.2836, 5.5493, 6.222, 7.0489, 8.1389, 9.5479, 11.705],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 12.5139, 12.1804, 11.7689, 11.381, 10.9493, 10.5104, 10.1119, 9.762, 9.4595, 9.2251, 8.4486, 8.1062, 7.1864, 6.4935, 6.1356, 5.7564, 5.3966, 5.0569, 4.8168, 4.6163, 4.4671, 4.3296, 4.2087, 4.1014, 4.0252],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning messages:\n1: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n2: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "3": {
      "status": "SUCCESS",
      "objective_value": 0.7166
    },
    "4": {
      "status": "ERROR",
      "message": "R script failed with return code 1",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.cpp -o POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.so POPULATIONS/POPULATION_0014/INDIVIDUAL_EJOZ9T9J/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n         log_cots_ar           log_cots_h logit_cots_pref_fast \n              -2.300               -3.000                1.380 \n   log_cots_eff_fast    log_cots_eff_slow        log_cots_mort \n              -2.300               -3.000                1.078 \n    log_cots_mort_dd         sst_opt_cots   log_sst_width_cots \n              -2.300               28.000                1.600 \n         log_fast_gr          log_slow_gr          log_K_total \n              -0.900               -2.300                4.380 \nStarting model phases\nNumber of phases: 4 \nPhase 1 \nInitial parameter values for phase 1 :\n      log_cots_ar log_cots_eff_fast log_cots_eff_slow     log_cots_mort \n           -2.300            -2.300            -3.000             1.078 \n      log_fast_gr       log_slow_gr \n           -0.900            -2.300 \nClamping starts up to lower bounds for:\n log_cots_ar, log_cots_eff_fast, log_cots_eff_slow, log_fast_gr, log_slow_gr \nFinal parameter values for phase 1 :\n      log_cots_ar log_cots_eff_fast log_cots_eff_slow     log_cots_mort \n     1.000000e+01      8.962940e-04      6.609609e-05      1.077859e+00 \n      log_fast_gr       log_slow_gr \n     1.456437e-01      1.000000e-03 \nConvergence message: relative convergence (4) \nNumber of iterations: 17 \nObjective function value: 339209.1 \nGradient at solution for phase 1 :\n             [,1]          [,2]         [,3]         [,4]        [,5]     [,6]\n[1,] -0.001989154 -1.254092e-05 -9.20914e-07 1.967774e-06 0.009350857 390.5516\nPhase 2 \nInitial parameter values for phase 2 :\n          log_cots_h logit_cots_pref_fast     log_cots_mort_dd \n               -3.00                 1.38                -2.30 \n         log_K_total \n                4.38 \nClamping starts up to lower bounds for:\n log_cots_h, log_cots_mort_dd, log_K_total \nClamping starts down to upper bounds for:\n logit_cots_pref_fast \nError in model phases: NA/NaN gradient evaluation",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nError in value[[3L]](cond) : \n  Error in model phases: NA/NaN gradient evaluation\nCalls: tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>\nIn addition: Warning message:\nIn nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\nExecution halted"
    },
    "5": {
      "status": "SUCCESS_PARTIAL",
      "message": "Final run after get_params failed; keeping initial objective value",
      "objective_value": 0.7166
    }
  }
}