{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "R script failed with return code 1",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.so POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 3 \nPhase 1 \nInitial parameter values for phase 1 :\n         r_cots          m_cots          a_fast          a_slow          r_fast \n           9.00            1.25              NA              NA              NA \n         r_slow      imm_effect allee_threshold  delay_strength \n             NA              NA              NA              NA \nError in model phases: NA/NaN gradient evaluation",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nError in value[[3L]](cond) : \n  Error in model phases: NA/NaN gradient evaluation\nCalls: tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>\nIn addition: Warning message:\nIn nlminb(model$par, model$fn, model$gr) : NA/NaN function evaluation\nExecution halted"
    },
    "2": {
      "status": "ERROR",
      "message": "R script failed with return code 1",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.so POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 3 \nPhase 1 \nInitial parameter values for phase 1 :\n         r_cots          m_cots          a_fast          a_slow          r_fast \n           9.00            1.25              NA              NA              NA \n         r_slow      imm_effect allee_threshold  delay_strength \n             NA              NA              NA              NA \nError in model phases: NA/NaN gradient evaluation",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nError in value[[3L]](cond) : \n  Error in model phases: NA/NaN gradient evaluation\nCalls: tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>\nIn addition: Warning message:\nIn nlminb(model$par, model$fn, model$gr) : NA/NaN function evaluation\nExecution halted"
    },
    "3": {
      "status": "ERROR",
      "message": "R script failed with return code 1",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.so POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 3 \nPhase 1 \nInitial parameter values for phase 1 :\n         r_cots          m_cots          a_fast          a_slow          r_fast \n           9.00            1.25              NA              NA              NA \n         r_slow      imm_effect allee_threshold  delay_strength \n             NA              NA              NA              NA \nError in model phases: NA/NaN gradient evaluation",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nError in value[[3L]](cond) : \n  Error in model phases: NA/NaN gradient evaluation\nCalls: tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>\nIn addition: Warning message:\nIn nlminb(model$par, model$fn, model$gr) : NA/NaN function evaluation\nExecution halted"
    },
    "4": {
      "status": "ERROR",
      "message": "R script failed with return code 1",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.so POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 3 \nPhase 1 \nInitial parameter values for phase 1 :\n         r_cots          m_cots          a_fast          a_slow          r_fast \n           9.00            1.25              NA              NA              NA \n         r_slow      imm_effect allee_threshold  delay_strength \n             NA              NA              NA              NA \nError in model phases: NA/NaN gradient evaluation",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nError in value[[3L]](cond) : \n  Error in model phases: NA/NaN gradient evaluation\nCalls: tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>\nIn addition: Warning message:\nIn nlminb(model$par, model$fn, model$gr) : NA/NaN function evaluation\nExecution halted"
    },
    "5": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:77:29: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   77 |     Type allee_param = fmax(allee_threshold, eps);\n      |                             ^~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<double>\nIn file included from /usr/include/c++/13/cmath:47,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Macros.h:679,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Core:19,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Dense:1,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:92,\n                 from POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:85:26: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   85 |       Type K_safe = fmax(K_cots, eps);\n      |                          ^~~~~~\n      |                          |\n      |                          CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:86:31: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   86 |       Type delay_param = fmin(delay_strength, Type(0.99));\n      |                               ^~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:88:25: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   88 |       delayed_dd = fmax(delay_term, eps);\n      |                         ^~~~~~~~~~\n      |                         |\n      |                         CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:92:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   92 |     Type r_safe = fmax(r_cots, eps);\n      |                        ^~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:93:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   93 |     Type K_safe = fmax(K_cots, eps);\n      |                        ^~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:100:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  100 |     cots_growth = fmax(cots_growth, Type(0.0));\n      |                        ^~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:107:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  107 |     cots_pred(t) = fmax(cots_pred(t), Type(0.0));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:115:29: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  115 |     Type K_fast_safe = fmax(K_fast, eps);\n      |                             ^~~~~~\n      |                             |\n      |                             CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:121:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  121 |     fast_growth = fmax(fast_growth, Type(0.0));\n      |                        ^~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:125:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  125 |     fast_pred(t) = fmax(fast_pred(t), Type(0.0));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:126:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  126 |     fast_pred(t) = fmin(fast_pred(t), K_fast);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:133:29: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  133 |     Type K_slow_safe = fmax(K_slow, eps);\n      |                             ^~~~~~\n      |                             |\n      |                             CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:139:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  139 |     slow_growth = fmax(slow_growth, Type(0.0));\n      |                        ^~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:143:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  143 |     slow_pred(t) = fmax(slow_pred(t), Type(0.0));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:144:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  144 |     slow_pred(t) = fmin(slow_pred(t), K_slow);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:190:29: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  190 |     Type allee_param = fmax(allee_threshold, eps);\n      |                             ^~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:196:26: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  196 |       Type K_safe = fmax(K_cots, eps);\n      |                          ^~~~~~\n      |                          |\n      |                          CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:197:31: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  197 |       Type delay_param = fmin(delay_strength, Type(0.99));\n      |                               ^~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:199:28: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  199 |       delayed_dd(t) = fmax(delay_term, eps);\n      |                            ^~~~~~~~~~\n      |                            |\n      |                            CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:77:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   77 |     Type allee_param = fmax(allee_threshold, eps);\n      |                             ^~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:85:26: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   85 |       Type K_safe = fmax(K_cots, eps);\n      |                          ^~~~~~\n      |                          |\n      |                          CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:86:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   86 |       Type delay_param = fmin(delay_strength, Type(0.99));\n      |                               ^~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:88:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   88 |       delayed_dd = fmax(delay_term, eps);\n      |                         ^~~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:92:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   92 |     Type r_safe = fmax(r_cots, eps);\n      |                        ^~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:93:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   93 |     Type K_safe = fmax(K_cots, eps);\n      |                        ^~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:100:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  100 |     cots_growth = fmax(cots_growth, Type(0.0));\n      |                        ^~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:107:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  107 |     cots_pred(t) = fmax(cots_pred(t), Type(0.0));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:115:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  115 |     Type K_fast_safe = fmax(K_fast, eps);\n      |                             ^~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:121:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  121 |     fast_growth = fmax(fast_growth, Type(0.0));\n      |                        ^~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:125:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  125 |     fast_pred(t) = fmax(fast_pred(t), Type(0.0));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:126:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  126 |     fast_pred(t) = fmin(fast_pred(t), K_fast);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:133:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  133 |     Type K_slow_safe = fmax(K_slow, eps);\n      |                             ^~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:139:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  139 |     slow_growth = fmax(slow_growth, Type(0.0));\n      |                        ^~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:143:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  143 |     slow_pred(t) = fmax(slow_pred(t), Type(0.0));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:144:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  144 |     slow_pred(t) = fmin(slow_pred(t), K_slow);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:190:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  190 |     Type allee_param = fmax(allee_threshold, eps);\n      |                             ^~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:196:26: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  196 |       Type K_safe = fmax(K_cots, eps);\n      |                          ^~~~~~\n      |                          |\n      |                          CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:197:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  197 |       Type delay_param = fmin(delay_strength, Type(0.99));\n      |                               ^~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:199:28: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  199 |       delayed_dd(t) = fmax(delay_term, eps);\n      |                            ^~~~~~~~~~\n      |                            |\n      |                            CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:77:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   77 |     Type allee_param = fmax(allee_threshold, eps);\n      |                             ^~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:85:26: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   85 |       Type K_safe = fmax(K_cots, eps);\n      |                          ^~~~~~\n      |                          |\n      |                          CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:86:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   86 |       Type delay_param = fmin(delay_strength, Type(0.99));\n      |                               ^~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:88:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   88 |       delayed_dd = fmax(delay_term, eps);\n      |                         ^~~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:92:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   92 |     Type r_safe = fmax(r_cots, eps);\n      |                        ^~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:93:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   93 |     Type K_safe = fmax(K_cots, eps);\n      |                        ^~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:100:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  100 |     cots_growth = fmax(cots_growth, Type(0.0));\n      |                        ^~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:107:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  107 |     cots_pred(t) = fmax(cots_pred(t), Type(0.0));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:115:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  115 |     Type K_fast_safe = fmax(K_fast, eps);\n      |                             ^~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:121:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  121 |     fast_growth = fmax(fast_growth, Type(0.0));\n      |                        ^~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:125:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  125 |     fast_pred(t) = fmax(fast_pred(t), Type(0.0));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:126:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  126 |     fast_pred(t) = fmin(fast_pred(t), K_fast);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:133:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  133 |     Type K_slow_safe = fmax(K_slow, eps);\n      |                             ^~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:139:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  139 |     slow_growth = fmax(slow_growth, Type(0.0));\n      |                        ^~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:143:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  143 |     slow_pred(t) = fmax(slow_pred(t), Type(0.0));\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:144:24: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  144 |     slow_pred(t) = fmin(slow_pred(t), K_slow);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:190:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  190 |     Type allee_param = fmax(allee_threshold, eps);\n      |                             ^~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:196:26: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  196 |       Type K_safe = fmax(K_cots, eps);\n      |                          ^~~~~~\n      |                          |\n      |                          CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:197:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  197 |       Type delay_param = fmin(delay_strength, Type(0.99));\n      |                               ^~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp:199:28: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  199 |       delayed_dd(t) = fmax(delay_term, eps);\n      |                            ^~~~~~~~~~\n      |                            |\n      |                            CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "6": {
      "status": "ERROR",
      "message": "R script failed with return code 1",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.cpp -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.so POPULATIONS/POPULATION_0006/INDIVIDUAL_EBKHCFHN/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 3 \nPhase 1 \nInitial parameter values for phase 1 :\n         r_cots          m_cots          a_fast          a_slow          r_fast \n           9.00            1.25              NA              NA              NA \n         r_slow      imm_effect allee_threshold  delay_strength \n             NA              NA              NA              NA \nError in model phases: NA/NaN gradient evaluation",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nError in value[[3L]](cond) : \n  Error in model phases: NA/NaN gradient evaluation\nCalls: tryCatch -> tryCatchList -> tryCatchOne -> <Anonymous>\nIn addition: Warning message:\nIn nlminb(model$par, model$fn, model$gr) : NA/NaN function evaluation\nExecution halted"
    },
    "7": {
      "status": "BROKEN"
    }
  }
}