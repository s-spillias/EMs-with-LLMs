{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nIn file included from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:228,\n                 from POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:1:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:8: error: \u2018Type\u2019 was not declared in this scope; did you mean \u2018Eigen::Architecture::Type\u2019?\n  237 | vector<Type> name;                                                      \\\n      |        ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:5:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    5 | DATA_VECTOR(Year); // Year (time variable, matches data file)\n      | ^~~~~~~~~~~\nIn file included from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Core:161,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Dense:1,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:92:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Constants.h:471:8: note: \u2018Eigen::Architecture::Type\u2019 declared here\n  471 |   enum Type {\n      |        ^~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:12: error: template argument 1 is invalid\n  237 | vector<Type> name;                                                      \\\n      |            ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:5:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    5 | DATA_VECTOR(Year); // Year (time variable, matches data file)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:238:1: error: expected unqualified-id before \u2018if\u2019\n  238 | if (!Rf_isNull(getListElement(TMB_OBJECTIVE_PTR -> parameters,#name))){ \\\n      | ^~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:5:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    5 | DATA_VECTOR(Year); // Year (time variable, matches data file)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:241:3: error: expected unqualified-id before \u2018else\u2019\n  241 | } else {                                                                \\\n      |   ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:5:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    5 | DATA_VECTOR(Year); // Year (time variable, matches data file)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:8: error: \u2018Type\u2019 was not declared in this scope; did you mean \u2018Eigen::Architecture::Type\u2019?\n  237 | vector<Type> name;                                                      \\\n      |        ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:6:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    6 | DATA_VECTOR(sst_dat); // Sea-surface temperature (deg C)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Constants.h:471:8: note: \u2018Eigen::Architecture::Type\u2019 declared here\n  471 |   enum Type {\n      |        ^~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:12: error: template argument 1 is invalid\n  237 | vector<Type> name;                                                      \\\n      |            ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:6:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    6 | DATA_VECTOR(sst_dat); // Sea-surface temperature (deg C)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:238:1: error: expected unqualified-id before \u2018if\u2019\n  238 | if (!Rf_isNull(getListElement(TMB_OBJECTIVE_PTR -> parameters,#name))){ \\\n      | ^~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:6:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    6 | DATA_VECTOR(sst_dat); // Sea-surface temperature (deg C)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:241:3: error: expected unqualified-id before \u2018else\u2019\n  241 | } else {                                                                \\\n      |   ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:6:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    6 | DATA_VECTOR(sst_dat); // Sea-surface temperature (deg C)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:8: error: \u2018Type\u2019 was not declared in this scope; did you mean \u2018Eigen::Architecture::Type\u2019?\n  237 | vector<Type> name;                                                      \\\n      |        ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:7:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    7 | DATA_VECTOR(cotsimm_dat); // COTS larval immigration (indiv/m2/year)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Constants.h:471:8: note: \u2018Eigen::Architecture::Type\u2019 declared here\n  471 |   enum Type {\n      |        ^~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:12: error: template argument 1 is invalid\n  237 | vector<Type> name;                                                      \\\n      |            ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:7:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    7 | DATA_VECTOR(cotsimm_dat); // COTS larval immigration (indiv/m2/year)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:238:1: error: expected unqualified-id before \u2018if\u2019\n  238 | if (!Rf_isNull(getListElement(TMB_OBJECTIVE_PTR -> parameters,#name))){ \\\n      | ^~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:7:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    7 | DATA_VECTOR(cotsimm_dat); // COTS larval immigration (indiv/m2/year)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:241:3: error: expected unqualified-id before \u2018else\u2019\n  241 | } else {                                                                \\\n      |   ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:7:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    7 | DATA_VECTOR(cotsimm_dat); // COTS larval immigration (indiv/m2/year)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:8: error: \u2018Type\u2019 was not declared in this scope; did you mean \u2018Eigen::Architecture::Type\u2019?\n  237 | vector<Type> name;                                                      \\\n      |        ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:8:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    8 | DATA_VECTOR(cots_dat); // Observed adult COTS abundance (indiv/m2)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Constants.h:471:8: note: \u2018Eigen::Architecture::Type\u2019 declared here\n  471 |   enum Type {\n      |        ^~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:12: error: template argument 1 is invalid\n  237 | vector<Type> name;                                                      \\\n      |            ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:8:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    8 | DATA_VECTOR(cots_dat); // Observed adult COTS abundance (indiv/m2)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:238:1: error: expected unqualified-id before \u2018if\u2019\n  238 | if (!Rf_isNull(getListElement(TMB_OBJECTIVE_PTR -> parameters,#name))){ \\\n      | ^~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:8:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    8 | DATA_VECTOR(cots_dat); // Observed adult COTS abundance (indiv/m2)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:241:3: error: expected unqualified-id before \u2018else\u2019\n  241 | } else {                                                                \\\n      |   ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:8:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    8 | DATA_VECTOR(cots_dat); // Observed adult COTS abundance (indiv/m2)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:8: error: \u2018Type\u2019 was not declared in this scope; did you mean \u2018Eigen::Architecture::Type\u2019?\n  237 | vector<Type> name;                                                      \\\n      |        ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:9:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    9 | DATA_VECTOR(fast_dat); // Observed fast coral cover (Acropora, %)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Constants.h:471:8: note: \u2018Eigen::Architecture::Type\u2019 declared here\n  471 |   enum Type {\n      |        ^~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:12: error: template argument 1 is invalid\n  237 | vector<Type> name;                                                      \\\n      |            ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:9:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    9 | DATA_VECTOR(fast_dat); // Observed fast coral cover (Acropora, %)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:238:1: error: expected unqualified-id before \u2018if\u2019\n  238 | if (!Rf_isNull(getListElement(TMB_OBJECTIVE_PTR -> parameters,#name))){ \\\n      | ^~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:9:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    9 | DATA_VECTOR(fast_dat); // Observed fast coral cover (Acropora, %)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:241:3: error: expected unqualified-id before \u2018else\u2019\n  241 | } else {                                                                \\\n      |   ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:9:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n    9 | DATA_VECTOR(fast_dat); // Observed fast coral cover (Acropora, %)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:8: error: \u2018Type\u2019 was not declared in this scope; did you mean \u2018Eigen::Architecture::Type\u2019?\n  237 | vector<Type> name;                                                      \\\n      |        ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:10:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n   10 | DATA_VECTOR(slow_dat); // Observed slow coral cover (Faviidae/Porites, %)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Constants.h:471:8: note: \u2018Eigen::Architecture::Type\u2019 declared here\n  471 |   enum Type {\n      |        ^~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:237:12: error: template argument 1 is invalid\n  237 | vector<Type> name;                                                      \\\n      |            ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:10:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n   10 | DATA_VECTOR(slow_dat); // Observed slow coral cover (Faviidae/Porites, %)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:238:1: error: expected unqualified-id before \u2018if\u2019\n  238 | if (!Rf_isNull(getListElement(TMB_OBJECTIVE_PTR -> parameters,#name))){ \\\n      | ^~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:10:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n   10 | DATA_VECTOR(slow_dat); // Observed slow coral cover (Faviidae/Porites, %)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:241:3: error: expected unqualified-id before \u2018else\u2019\n  241 | } else {                                                                \\\n      |   ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:10:1: note: in expansion of macro \u2018DATA_VECTOR\u2019\n   10 | DATA_VECTOR(slow_dat); // Observed slow coral cover (Faviidae/Porites, %)\n      | ^~~~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:14:1: note: in expansion of macro \u2018PARAMETER\u2019\n   14 | PARAMETER(log_r_cots); // log intrinsic growth rate of COTS (year^-1)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:15:1: note: in expansion of macro \u2018PARAMETER\u2019\n   15 | PARAMETER(log_K_cots); // log carrying capacity of COTS (indiv/m2)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:16:1: note: in expansion of macro \u2018PARAMETER\u2019\n   16 | PARAMETER(log_m_cots); // log baseline COTS mortality rate (year^-1)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:17:1: note: in expansion of macro \u2018PARAMETER\u2019\n   17 | PARAMETER(log_alpha_cots); // log COTS recruitment efficiency (unitless)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:18:1: note: in expansion of macro \u2018PARAMETER\u2019\n   18 | PARAMETER(log_beta_cots); // log half-saturation coral cover for COTS recruitment (%)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:19:1: note: in expansion of macro \u2018PARAMETER\u2019\n   19 | PARAMETER(log_gamma_cots); // log outbreak threshold parameter (unitless)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:20:1: note: in expansion of macro \u2018PARAMETER\u2019\n   20 | PARAMETER(log_temp_cots); // log temperature sensitivity of COTS recruitment (deg C^-1)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:21:1: note: in expansion of macro \u2018PARAMETER\u2019\n   21 | PARAMETER(log_phi_cots); // log effect of larval immigration on COTS recruitment (unitless)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:24:1: note: in expansion of macro \u2018PARAMETER\u2019\n   24 | PARAMETER(log_r_fast); // log growth rate of fast coral (year^-1)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:25:1: note: in expansion of macro \u2018PARAMETER\u2019\n   25 | PARAMETER(log_r_slow); // log growth rate of slow coral (year^-1)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:26:1: note: in expansion of macro \u2018PARAMETER\u2019\n   26 | PARAMETER(log_K_coral); // log total coral carrying capacity (% cover)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:27:1: note: in expansion of macro \u2018PARAMETER\u2019\n   27 | PARAMETER(log_m_fast); // log background mortality of fast coral (year^-1)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:28:1: note: in expansion of macro \u2018PARAMETER\u2019\n   28 | PARAMETER(log_m_slow); // log background mortality of slow coral (year^-1)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:29:1: note: in expansion of macro \u2018PARAMETER\u2019\n   29 | PARAMETER(log_q_fast); // log COTS predation rate on fast coral (m2/indiv/year)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:30:1: note: in expansion of macro \u2018PARAMETER\u2019\n   30 | PARAMETER(log_q_slow); // log COTS predation rate on slow coral (m2/indiv/year)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:31:1: note: in expansion of macro \u2018PARAMETER\u2019\n   31 | PARAMETER(log_e_fast); // log assimilation efficiency of fast coral to COTS (unitless)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:32:1: note: in expansion of macro \u2018PARAMETER\u2019\n   32 | PARAMETER(log_e_slow); // log assimilation efficiency of slow coral to COTS (unitless)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:35:1: note: in expansion of macro \u2018PARAMETER\u2019\n   35 | PARAMETER(log_sigma_cots); // log SD for COTS (lognormal)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:36:1: note: in expansion of macro \u2018PARAMETER\u2019\n   36 | PARAMETER(log_sigma_fast); // log SD for fast coral (lognormal)\n      | ^~~~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:228:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  228 | Type name(TMB_OBJECTIVE_PTR -> fillShape(                               \\\n      | ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:37:1: note: in expansion of macro \u2018PARAMETER\u2019\n   37 | PARAMETER(log_sigma_slow); // log SD for slow coral (lognormal)\n      | ^~~~~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:40:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   40 | Type r_cots = exp(log_r_cots); // COTS intrinsic growth rate (year^-1)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:41:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   41 | Type K_cots = exp(log_K_cots); // COTS carrying capacity (indiv/m2)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:42:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   42 | Type m_cots = exp(log_m_cots); // COTS baseline mortality (year^-1)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:43:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   43 | Type alpha_cots = exp(log_alpha_cots); // COTS recruitment efficiency\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:44:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   44 | Type beta_cots = exp(log_beta_cots); // COTS recruitment half-saturation (%)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:45:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   45 | Type gamma_cots = exp(log_gamma_cots); // Outbreak threshold parameter\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:46:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   46 | Type temp_cots = exp(log_temp_cots); // Temperature sensitivity (deg C^-1)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:47:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   47 | Type phi_cots = exp(log_phi_cots); // Larval immigration effect\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:49:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   49 | Type r_fast = exp(log_r_fast); // Fast coral growth rate (year^-1)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:50:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   50 | Type r_slow = exp(log_r_slow); // Slow coral growth rate (year^-1)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:51:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   51 | Type K_coral = exp(log_K_coral); // Total coral carrying capacity (%)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:52:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   52 | Type m_fast = exp(log_m_fast); // Fast coral background mortality (year^-1)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:53:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   53 | Type m_slow = exp(log_m_slow); // Slow coral background mortality (year^-1)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:54:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   54 | Type q_fast = exp(log_q_fast); // COTS predation rate on fast coral (m2/indiv/year)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:55:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   55 | Type q_slow = exp(log_q_slow); // COTS predation rate on slow coral (m2/indiv/year)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:56:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   56 | Type e_fast = exp(log_e_fast); // Assimilation efficiency (fast coral)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:57:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   57 | Type e_slow = exp(log_e_slow); // Assimilation efficiency (slow coral)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:59:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   59 | Type sigma_cots = exp(log_sigma_cots); // SD for COTS (lognormal)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:60:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   60 | Type sigma_fast = exp(log_sigma_fast); // SD for fast coral (lognormal)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:61:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n   61 | Type sigma_slow = exp(log_sigma_slow); // SD for slow coral (lognormal)\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:64:14: error: request for member \u2018size\u2019 in \u2018Year\u2019, which is of non-class type \u2018int\u2019\n   64 | int n = Year.size();\n      |              ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:65:8: error: \u2018Type\u2019 was not declared in this scope; did you mean \u2018Eigen::Architecture::Type\u2019?\n   65 | vector<Type> cots_pred(n); // Predicted COTS abundance (indiv/m2)\n      |        ^~~~\n      |        Eigen::Architecture::Type\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Constants.h:471:8: note: \u2018Eigen::Architecture::Type\u2019 declared here\n  471 |   enum Type {\n      |        ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:65:12: error: template argument 1 is invalid\n   65 | vector<Type> cots_pred(n); // Predicted COTS abundance (indiv/m2)\n      |            ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:66:8: error: \u2018Type\u2019 was not declared in this scope; did you mean \u2018Eigen::Architecture::Type\u2019?\n   66 | vector<Type> fast_pred(n); // Predicted fast coral cover (%)\n      |        ^~~~\n      |        Eigen::Architecture::Type\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Constants.h:471:8: note: \u2018Eigen::Architecture::Type\u2019 declared here\n  471 |   enum Type {\n      |        ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:66:12: error: template argument 1 is invalid\n   66 | vector<Type> fast_pred(n); // Predicted fast coral cover (%)\n      |            ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:67:8: error: \u2018Type\u2019 was not declared in this scope; did you mean \u2018Eigen::Architecture::Type\u2019?\n   67 | vector<Type> slow_pred(n); // Predicted slow coral cover (%)\n      |        ^~~~\n      |        Eigen::Architecture::Type\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Constants.h:471:8: note: \u2018Eigen::Architecture::Type\u2019 declared here\n  471 |   enum Type {\n      |        ^~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:67:12: error: template argument 1 is invalid\n   67 | vector<Type> slow_pred(n); // Predicted slow coral cover (%)\n      |            ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:70:10: error: expected constructor, destructor, or type conversion before \u2018(\u2019 token\n   70 | cots_pred(0) = cots_dat(0);\n      |          ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:71:10: error: expected constructor, destructor, or type conversion before \u2018(\u2019 token\n   71 | fast_pred(0) = fast_dat(0);\n      |          ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:72:10: error: expected constructor, destructor, or type conversion before \u2018(\u2019 token\n   72 | slow_pred(0) = slow_dat(0);\n      |          ^\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:75:1: error: expected unqualified-id before \u2018for\u2019\n   75 | for(int t=1; t<n; t++) {\n      | ^~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:75:14: error: \u2018t\u2019 does not name a type; did you mean \u2018tm\u2019?\n   75 | for(int t=1; t<n; t++) {\n      |              ^\n      |              tm\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:75:19: error: \u2018t\u2019 does not name a type; did you mean \u2018tm\u2019?\n   75 | for(int t=1; t<n; t++) {\n      |                   ^\n      |                   tm\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:117:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  117 | Type eps = Type(1e-3); // Minimum SD for numerical stability\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:118:1: error: \u2018Type\u2019 does not name a type; did you mean \u2018typeof\u2019?\n  118 | Type nll = 0.0;\n      | ^~~~\n      | typeof\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:119:1: error: expected unqualified-id before \u2018for\u2019\n  119 | for(int t=0; t<n; t++) {\n      | ^~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:119:14: error: \u2018t\u2019 does not name a type; did you mean \u2018tm\u2019?\n  119 | for(int t=0; t<n; t++) {\n      |              ^\n      |              tm\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:119:19: error: \u2018t\u2019 does not name a type; did you mean \u2018tm\u2019?\n  119 | for(int t=0; t<n; t++) {\n      |                   ^\n      |                   tm\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:127:1: error: \u2018nll\u2019 does not name a type\n  127 | nll += pow(CppAD::CondExpLt(r_cots, Type(0.01), r_cots-Type(0.01), Type(0.0)), 2); // r_cots > 0.01\n      | ^~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:128:1: error: \u2018nll\u2019 does not name a type\n  128 | nll += pow(CppAD::CondExpGt(r_cots, Type(5.0), r_cots-Type(5.0), Type(0.0)), 2); // r_cots < 5\n      | ^~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:129:1: error: \u2018nll\u2019 does not name a type\n  129 | nll += pow(CppAD::CondExpLt(K_cots, Type(0.01), K_cots-Type(0.01), Type(0.0)), 2); // K_cots > 0.01\n      | ^~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:130:1: error: \u2018nll\u2019 does not name a type\n  130 | nll += pow(CppAD::CondExpLt(K_coral, Type(1.0), K_coral-Type(1.0), Type(0.0)), 2); // K_coral > 1%\n      | ^~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:316:1: error: expected unqualified-id before \u2018if\u2019\n  316 | if( isDouble<Type>::value &&                                            \\\n      | ^~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:133:1: note: in expansion of macro \u2018REPORT\u2019\n  133 | REPORT(cots_pred); // Predicted COTS abundance (indiv/m2)\n      | ^~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:316:1: error: expected unqualified-id before \u2018if\u2019\n  316 | if( isDouble<Type>::value &&                                            \\\n      | ^~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:134:1: note: in expansion of macro \u2018REPORT\u2019\n  134 | REPORT(fast_pred); // Predicted fast coral cover (%)\n      | ^~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:316:1: error: expected unqualified-id before \u2018if\u2019\n  316 | if( isDouble<Type>::value &&                                            \\\n      | ^~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:1: note: in expansion of macro \u2018REPORT\u2019\n  135 | REPORT(slow_pred); // Predicted slow coral cover (%)\n      | ^~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:144:1: error: expected unqualified-id before \u2018return\u2019\n  144 | return nll;\n      | ^~~~~~\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "ERROR",
      "message": "R script failed with return code 139",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.so POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 3 \nPhase 1",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\n\n *** caught segfault ***\naddress (nil), cause 'memory not mapped'\n\nTraceback:\n 1: getParameterOrder(data, parameters, new.env(), DLL = DLL)\n 2: MakeADFun(data_in, parameters, DLL = \"model\", silent = TRUE,     map = map)\n 3: doTryCatch(return(expr), name, parentenv, handler)\n 4: tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 5: tryCatchList(expr, classes, parentenv, handlers)\n 6: tryCatch({    for (m in seq(1, n_phases)) {        cat(\"Phase\", m, \"\\n\")        to_fit <- params[params$priority == m & !is.na(params$priority) &             params$import_type == \"PARAMETER\", ]$parameter        map <- generate_map(to_fit)        if (exists(\"model\")) {            parameters <- model$env$parList(fit$par)        }        model <- MakeADFun(data_in, parameters, DLL = \"model\",             silent = TRUE, map = map)        if (is.null(model)) {            stop(\"Failed to create model\")        }        cat(\"Initial parameter values for phase\", m, \":\\n\")        print(model$par)        fit <- nlminb(model$par, model$fn, model$gr)        if (is.null(fit)) {            stop(\"Failed to fit model\")        }        cat(\"Final parameter values for phase\", m, \":\\n\")        print(fit$par)        cat(\"Convergence message:\", fit$message, \"\\n\")        cat(\"Number of iterations:\", fit$iterations, \"\\n\")        cat(\"Objective function value:\", fit$objective, \"\\n\")        if (any(is.nan(fit$par)) || any(is.infinite(fit$par))) {            cat(\"WARNING: NaN or Inf values detected in parameters at phase\",                 m, \"\\n\")        }        cat(\"Gradient at solution for phase\", m, \":\\n\")        grad <- model$gr(fit$par)        print(grad)        if (any(is.nan(grad)) || any(is.infinite(grad))) {            cat(\"WARNING: NaN or Inf values detected in gradient at phase\",                 m, \"\\n\")        }        best <- model$env$last.par.best        model$report()    }    cat(\"Final Phase\\n\")    to_fit <- params[!is.na(params$priority) & params$import_type ==         \"PARAMETER\", ]$parameter    map <- generate_map(to_fit)    parameters <- model$env$parList(fit$par)    model <- MakeADFun(data_in, parameters, DLL = \"model\", silent = TRUE,         map = map)    cat(\"Initial parameter values for final phase:\\n\")    print(model$par)    fit <- nlminb(model$par, model$fn, model$gr)    cat(\"Final parameter values for final phase:\\n\")    print(fit$par)    cat(\"Convergence message:\", fit$message, \"\\n\")    cat(\"Number of iterations:\", fit$iterations, \"\\n\")    cat(\"Objective function value:\", fit$objective, \"\\n\")    if (any(is.nan(fit$par)) || any(is.infinite(fit$par))) {        cat(\"WARNING: NaN or Inf values detected in parameters at final phase\\n\")    }    cat(\"Gradient at solution for final phase:\\n\")    grad <- model$gr(fit$par)    print(grad)    if (any(is.nan(grad)) || any(is.infinite(grad))) {        cat(\"WARNING: NaN or Inf values detected in gradient at final phase\\n\")    }    best <- model$env$last.par.best}, error = function(e) {    error_message <- paste(\"Error in model phases:\", conditionMessage(e))    cat(error_message, \"\\n\")    stop(error_message)})\nAn irrecoverable exception occurred. R is aborting now ...\nSegmentation fault (core dumped)"
    },
    "3": {
      "status": "ERROR",
      "message": "R script failed with return code 139",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.so POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 3 \nPhase 1",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\n\n *** caught segfault ***\naddress (nil), cause 'memory not mapped'\n\nTraceback:\n 1: getParameterOrder(data, parameters, new.env(), DLL = DLL)\n 2: MakeADFun(data_in, parameters, DLL = \"model\", silent = TRUE,     map = map)\n 3: doTryCatch(return(expr), name, parentenv, handler)\n 4: tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 5: tryCatchList(expr, classes, parentenv, handlers)\n 6: tryCatch({    for (m in seq(1, n_phases)) {        cat(\"Phase\", m, \"\\n\")        to_fit <- params[params$priority == m & !is.na(params$priority) &             params$import_type == \"PARAMETER\", ]$parameter        map <- generate_map(to_fit)        if (exists(\"model\")) {            parameters <- model$env$parList(fit$par)        }        model <- MakeADFun(data_in, parameters, DLL = \"model\",             silent = TRUE, map = map)        if (is.null(model)) {            stop(\"Failed to create model\")        }        cat(\"Initial parameter values for phase\", m, \":\\n\")        print(model$par)        fit <- nlminb(model$par, model$fn, model$gr)        if (is.null(fit)) {            stop(\"Failed to fit model\")        }        cat(\"Final parameter values for phase\", m, \":\\n\")        print(fit$par)        cat(\"Convergence message:\", fit$message, \"\\n\")        cat(\"Number of iterations:\", fit$iterations, \"\\n\")        cat(\"Objective function value:\", fit$objective, \"\\n\")        if (any(is.nan(fit$par)) || any(is.infinite(fit$par))) {            cat(\"WARNING: NaN or Inf values detected in parameters at phase\",                 m, \"\\n\")        }        cat(\"Gradient at solution for phase\", m, \":\\n\")        grad <- model$gr(fit$par)        print(grad)        if (any(is.nan(grad)) || any(is.infinite(grad))) {            cat(\"WARNING: NaN or Inf values detected in gradient at phase\",                 m, \"\\n\")        }        best <- model$env$last.par.best        model$report()    }    cat(\"Final Phase\\n\")    to_fit <- params[!is.na(params$priority) & params$import_type ==         \"PARAMETER\", ]$parameter    map <- generate_map(to_fit)    parameters <- model$env$parList(fit$par)    model <- MakeADFun(data_in, parameters, DLL = \"model\", silent = TRUE,         map = map)    cat(\"Initial parameter values for final phase:\\n\")    print(model$par)    fit <- nlminb(model$par, model$fn, model$gr)    cat(\"Final parameter values for final phase:\\n\")    print(fit$par)    cat(\"Convergence message:\", fit$message, \"\\n\")    cat(\"Number of iterations:\", fit$iterations, \"\\n\")    cat(\"Objective function value:\", fit$objective, \"\\n\")    if (any(is.nan(fit$par)) || any(is.infinite(fit$par))) {        cat(\"WARNING: NaN or Inf values detected in parameters at final phase\\n\")    }    cat(\"Gradient at solution for final phase:\\n\")    grad <- model$gr(fit$par)    print(grad)    if (any(is.nan(grad)) || any(is.infinite(grad))) {        cat(\"WARNING: NaN or Inf values detected in gradient at final phase\\n\")    }    best <- model$env$last.par.best}, error = function(e) {    error_message <- paste(\"Error in model phases:\", conditionMessage(e))    cat(error_message, \"\\n\")    stop(error_message)})\nAn irrecoverable exception occurred. R is aborting now ...\nSegmentation fault (core dumped)"
    },
    "4": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:18: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  135 |     if (!R_finite(cots_pred(t)) || !R_finite(fast_pred(t)) || !R_finite(slow_pred(t))) {\n      |          ~~~~~~~~^~~~~~~~~~~~~~\n      |                  |\n      |                  Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\nIn file included from /usr/share/R/include/R.h:69,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:182,\n                 from POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:1:\n/usr/share/R/include/R_ext/Arith.h:63:14: note:   initializing argument 1 of \u2018int R_finite(double)\u2019\n   63 | int R_finite(double);           /* True if none of NA, NaN, +/-Inf */\n      |              ^~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:45: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  135 |     if (!R_finite(cots_pred(t)) || !R_finite(fast_pred(t)) || !R_finite(slow_pred(t))) {\n      |                                     ~~~~~~~~^~~~~~~~~~~~~~\n      |                                             |\n      |                                             Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/share/R/include/R_ext/Arith.h:63:14: note:   initializing argument 1 of \u2018int R_finite(double)\u2019\n   63 | int R_finite(double);           /* True if none of NA, NaN, +/-Inf */\n      |              ^~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:72: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  135 |     if (!R_finite(cots_pred(t)) || !R_finite(fast_pred(t)) || !R_finite(slow_pred(t))) {\n      |                                                                ~~~~~~~~^~~~~~~~~~~~~~\n      |                                                                        |\n      |                                                                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/share/R/include/R_ext/Arith.h:63:14: note:   initializing argument 1 of \u2018int R_finite(double)\u2019\n   63 | int R_finite(double);           /* True if none of NA, NaN, +/-Inf */\n      |              ^~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:18: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  135 |     if (!R_finite(cots_pred(t)) || !R_finite(fast_pred(t)) || !R_finite(slow_pred(t))) {\n      |          ~~~~~~~~^~~~~~~~~~~~~~\n      |                  |\n      |                  Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/share/R/include/R_ext/Arith.h:63:14: note:   initializing argument 1 of \u2018int R_finite(double)\u2019\n   63 | int R_finite(double);           /* True if none of NA, NaN, +/-Inf */\n      |              ^~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:45: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  135 |     if (!R_finite(cots_pred(t)) || !R_finite(fast_pred(t)) || !R_finite(slow_pred(t))) {\n      |                                     ~~~~~~~~^~~~~~~~~~~~~~\n      |                                             |\n      |                                             Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/share/R/include/R_ext/Arith.h:63:14: note:   initializing argument 1 of \u2018int R_finite(double)\u2019\n   63 | int R_finite(double);           /* True if none of NA, NaN, +/-Inf */\n      |              ^~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:72: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  135 |     if (!R_finite(cots_pred(t)) || !R_finite(fast_pred(t)) || !R_finite(slow_pred(t))) {\n      |                                                                ~~~~~~~~^~~~~~~~~~~~~~\n      |                                                                        |\n      |                                                                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/share/R/include/R_ext/Arith.h:63:14: note:   initializing argument 1 of \u2018int R_finite(double)\u2019\n   63 | int R_finite(double);           /* True if none of NA, NaN, +/-Inf */\n      |              ^~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:18: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  135 |     if (!R_finite(cots_pred(t)) || !R_finite(fast_pred(t)) || !R_finite(slow_pred(t))) {\n      |          ~~~~~~~~^~~~~~~~~~~~~~\n      |                  |\n      |                  Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/share/R/include/R_ext/Arith.h:63:14: note:   initializing argument 1 of \u2018int R_finite(double)\u2019\n   63 | int R_finite(double);           /* True if none of NA, NaN, +/-Inf */\n      |              ^~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:45: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  135 |     if (!R_finite(cots_pred(t)) || !R_finite(fast_pred(t)) || !R_finite(slow_pred(t))) {\n      |                                     ~~~~~~~~^~~~~~~~~~~~~~\n      |                                             |\n      |                                             Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/share/R/include/R_ext/Arith.h:63:14: note:   initializing argument 1 of \u2018int R_finite(double)\u2019\n   63 | int R_finite(double);           /* True if none of NA, NaN, +/-Inf */\n      |              ^~~~~~\nPOPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp:135:72: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  135 |     if (!R_finite(cots_pred(t)) || !R_finite(fast_pred(t)) || !R_finite(slow_pred(t))) {\n      |                                                                ~~~~~~~~^~~~~~~~~~~~~~\n      |                                                                        |\n      |                                                                        Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/share/R/include/R_ext/Arith.h:63:14: note:   initializing argument 1 of \u2018int R_finite(double)\u2019\n   63 | int R_finite(double);           /* True if none of NA, NaN, +/-Inf */\n      |              ^~~~~~\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "5": {
      "status": "ERROR",
      "message": "R script failed with return code 139",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.so POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 3 \nPhase 1",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\n\n *** caught segfault ***\naddress (nil), cause 'memory not mapped'\n\nTraceback:\n 1: getParameterOrder(data, parameters, new.env(), DLL = DLL)\n 2: MakeADFun(data_in, parameters, DLL = \"model\", silent = TRUE,     map = map)\n 3: doTryCatch(return(expr), name, parentenv, handler)\n 4: tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 5: tryCatchList(expr, classes, parentenv, handlers)\n 6: tryCatch({    for (m in seq(1, n_phases)) {        cat(\"Phase\", m, \"\\n\")        to_fit <- params[params$priority == m & !is.na(params$priority) &             params$import_type == \"PARAMETER\", ]$parameter        map <- generate_map(to_fit)        if (exists(\"model\")) {            parameters <- model$env$parList(fit$par)        }        model <- MakeADFun(data_in, parameters, DLL = \"model\",             silent = TRUE, map = map)        if (is.null(model)) {            stop(\"Failed to create model\")        }        cat(\"Initial parameter values for phase\", m, \":\\n\")        print(model$par)        fit <- nlminb(model$par, model$fn, model$gr)        if (is.null(fit)) {            stop(\"Failed to fit model\")        }        cat(\"Final parameter values for phase\", m, \":\\n\")        print(fit$par)        cat(\"Convergence message:\", fit$message, \"\\n\")        cat(\"Number of iterations:\", fit$iterations, \"\\n\")        cat(\"Objective function value:\", fit$objective, \"\\n\")        if (any(is.nan(fit$par)) || any(is.infinite(fit$par))) {            cat(\"WARNING: NaN or Inf values detected in parameters at phase\",                 m, \"\\n\")        }        cat(\"Gradient at solution for phase\", m, \":\\n\")        grad <- model$gr(fit$par)        print(grad)        if (any(is.nan(grad)) || any(is.infinite(grad))) {            cat(\"WARNING: NaN or Inf values detected in gradient at phase\",                 m, \"\\n\")        }        best <- model$env$last.par.best        model$report()    }    cat(\"Final Phase\\n\")    to_fit <- params[!is.na(params$priority) & params$import_type ==         \"PARAMETER\", ]$parameter    map <- generate_map(to_fit)    parameters <- model$env$parList(fit$par)    model <- MakeADFun(data_in, parameters, DLL = \"model\", silent = TRUE,         map = map)    cat(\"Initial parameter values for final phase:\\n\")    print(model$par)    fit <- nlminb(model$par, model$fn, model$gr)    cat(\"Final parameter values for final phase:\\n\")    print(fit$par)    cat(\"Convergence message:\", fit$message, \"\\n\")    cat(\"Number of iterations:\", fit$iterations, \"\\n\")    cat(\"Objective function value:\", fit$objective, \"\\n\")    if (any(is.nan(fit$par)) || any(is.infinite(fit$par))) {        cat(\"WARNING: NaN or Inf values detected in parameters at final phase\\n\")    }    cat(\"Gradient at solution for final phase:\\n\")    grad <- model$gr(fit$par)    print(grad)    if (any(is.nan(grad)) || any(is.infinite(grad))) {        cat(\"WARNING: NaN or Inf values detected in gradient at final phase\\n\")    }    best <- model$env$last.par.best}, error = function(e) {    error_message <- paste(\"Error in model phases:\", conditionMessage(e))    cat(error_message, \"\\n\")    stop(error_message)})\nAn irrecoverable exception occurred. R is aborting now ...\nSegmentation fault (core dumped)"
    },
    "6": {
      "status": "ERROR",
      "message": "R script failed with return code 139",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.cpp -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.so POPULATIONS/POPULATION_0010/INDIVIDUAL_O89TKDSW/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 3 \nPhase 1",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\n\n *** caught segfault ***\naddress (nil), cause 'memory not mapped'\n\nTraceback:\n 1: getParameterOrder(data, parameters, new.env(), DLL = DLL)\n 2: MakeADFun(data_in, parameters, DLL = \"model\", silent = TRUE,     map = map)\n 3: doTryCatch(return(expr), name, parentenv, handler)\n 4: tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 5: tryCatchList(expr, classes, parentenv, handlers)\n 6: tryCatch({    for (m in seq(1, n_phases)) {        cat(\"Phase\", m, \"\\n\")        to_fit <- params[params$priority == m & !is.na(params$priority) &             params$import_type == \"PARAMETER\", ]$parameter        map <- generate_map(to_fit)        if (exists(\"model\")) {            parameters <- model$env$parList(fit$par)        }        model <- MakeADFun(data_in, parameters, DLL = \"model\",             silent = TRUE, map = map)        if (is.null(model)) {            stop(\"Failed to create model\")        }        cat(\"Initial parameter values for phase\", m, \":\\n\")        print(model$par)        fit <- nlminb(model$par, model$fn, model$gr)        if (is.null(fit)) {            stop(\"Failed to fit model\")        }        cat(\"Final parameter values for phase\", m, \":\\n\")        print(fit$par)        cat(\"Convergence message:\", fit$message, \"\\n\")        cat(\"Number of iterations:\", fit$iterations, \"\\n\")        cat(\"Objective function value:\", fit$objective, \"\\n\")        if (any(is.nan(fit$par)) || any(is.infinite(fit$par))) {            cat(\"WARNING: NaN or Inf values detected in parameters at phase\",                 m, \"\\n\")        }        cat(\"Gradient at solution for phase\", m, \":\\n\")        grad <- model$gr(fit$par)        print(grad)        if (any(is.nan(grad)) || any(is.infinite(grad))) {            cat(\"WARNING: NaN or Inf values detected in gradient at phase\",                 m, \"\\n\")        }        best <- model$env$last.par.best        model$report()    }    cat(\"Final Phase\\n\")    to_fit <- params[!is.na(params$priority) & params$import_type ==         \"PARAMETER\", ]$parameter    map <- generate_map(to_fit)    parameters <- model$env$parList(fit$par)    model <- MakeADFun(data_in, parameters, DLL = \"model\", silent = TRUE,         map = map)    cat(\"Initial parameter values for final phase:\\n\")    print(model$par)    fit <- nlminb(model$par, model$fn, model$gr)    cat(\"Final parameter values for final phase:\\n\")    print(fit$par)    cat(\"Convergence message:\", fit$message, \"\\n\")    cat(\"Number of iterations:\", fit$iterations, \"\\n\")    cat(\"Objective function value:\", fit$objective, \"\\n\")    if (any(is.nan(fit$par)) || any(is.infinite(fit$par))) {        cat(\"WARNING: NaN or Inf values detected in parameters at final phase\\n\")    }    cat(\"Gradient at solution for final phase:\\n\")    grad <- model$gr(fit$par)    print(grad)    if (any(is.nan(grad)) || any(is.infinite(grad))) {        cat(\"WARNING: NaN or Inf values detected in gradient at final phase\\n\")    }    best <- model$env$last.par.best}, error = function(e) {    error_message <- paste(\"Error in model phases:\", conditionMessage(e))    cat(error_message, \"\\n\")    stop(error_message)})\nAn irrecoverable exception occurred. R is aborting now ...\nSegmentation fault (core dumped)"
    },
    "7": {
      "status": "BROKEN"
    }
  }
}