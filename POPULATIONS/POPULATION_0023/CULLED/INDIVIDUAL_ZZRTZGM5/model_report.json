{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp -o POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:128:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  128 |     Type space_available = fmax(K_coral - total_coral_cover, Type(0.0)) / (K_coral + eps); // Available space (dimensionless, 0-1)\n      |                            ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\nIn file included from /usr/include/c++/13/cmath:47,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Macros.h:679,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Core:19,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Dense:1,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:92,\n                 from POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:152:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  152 |     cots_pred(t) = fmax(cots_prev + dt * dcots_dt, Type(0.0)); // Update COTS (non-negative)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:153:29: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  153 |     fast_pred(t) = fmax(fmin(fast_prev + dt * dfast_dt, Type(100.0)), Type(0.0)); // Update fast coral (0-100%)\n      |                         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:154:29: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  154 |     slow_pred(t) = fmax(fmin(slow_prev + dt * dslow_dt, Type(100.0)), Type(0.0)); // Update slow coral (0-100%)\n      |                         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:128:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  128 |     Type space_available = fmax(K_coral - total_coral_cover, Type(0.0)) / (K_coral + eps); // Available space (dimensionless, 0-1)\n      |                            ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:152:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  152 |     cots_pred(t) = fmax(cots_prev + dt * dcots_dt, Type(0.0)); // Update COTS (non-negative)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:153:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  153 |     fast_pred(t) = fmax(fmin(fast_prev + dt * dfast_dt, Type(100.0)), Type(0.0)); // Update fast coral (0-100%)\n      |                         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:154:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  154 |     slow_pred(t) = fmax(fmin(slow_prev + dt * dslow_dt, Type(100.0)), Type(0.0)); // Update slow coral (0-100%)\n      |                         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:128:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  128 |     Type space_available = fmax(K_coral - total_coral_cover, Type(0.0)) / (K_coral + eps); // Available space (dimensionless, 0-1)\n      |                            ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:152:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  152 |     cots_pred(t) = fmax(cots_prev + dt * dcots_dt, Type(0.0)); // Update COTS (non-negative)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:153:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  153 |     fast_pred(t) = fmax(fmin(fast_prev + dt * dfast_dt, Type(100.0)), Type(0.0)); // Update fast coral (0-100%)\n      |                         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp:154:29: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  154 |     slow_pred(t) = fmax(fmin(slow_prev + dt * dslow_dt, Type(100.0)), Type(0.0)); // Update slow coral (0-100%)\n      |                         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                             |\n      |                             CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:336:1: note:   initializing argument 1 of \u2018double fmin(double, double)\u2019\n  336 | __MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "SUCCESS",
      "objective_value": 1.0121,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         20     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "handling_slow": 0.4551,
        "dd_mort_strength": 6.5502,
        "r_cots": 0.0498,
        "m_cots": 0.0498,
        "K_cots": 1.9997,
        "cots_pred": [
          0.2615,
          5.0139e-08,
          0.0001,
          0.0002,
          0.0002,
          0.0002,
          0.0003,
          0.0003,
          0.0003,
          1.5003,
          7.509e-10,
          1.6,
          6.8738e-10,
          0.0001,
          0.0002,
          0.0002,
          0.0002,
          0.0003,
          0.0003,
          0.0003,
          0.0003,
          0.0003,
          0.0003,
          0.0004,
          0.0004,
          0.0004
        ],
        "temp_opt": 20.0875,
        "allee_threshold": 0.0183,
        "attack_fast": 0.7763,
        "fast_pred": [
          10.0694,
          10.6562,
          12.6094,
          14.8924,
          17.3705,
          19.9808,
          22.6703,
          25.348,
          27.93,
          30.3408,
          18.0014,
          20.8321,
          10.7063,
          12.9928,
          15.5815,
          18.4014,
          10.2681,
          2.3402,
          3.0148,
          3.8698,
          4.9452,
          6.2852,
          7.9355,
          9.9386,
          12.3274,
          15.1153
        ],
        "attack_slow": 7.3891,
        "temp_width": 1.9997,
        "predation_efficiency": 0.3,
        "bleach_mort_rate": 1,
        "r_fast": 0.3223,
        "sigma_fast": 7.4062,
        "temp_bleach_threshold": 30.112,
        "r_slow": 0.0498,
        "handling_fast": 0.0608,
        "slow_pred": [
          12.7726,
          12.5972,
          12.9087,
          13.2696,
          13.6105,
          13.9237,
          14.2129,
          14.4718,
          14.6991,
          14.8947,
          11.8284,
          12.1157,
          8.9465,
          9.2416,
          9.5258,
          9.7842,
          7.0595,
          3.7818,
          3.9498,
          4.1223,
          4.2988,
          4.4782,
          4.6593,
          4.8403,
          5.0195,
          5.1942
        ],
        "K_coral": 58.2441,
        "sigma_cots": 0.6402,
        "sigma_slow": 2.4838
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            5.0139e-08,
            0.0001,
            0.0002,
            0.0002,
            0.0002,
            0.0003,
            0.0003,
            0.0003,
            1.5003,
            7.509e-10,
            1.6,
            6.8738e-10,
            0.0001,
            0.0002,
            0.0002,
            0.0002,
            0.0003,
            0.0003,
            0.0003,
            0.0003,
            0.0003,
            0.0003,
            0.0004,
            0.0004,
            0.0004
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            10.6562,
            12.6094,
            14.8924,
            17.3705,
            19.9808,
            22.6703,
            25.348,
            27.93,
            30.3408,
            18.0014,
            20.8321,
            10.7063,
            12.9928,
            15.5815,
            18.4014,
            10.2681,
            2.3402,
            3.0148,
            3.8698,
            4.9452,
            6.2852,
            7.9355,
            9.9386,
            12.3274,
            15.1153
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            12.5972,
            12.9087,
            13.2696,
            13.6105,
            13.9237,
            14.2129,
            14.4718,
            14.6991,
            14.8947,
            11.8284,
            12.1157,
            8.9465,
            9.2416,
            9.5258,
            9.7842,
            7.0595,
            3.7818,
            3.9498,
            4.1223,
            4.2988,
            4.4782,
            4.6593,
            4.8403,
            5.0195,
            5.1942
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp -o POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.so POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n               log_r_cots                log_K_cots                log_m_cots \n                   -0.693                     0.693                    -1.609 \n      log_allee_threshold              log_temp_opt            log_temp_width \n                   -2.303                     3.332                     0.693 \n     log_dd_mort_strength                log_r_fast                log_r_slow \n                    0.000                    -0.511                    -1.609 \n              log_K_coral log_temp_bleach_threshold      log_bleach_mort_rate \n                    4.094                     3.401                    -1.204 \nStarting model phases\nNumber of phases: 4 \nPhase 1 \nInitial parameter values for phase 1 :\n     log_r_cots      log_m_cots      log_r_fast      log_r_slow log_attack_fast \n         -0.693          -1.609          -0.511          -1.609           0.693 \nlog_attack_slow \n          0.000 \nFinal parameter values for phase 1 :\n     log_r_cots      log_m_cots      log_r_fast      log_r_slow log_attack_fast \n     -2.9999070      -3.0000000      -1.0825487      -3.0000000       2.2125102 \nlog_attack_slow \n     -0.8995664 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 285.7754 \nGradient at solution for phase 1 :\n             [,1]      [,2]        [,3]     [,4]       [,5]       [,6]\n[1,] -0.005189627 0.1619209 -0.08983555 1.347682 -0.1471294 0.04753815\nPhase 2 \nInitial parameter values for phase 2 :\n               log_K_cots       log_allee_threshold              log_temp_opt \n                    0.693                    -2.303                     3.332 \n     log_dd_mort_strength log_temp_bleach_threshold      log_bleach_mort_rate \n                    0.000                     3.401                    -1.204 \nFinal parameter values for phase 2 :\n               log_K_cots       log_allee_threshold              log_temp_opt \n                 0.693000                 -4.000000                  3.000000 \n     log_dd_mort_strength log_temp_bleach_threshold      log_bleach_mort_rate \n                 1.884267                  3.401362                  0.000000 \nConvergence message: singular convergence (7) \nNumber of iterations: 30 \nObjective function value: 268.6617 \nGradient at solution for phase 2 :\n     [,1]         [,2]          [,3]         [,4]       [,5]      [,6]\n[1,]    0 2.439674e-07 -4.786613e-06 0.0002131988 0.00365843 -9.391268\nPhase 3 \nInitial parameter values for phase 3 :\n          log_temp_width              log_K_coral        log_handling_fast \n                   0.693                    4.094                   -2.303 \n       log_handling_slow log_predation_efficiency \n                  -1.609                   -1.204 \nFinal parameter values for phase 3 :\n          log_temp_width              log_K_coral        log_handling_fast \n               0.6930046                4.1005548               -2.3010017 \n       log_handling_slow log_predation_efficiency \n              -1.1250561               -1.2040000 \nConvergence message: relative convergence (4) \nNumber of iterations: 9 \nObjective function value: 267.9342 \nGradient at solution for phase 3 :\n              [,1]        [,2]         [,3]          [,4] [,5]\n[1,] -8.923524e-07 8.04135e-05 4.902179e-05 -1.818076e-07    0\nPhase 4 \nInitial parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n        -1.609          1.609          1.609 \nFinal parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n    -0.4617812      2.0113917      0.9237062 \nConvergence message: relative convergence (4) \nNumber of iterations: 10 \nObjective function value: 175.5307 \nGradient at solution for phase 4 :\n              [,1]          [,2]          [,3]\n[1,] -0.0001630805 -3.269951e-05 -2.542166e-05\nFinal Phase\nInitial parameter values for final phase:\n               log_r_cots                log_K_cots                log_m_cots \n               -2.9999070                 0.6930000                -3.0000000 \n      log_allee_threshold              log_temp_opt            log_temp_width \n               -4.0000000                 3.0000000                 0.6930046 \n     log_dd_mort_strength                log_r_fast                log_r_slow \n                1.8842666                -1.0825487                -3.0000000 \n              log_K_coral log_temp_bleach_threshold      log_bleach_mort_rate \n                4.1005548                 3.4013618                 0.0000000 \n          log_attack_fast           log_attack_slow         log_handling_fast \n                2.2125102                -0.8995664                -2.3010017 \n        log_handling_slow  log_predation_efficiency            log_sigma_cots \n               -1.1250561                -1.2040000                -0.4617812 \n           log_sigma_fast            log_sigma_slow \n                2.0113917                 0.9237062 \nFinal parameter values for final phase:\n               log_r_cots                log_K_cots                log_m_cots \n               -2.9999008                 0.6930000                -3.0000000 \n      log_allee_threshold              log_temp_opt            log_temp_width \n               -4.0000000                 3.0000979                 0.6930191 \n     log_dd_mort_strength                log_r_fast                log_r_slow \n                1.8794904                -1.1321803                -3.0000000 \n              log_K_coral log_temp_bleach_threshold      log_bleach_mort_rate \n                4.0646435                 3.4049238                 0.0000000 \n          log_attack_fast           log_attack_slow         log_handling_fast \n               -0.2532642                 2.0000000                -2.7994934 \n        log_handling_slow  log_predation_efficiency            log_sigma_cots \n               -0.7871722                -1.2040000                -0.4617781 \n           log_sigma_fast            log_sigma_slow \n                2.0009618                 0.9057719 \nConvergence message: relative convergence (4) \nNumber of iterations: 46 \nObjective function value: 174.7954 \nGradient at solution for final phase:\n              [,1] [,2]        [,3]         [,4]          [,5]          [,6]\n[1,] -2.788049e-08    0 0.000734179 2.772225e-08 -3.939545e-07 -4.620846e-08\n             [,7]         [,8]    [,9]       [,10]         [,11]     [,12]\n[1,] 2.363585e-05 5.179973e-05 2.57931 4.00746e-05 -0.0003760112 -3.538327\n            [,13]        [,14]       [,15]         [,16] [,17]        [,18]\n[1,] -7.56127e-06 -0.007228023 1.00074e-05 -5.007163e-06     0 -9.18539e-06\n             [,19]        [,20]\n[1,] -4.213138e-07 5.077161e-06\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 23\n $ handling_slow        : num 0.455\n $ dd_mort_strength     : num 6.55\n $ r_cots               : num 0.0498\n $ m_cots               : num 0.0498\n $ K_cots               : num 2\n $ cots_pred            : num [1:26] 2.62e-01 5.01e-08 1.00e-04 1.58e-04 2.00e-04 ...\n $ temp_opt             : num 20.1\n $ allee_threshold      : num 0.0183\n $ attack_fast          : num 0.776\n $ fast_pred            : num [1:26] 10.1 10.7 12.6 14.9 17.4 ...\n $ attack_slow          : num 7.39\n $ temp_width           : num 2\n $ predation_efficiency : num 0.3\n $ bleach_mort_rate     : num 1\n $ r_fast               : num 0.322\n $ sigma_fast           : num 7.41\n $ temp_bleach_threshold: num 30.1\n $ r_slow               : num 0.0498\n $ handling_fast        : num 0.0608\n $ slow_pred            : num [1:26] 12.8 12.6 12.9 13.3 13.6 ...\n $ K_coral              : num 58.2\n $ sigma_cots           : num 0.64\n $ sigma_slow           : num 2.48\nNULL\n\nDEBUG: Available variables in report:\n [1] \"handling_slow\"         \"dd_mort_strength\"      \"r_cots\"               \n [4] \"m_cots\"                \"K_cots\"                \"cots_pred\"            \n [7] \"temp_opt\"              \"allee_threshold\"       \"attack_fast\"          \n[10] \"fast_pred\"             \"attack_slow\"           \"temp_width\"           \n[13] \"predation_efficiency\"  \"bleach_mort_rate\"      \"r_fast\"               \n[16] \"sigma_fast\"            \"temp_bleach_threshold\" \"r_slow\"               \n[19] \"handling_fast\"         \"slow_pred\"             \"K_coral\"              \n[22] \"sigma_cots\"            \"sigma_slow\"           \n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 5.01395e-08 0.0001000238 0.000158193 0.0002001225 0.0002328439 \nDEBUG: Summary statistics:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n0.0000000 0.0001687 0.0002705 0.1294972 0.0003393 1.6000000 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 10.6562 12.60937 14.89243 17.37047 19.98076 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.340   9.971  12.801  14.016  18.301  30.341 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 12.59718 12.90875 13.26964 13.61046 13.92367 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  3.782   4.885   9.655   9.469  13.179  14.895 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 5.01395e-08 0.0001000238 0.000158193 0.0002001225 0.0002328439 ...\nMSE (normalized): 2.223653 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 10.6562 12.60937 14.89243 17.37047 19.98076 ...\nMSE (normalized): 0.5341155 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 12.59718 12.90875 13.26964 13.61046 13.92367 ...\nMSE (normalized): 0.2785255 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n2.2236527 0.5341155 0.2785255 \n\nDEBUG: Final objective value (mean of MSEs): 1.012098 \n\nFinal objective function value: 1.012098 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 1.0121,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         20     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"handling_slow\": 0.4551,\n    \"dd_mort_strength\": 6.5502,\n    \"r_cots\": 0.0498,\n    \"m_cots\": 0.0498,\n    \"K_cots\": 1.9997,\n    \"cots_pred\": [0.2615, 5.0139e-08, 0.0001, 0.0002, 0.0002, 0.0002, 0.0003, 0.0003, 0.0003, 1.5003, 7.509e-10, 1.6, 6.8738e-10, 0.0001, 0.0002, 0.0002, 0.0002, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0004, 0.0004, 0.0004],\n    \"temp_opt\": 20.0875,\n    \"allee_threshold\": 0.0183,\n    \"attack_fast\": 0.7763,\n    \"fast_pred\": [10.0694, 10.6562, 12.6094, 14.8924, 17.3705, 19.9808, 22.6703, 25.348, 27.93, 30.3408, 18.0014, 20.8321, 10.7063, 12.9928, 15.5815, 18.4014, 10.2681, 2.3402, 3.0148, 3.8698, 4.9452, 6.2852, 7.9355, 9.9386, 12.3274, 15.1153],\n    \"attack_slow\": 7.3891,\n    \"temp_width\": 1.9997,\n    \"predation_efficiency\": 0.3,\n    \"bleach_mort_rate\": 1,\n    \"r_fast\": 0.3223,\n    \"sigma_fast\": 7.4062,\n    \"temp_bleach_threshold\": 30.112,\n    \"r_slow\": 0.0498,\n    \"handling_fast\": 0.0608,\n    \"slow_pred\": [12.7726, 12.5972, 12.9087, 13.2696, 13.6105, 13.9237, 14.2129, 14.4718, 14.6991, 14.8947, 11.8284, 12.1157, 8.9465, 9.2416, 9.5258, 9.7842, 7.0595, 3.7818, 3.9498, 4.1223, 4.2988, 4.4782, 4.6593, 4.8403, 5.0195, 5.1942],\n    \"K_coral\": 58.2441,\n    \"sigma_cots\": 0.6402,\n    \"sigma_slow\": 2.4838\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 5.0139e-08, 0.0001, 0.0002, 0.0002, 0.0002, 0.0003, 0.0003, 0.0003, 1.5003, 7.509e-10, 1.6, 6.8738e-10, 0.0001, 0.0002, 0.0002, 0.0002, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0004, 0.0004, 0.0004],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 10.6562, 12.6094, 14.8924, 17.3705, 19.9808, 22.6703, 25.348, 27.93, 30.3408, 18.0014, 20.8321, 10.7063, 12.9928, 15.5815, 18.4014, 10.2681, 2.3402, 3.0148, 3.8698, 4.9452, 6.2852, 7.9355, 9.9386, 12.3274, 15.1153],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 12.5972, 12.9087, 13.2696, 13.6105, 13.9237, 14.2129, 14.4718, 14.6991, 14.8947, 11.8284, 12.1157, 8.9465, 9.2416, 9.5258, 9.7842, 7.0595, 3.7818, 3.9498, 4.1223, 4.2988, 4.4782, 4.6593, 4.8403, 5.0195, 5.1942],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "3": {
      "status": "SUCCESS",
      "objective_value": 1.0121
    },
    "4": {
      "status": "SUCCESS",
      "objective_value": 133.2693,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         20     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "handling_slow": 1.001,
        "dd_mort_strength": 1,
        "r_cots": 1.1589,
        "m_cots": 2.56,
        "K_cots": 1.9997,
        "cots_pred": [
          0.2615,
          2.0994e-08,
          0.0001,
          0,
          0.0001,
          0.0001,
          0.0001,
          0.0001,
          0.0001,
          1.4999,
          2.1789e-09,
          1.6,
          2.2957e-09,
          0.0001,
          0,
          0.0001,
          0.0001,
          0.0001,
          0.0001,
          0.0001,
          0.0001,
          0.0001,
          0.0001,
          0.0001,
          0.0001,
          0.0001
        ],
        "temp_opt": 485165195.4098,
        "allee_threshold": 1.001,
        "attack_fast": 22026.4658,
        "fast_pred": [
          10.0694,
          19.9787,
          40.1582,
          80.72,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100
        ],
        "attack_slow": 22026.4658,
        "temp_width": 1.9997,
        "predation_efficiency": 1.0846,
        "bleach_mort_rate": 1.0042,
        "r_fast": 1.0101,
        "sigma_fast": 79.5951,
        "temp_bleach_threshold": 913965947693.3059,
        "r_slow": 1.001,
        "handling_fast": 1.001,
        "slow_pred": [
          12.7726,
          25.2967,
          50.6188,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100,
          100
        ],
        "K_coral": 5.184705528614887e+21,
        "sigma_cots": 1.0201,
        "sigma_slow": 86.2565
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            2.0994e-08,
            0.0001,
            0,
            0.0001,
            0.0001,
            0.0001,
            0.0001,
            0.0001,
            1.4999,
            2.1789e-09,
            1.6,
            2.2957e-09,
            0.0001,
            0,
            0.0001,
            0.0001,
            0.0001,
            0.0001,
            0.0001,
            0.0001,
            0.0001,
            0.0001,
            0.0001,
            0.0001,
            0.0001
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            19.9787,
            40.1582,
            80.72,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            25.2967,
            50.6188,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.cpp -o POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.so POPULATIONS/POPULATION_0023/INDIVIDUAL_ZZRTZGM5/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n               log_r_cots                log_K_cots                log_m_cots \n                   -0.693                     0.693                     0.940 \n      log_allee_threshold              log_temp_opt            log_temp_width \n                   -2.303                     3.332                     0.693 \n     log_dd_mort_strength                log_r_fast                log_r_slow \n                    0.000                    -0.511                    -1.609 \n              log_K_coral log_temp_bleach_threshold      log_bleach_mort_rate \n                    4.094                     3.401                    -1.204 \nStarting model phases\nNumber of phases: 4 \nPhase 1 \nInitial parameter values for phase 1 :\n     log_r_cots      log_m_cots      log_r_fast      log_r_slow log_attack_fast \n         -0.693           0.940          -0.511          -1.609           0.693 \nlog_attack_slow \n          0.000 \nClamping starts up to lower bounds for:\n log_r_cots, log_r_fast, log_r_slow, log_attack_slow \nFinal parameter values for phase 1 :\n     log_r_cots      log_m_cots      log_r_fast      log_r_slow log_attack_fast \n      0.1474286       0.9400000       0.4204340       0.0010000       0.0001000 \nlog_attack_slow \n     10.0000000 \nConvergence message: relative convergence (4) \nNumber of iterations: 21 \nObjective function value: 577.8622 \nGradient at solution for phase 1 :\n              [,1]       [,2]        [,3]     [,4]     [,5]          [,6]\n[1,] -3.286656e-06 0.02113296 0.001297781 161.1146 7.275735 -0.0003502597\nPhase 2 \nInitial parameter values for phase 2 :\n               log_K_cots       log_allee_threshold              log_temp_opt \n                    0.693                    -2.303                     3.332 \n     log_dd_mort_strength log_temp_bleach_threshold      log_bleach_mort_rate \n                    0.000                     3.401                    -1.204 \nClamping starts up to lower bounds for:\n log_allee_threshold, log_temp_opt, log_temp_bleach_threshold, log_bleach_mort_rate \nFinal parameter values for phase 2 :\n               log_K_cots       log_allee_threshold              log_temp_opt \n                    0.693                     0.001                    20.000 \n     log_dd_mort_strength log_temp_bleach_threshold      log_bleach_mort_rate \n                    0.000                    26.000                     0.000 \nConvergence message: both X-convergence and relative convergence (5) \nNumber of iterations: 1 \nObjective function value: 594.6387 \nGradient at solution for phase 2 :\n     [,1] [,2] [,3]         [,4] [,5] [,6]\n[1,]    0    0    0 6.640817e-07    0    0\nPhase 3 \nInitial parameter values for phase 3 :\n          log_temp_width              log_K_coral        log_handling_fast \n                   0.693                    4.094                   -2.303 \n       log_handling_slow log_predation_efficiency \n                  -1.609                   -1.204 \nClamping starts up to lower bounds for:\n log_K_coral, log_handling_fast, log_handling_slow, log_predation_efficiency \nFinal parameter values for phase 3 :\n          log_temp_width              log_K_coral        log_handling_fast \n                   0.693                   50.000                    0.001 \n       log_handling_slow log_predation_efficiency \n                   0.001                    0.000 \nConvergence message: both X-convergence and relative convergence (5) \nNumber of iterations: 1 \nObjective function value: 7458.154 \nGradient at solution for phase 3 :\n     [,1]         [,2]     [,3]     [,4] [,5]\n[1,]    0 3.120431e-14 0.926521 0.881314    0\nPhase 4 \nInitial parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n        -1.609          1.609          1.609 \nClamping starts up to lower bounds for:\n log_sigma_cots \nFinal parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n      0.010000       4.389096       4.457209 \nConvergence message: relative convergence (4) \nNumber of iterations: 13 \nObjective function value: 333.325 \nGradient at solution for phase 4 :\n         [,1]         [,2]         [,3]\n[1,] 15.60261 7.786645e-06 2.427505e-06\nFinal Phase\nInitial parameter values for final phase:\n               log_r_cots                log_K_cots                log_m_cots \n                0.1474286                 0.6930000                 0.9400000 \n      log_allee_threshold              log_temp_opt            log_temp_width \n                0.0010000                20.0000000                 0.6930000 \n     log_dd_mort_strength                log_r_fast                log_r_slow \n                0.0000000                 0.4204340                 0.0010000 \n              log_K_coral log_temp_bleach_threshold      log_bleach_mort_rate \n               50.0000000                26.0000000                 0.0000000 \n          log_attack_fast           log_attack_slow         log_handling_fast \n                0.0001000                10.0000000                 0.0010000 \n        log_handling_slow  log_predation_efficiency            log_sigma_cots \n                0.0010000                 0.0000000                 0.0100000 \n           log_sigma_fast            log_sigma_slow \n                4.3890962                 4.4572090 \nFinal parameter values for final phase:\n               log_r_cots                log_K_cots                log_m_cots \n              0.147428595               0.693000000               0.940000000 \n      log_allee_threshold              log_temp_opt            log_temp_width \n              0.001000000              20.000000000               0.693000000 \n     log_dd_mort_strength                log_r_fast                log_r_slow \n              0.000000000               0.010000000               0.001000000 \n              log_K_coral log_temp_bleach_threshold      log_bleach_mort_rate \n             50.000000000              27.541059151               0.004236068 \n          log_attack_fast           log_attack_slow         log_handling_fast \n             10.000000000              10.000000000               0.001000000 \n        log_handling_slow  log_predation_efficiency            log_sigma_cots \n              0.001000000               0.081180235               0.010000000 \n           log_sigma_fast            log_sigma_slow \n              4.376827471               4.457209091 \nConvergence message: relative convergence (4) \nNumber of iterations: 25 \nObjective function value: 333.006 \nGradient at solution for final phase:\n     [,1] [,2]         [,3] [,4] [,5] [,6]         [,7]     [,8]      [,9]\n[1,]    0    0 0.0001643566    0    0    0 3.272135e-09 1.290908 0.2741743\n     [,10] [,11] [,12]         [,13]         [,14]      [,15]       [,16] [,17]\n[1,]     0     0     0 -5.251824e-08 -1.054835e-08 0.01166056 0.002970593     0\n        [,18]        [,19]        [,20]\n[1,] 15.60261 2.655092e-06 7.016097e-06\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 23\n $ handling_slow        : num 1\n $ dd_mort_strength     : num 1\n $ r_cots               : num 1.16\n $ m_cots               : num 2.56\n $ K_cots               : num 2\n $ cots_pred            : num [1:26] 2.62e-01 2.10e-08 1.00e-04 4.88e-05 6.89e-05 ...\n $ temp_opt             : num 4.85e+08\n $ allee_threshold      : num 1\n $ attack_fast          : num 22026\n $ fast_pred            : num [1:26] 10.1 20 40.2 80.7 100 ...\n $ attack_slow          : num 22026\n $ temp_width           : num 2\n $ predation_efficiency : num 1.08\n $ bleach_mort_rate     : num 1\n $ r_fast               : num 1.01\n $ sigma_fast           : num 79.6\n $ temp_bleach_threshold: num 9.14e+11\n $ r_slow               : num 1\n $ handling_fast        : num 1\n $ slow_pred            : num [1:26] 12.8 25.3 50.6 100 100 ...\n $ K_coral              : num 5.18e+21\n $ sigma_cots           : num 1.02\n $ sigma_slow           : num 86.3\nNULL\n\nDEBUG: Available variables in report:\n [1] \"handling_slow\"         \"dd_mort_strength\"      \"r_cots\"               \n [4] \"m_cots\"                \"K_cots\"                \"cots_pred\"            \n [7] \"temp_opt\"              \"allee_threshold\"       \"attack_fast\"          \n[10] \"fast_pred\"             \"attack_slow\"           \"temp_width\"           \n[13] \"predation_efficiency\"  \"bleach_mort_rate\"      \"r_fast\"               \n[16] \"sigma_fast\"            \"temp_bleach_threshold\" \"r_slow\"               \n[19] \"handling_fast\"         \"slow_pred\"             \"K_coral\"              \n[22] \"sigma_cots\"            \"sigma_slow\"           \n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 2.099402e-08 9.998363e-05 4.882606e-05 6.892181e-05 5.977435e-05 \nDEBUG: Summary statistics:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n0.0000000 0.0000603 0.0000625 0.1293351 0.0000676 1.6000000 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 19.97873 40.15825 80.71999 100 100 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10.07  100.00  100.00   90.42  100.00  100.00 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 25.29675 50.6188 100 100 100 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  12.77  100.00  100.00   91.87  100.00  100.00 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 2.099402e-08 9.998363e-05 4.882606e-05 6.892181e-05 5.977435e-05 ...\nMSE (normalized): 2.224233 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 19.97873 40.15825 80.71999 100 100 ...\nMSE (normalized): 61.69094 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 25.29675 50.6188 100 100 100 ...\nMSE (normalized): 335.8928 \n\nDEBUG: MSE values:\n  cots_dat   fast_dat   slow_dat \n  2.224233  61.690939 335.892846 \n\nDEBUG: Final objective value (mean of MSEs): 133.2693 \n\nFinal objective function value: 133.2693 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 133.2693,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         20     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"handling_slow\": 1.001,\n    \"dd_mort_strength\": 1,\n    \"r_cots\": 1.1589,\n    \"m_cots\": 2.56,\n    \"K_cots\": 1.9997,\n    \"cots_pred\": [0.2615, 2.0994e-08, 0.0001, 0, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 1.4999, 2.1789e-09, 1.6, 2.2957e-09, 0.0001, 0, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001],\n    \"temp_opt\": 485165195.4098,\n    \"allee_threshold\": 1.001,\n    \"attack_fast\": 22026.4658,\n    \"fast_pred\": [10.0694, 19.9787, 40.1582, 80.72, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100],\n    \"attack_slow\": 22026.4658,\n    \"temp_width\": 1.9997,\n    \"predation_efficiency\": 1.0846,\n    \"bleach_mort_rate\": 1.0042,\n    \"r_fast\": 1.0101,\n    \"sigma_fast\": 79.5951,\n    \"temp_bleach_threshold\": 913965947693.3059,\n    \"r_slow\": 1.001,\n    \"handling_fast\": 1.001,\n    \"slow_pred\": [12.7726, 25.2967, 50.6188, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100],\n    \"K_coral\": 5.1847055286148866e+21,\n    \"sigma_cots\": 1.0201,\n    \"sigma_slow\": 86.2565\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 2.0994e-08, 0.0001, 0, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 1.4999, 2.1789e-09, 1.6, 2.2957e-09, 0.0001, 0, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 19.9787, 40.1582, 80.72, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 25.2967, 50.6188, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "5": {
      "status": "SUCCESS",
      "objective_value": 133.2693
    }
  }
}