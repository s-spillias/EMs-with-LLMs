{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.cpp -o POPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = double]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2035:7:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.cpp:52:18: error: cannot convert \u2018const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> >, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Array<double, -1, 1> > >\u2019 to \u2018Eigen::DenseCoeffsBase<Eigen::Array<double, -1, 1>, 1>::Scalar\u2019 {aka \u2018double\u2019} in assignment\n   52 |     cots_pred[t] = cots_pred[t-1]\n      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\n   53 |       + r * cots_pred[t-1] * (1 - pow(cots_pred[t-1] / (K + eps), theta)) * env_effect\n      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   54 |       + cotsimm_dat[t-1]\n      |       ~~~~~~~~~~~~~~~~~~\n   55 |       - d * cots_pred[t-1];\n      |       ~~~~~~~~~~~~~~~~\nIn file included from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/user_ad.hpp:67,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/cppad.hpp:82,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:125,\n                 from POPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.cpp:1:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/ad_assign.hpp: In instantiation of \u2018CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >; Base = double]\u2019:\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.cpp:52:18:   required from \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/ad_assign.hpp:141:24: error: invalid cast from type \u2018const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<double>, CppAD::AD<double> >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<double> >, const Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1> > >\u2019 to type \u2018double\u2019\n  141 | {       return *this = Base(t); }\n      |                        ^~~~~~~\nIn file included from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/user_ad.hpp:66:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of \u2018CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; Base = double]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/ad_assign.hpp:141:18:   required from \u2018CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<double>]\u2019\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.cpp:52:18:   required from \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type \u2018const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<double> >, CppAD::AD<CppAD::AD<double> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<double> > >, const Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1> > >\u2019 to type \u2018double\u2019\n  184 | : value_(Base(t))\n      |          ^~~~~~~\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/ad_ctor.hpp: In instantiation of \u2018CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = double]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/ad_ctor.hpp:184:10:   required from \u2018CppAD::AD<Base>::AD(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<double>]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/ad_assign.hpp:141:18:   required from \u2018CppAD::AD<Base>& CppAD::AD<Base>::operator=(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >; Base = CppAD::AD<CppAD::AD<double> >]\u2019\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.cpp:52:18:   required from \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/cppad/local/ad_ctor.hpp:184:10: error: invalid cast from type \u2018const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<CppAD::AD<CppAD::AD<CppAD::AD<double> > > >, const Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1> > >\u2019 to type \u2018double\u2019\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "SUCCESS",
      "objective_value": 0.8691,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         11     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "cots_pred": [
          0.2615,
          0.297,
          0.3372,
          0.4015,
          0.3533,
          0.3882,
          0.4438,
          0.4521,
          0.4471,
          0.452,
          1.9034,
          0.9229,
          2.3565,
          1.4594,
          0.9164,
          0.5546,
          0.6233,
          0.7379,
          0.8997,
          0.7102,
          0.6154,
          0.4913,
          0.4673,
          0.4704,
          0.5051,
          0.4408
        ],
        "fast_pred": [
          10.0694,
          11.3854,
          12.5675,
          13.6047,
          14.4301,
          15.3773,
          16.2007,
          16.8427,
          17.4455,
          18.0492,
          18.6243,
          14.9479,
          14.2196,
          9.322,
          7.1572,
          6.6281,
          7.1677,
          7.4942,
          7.4786,
          6.991,
          7.0678,
          7.4198,
          8.126,
          8.886,
          9.6194,
          10.2346
        ],
        "slow_pred": [
          12.7726,
          13.7001,
          14.5061,
          15.1789,
          15.6509,
          16.2546,
          16.7447,
          17.063,
          17.3507,
          17.6477,
          17.9243,
          13.9573,
          12.9303,
          7.7371,
          5.2641,
          4.4247,
          4.6581,
          4.6863,
          4.3794,
          3.606,
          3.4008,
          3.4766,
          3.9132,
          4.4115,
          4.8911,
          5.2602
        ]
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.297,
            0.3372,
            0.4015,
            0.3533,
            0.3882,
            0.4438,
            0.4521,
            0.4471,
            0.452,
            1.9034,
            0.9229,
            2.3565,
            1.4594,
            0.9164,
            0.5546,
            0.6233,
            0.7379,
            0.8997,
            0.7102,
            0.6154,
            0.4913,
            0.4673,
            0.4704,
            0.5051,
            0.4408
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            11.3854,
            12.5675,
            13.6047,
            14.4301,
            15.3773,
            16.2007,
            16.8427,
            17.4455,
            18.0492,
            18.6243,
            14.9479,
            14.2196,
            9.322,
            7.1572,
            6.6281,
            7.1677,
            7.4942,
            7.4786,
            6.991,
            7.0678,
            7.4198,
            8.126,
            8.886,
            9.6194,
            10.2346
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            13.7001,
            14.5061,
            15.1789,
            15.6509,
            16.2546,
            16.7447,
            17.063,
            17.3507,
            17.6477,
            17.9243,
            13.9573,
            12.9303,
            7.7371,
            5.2641,
            4.4247,
            4.6581,
            4.6863,
            4.3794,
            3.606,
            3.4008,
            3.4766,
            3.9132,
            4.4115,
            4.8911,
            5.2602
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.cpp -o POPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.so POPULATIONS/POPULATION_0012/INDIVIDUAL_MHZK05DJ/model.o -L/usr/lib/R/lib -lR\nStarting model phases\nNumber of phases: 2 \nPhase 1 \nInitial parameter values for phase 1 :\n       r        K        d  sd_cots sd_coral \n   5e-01    1e+03    3e-01    1e-01    1e-01 \nFinal parameter values for phase 1 :\n        r         K         d   sd_cots  sd_coral \n 8.072411 31.365588 17.192198  0.530453 12.617070 \nConvergence message: relative convergence (4) \nNumber of iterations: 118 \nObjective function value: 217.3224 \nGradient at solution for phase 1 :\n             [,1]         [,2]          [,3]          [,4]          [,5]\n[1,] 2.898268e-05 3.364722e-07 -1.432119e-05 -9.150979e-06 -3.827984e-06\nPhase 2 \nInitial parameter values for phase 2 :\n        alpha recovery_fast recovery_slow      beta_env     gamma_env \n         0.05          0.10          0.05          0.10          0.05 \n        theta \n         1.20 \nFinal parameter values for phase 2 :\n        alpha recovery_fast recovery_slow      beta_env     gamma_env \n   1.92469260    0.01476544    0.01073779    0.10283501    0.05240191 \n        theta \n   1.18349017 \nConvergence message: relative convergence (4) \nNumber of iterations: 39 \nObjective function value: 192.3518 \nGradient at solution for phase 2 :\n             [,1]         [,2]        [,3]         [,4]        [,5]\n[1,] 1.815391e-05 0.0002739158 -0.00244725 -0.005496506 0.006122695\n              [,6]\n[1,] -0.0001685234\nFinal Phase\nInitial parameter values for final phase:\n            r             K             d         alpha recovery_fast \n   8.07241117   31.36558758   17.19219819    1.92469260    0.01476544 \nrecovery_slow       sd_cots      sd_coral      beta_env     gamma_env \n   0.01073779    0.53045300   12.61706974    0.10283501    0.05240191 \n        theta \n   1.18349017 \nFinal parameter values for final phase:\n            r             K             d         alpha recovery_fast \n   8.92500522   21.46538484   18.92360822    2.92016657    0.02312547 \nrecovery_slow       sd_cots      sd_coral      beta_env     gamma_env \n   0.01938791    0.60412078    0.45633004    0.22581450    0.16267178 \n        theta \n   1.45493675 \nConvergence message: function evaluation limit reached without convergence (9) \nNumber of iterations: 116 \nObjective function value: 54.58929 \nGradient at solution for final phase:\n          [,1]        [,2]     [,3]       [,4]     [,5]     [,6]      [,7]\n[1,] -13.07654 -0.06398897 6.186555 -0.7247504 38.07997 54.53184 0.0045589\n           [,8]    [,9]    [,10]     [,11]\n[1,] 0.01424921 -274.33 310.9783 -3.405431\nAll phases completed\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 3\n $ cots_pred: num [1:26] 0.262 0.297 0.337 0.402 0.353 ...\n $ fast_pred: num [1:26] 10.1 11.4 12.6 13.6 14.4 ...\n $ slow_pred: num [1:26] 12.8 13.7 14.5 15.2 15.7 ...\nNULL\n\nDEBUG: Available variables in report:\n[1] \"cots_pred\" \"fast_pred\" \"slow_pred\"\n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.2969528 0.3372366 0.4015064 0.3532977 0.3881887 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.2615  0.4415  0.4809  0.6888  0.7310  2.3565 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 11.38544 12.56754 13.60467 14.43014 15.37729 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  6.628   7.483  10.152  11.437  14.818  18.624 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 13.70013 14.50615 15.17891 15.65095 16.25461 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  3.401   4.483  10.255  10.069  15.533  17.924 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.2969528 0.3372366 0.4015064 0.3532977 0.3881887 ...\nMSE (normalized): 1.477121 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 11.38544 12.56754 13.60467 14.43014 15.37729 ...\nMSE (normalized): 0.666799 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 13.70013 14.50615 15.17891 15.65095 16.25461 ...\nMSE (normalized): 0.4632575 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n1.4771215 0.6667990 0.4632575 \n\nDEBUG: Final objective value (mean of MSEs): 0.8690593 \n\nFinal objective function value: 0.8690593 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 0.8691,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         11     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"cots_pred\": [0.2615, 0.297, 0.3372, 0.4015, 0.3533, 0.3882, 0.4438, 0.4521, 0.4471, 0.452, 1.9034, 0.9229, 2.3565, 1.4594, 0.9164, 0.5546, 0.6233, 0.7379, 0.8997, 0.7102, 0.6154, 0.4913, 0.4673, 0.4704, 0.5051, 0.4408],\n    \"fast_pred\": [10.0694, 11.3854, 12.5675, 13.6047, 14.4301, 15.3773, 16.2007, 16.8427, 17.4455, 18.0492, 18.6243, 14.9479, 14.2196, 9.322, 7.1572, 6.6281, 7.1677, 7.4942, 7.4786, 6.991, 7.0678, 7.4198, 8.126, 8.886, 9.6194, 10.2346],\n    \"slow_pred\": [12.7726, 13.7001, 14.5061, 15.1789, 15.6509, 16.2546, 16.7447, 17.063, 17.3507, 17.6477, 17.9243, 13.9573, 12.9303, 7.7371, 5.2641, 4.4247, 4.6581, 4.6863, 4.3794, 3.606, 3.4008, 3.4766, 3.9132, 4.4115, 4.8911, 5.2602]\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.297, 0.3372, 0.4015, 0.3533, 0.3882, 0.4438, 0.4521, 0.4471, 0.452, 1.9034, 0.9229, 2.3565, 1.4594, 0.9164, 0.5546, 0.6233, 0.7379, 0.8997, 0.7102, 0.6154, 0.4913, 0.4673, 0.4704, 0.5051, 0.4408],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 11.3854, 12.5675, 13.6047, 14.4301, 15.3773, 16.2007, 16.8427, 17.4455, 18.0492, 18.6243, 14.9479, 14.2196, 9.322, 7.1572, 6.6281, 7.1677, 7.4942, 7.4786, 6.991, 7.0678, 7.4198, 8.126, 8.886, 9.6194, 10.2346],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 13.7001, 14.5061, 15.1789, 15.6509, 16.2546, 16.7447, 17.063, 17.3507, 17.6477, 17.9243, 13.9573, 12.9303, 7.7371, 5.2641, 4.4247, 4.6581, 4.6863, 4.3794, 3.606, 3.4008, 3.4766, 3.9132, 4.4115, 4.8911, 5.2602],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nhere() starts at /home/spi085/Documents/_Projects/SCCP-QuantModelling\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nThere were 26 warnings (use warnings() to see them)\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "3": {
      "status": "SUCCESS",
      "objective_value": 0.8691
    }
  }
}