{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp -o POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:95:22: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   95 |     cots_prev = fmax(cots_prev, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<double>\nIn file included from /usr/include/c++/13/cmath:47,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Macros.h:679,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Core:19,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Dense:1,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:92,\n                 from POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:96:22: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   96 |     fast_prev = fmax(fast_prev, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:97:22: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   97 |     slow_prev = fmax(slow_prev, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:139:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  139 |     cots_pred(t) = fmax(cots_prev + dcots, eps);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:151:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  151 |     fast_pred(t) = fmax(fast_prev + dfast, eps);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:161:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  161 |     slow_pred(t) = fmax(slow_prev + dslow, eps);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:180:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  180 |   nll += Type(0.01) * pow(fmax(Type(0.0), cots_mort_base - Type(2.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:181:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  181 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(0.05) - cots_mort_base), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:184:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  184 |   nll += Type(0.01) * pow(fmax(Type(0.0), temp_optimal - Type(32.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:185:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  185 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(24.0) - temp_optimal), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:188:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  188 |   nll += Type(0.01) * pow(fmax(Type(0.0), fast_carrying_cap - Type(80.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:189:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  189 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(10.0) - fast_carrying_cap), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:190:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  190 |   nll += Type(0.01) * pow(fmax(Type(0.0), slow_carrying_cap - Type(80.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:191:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  191 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(10.0) - slow_carrying_cap), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:194:31: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  194 |   nll += Type(0.1) * pow(fmax(Type(0.0), conversion_eff - Type(1.0)), 2);\n      |                               ^~~~~~~~~\n      |                               |\n      |                               CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:95:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   95 |     cots_prev = fmax(cots_prev, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:96:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   96 |     fast_prev = fmax(fast_prev, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:97:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   97 |     slow_prev = fmax(slow_prev, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:139:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  139 |     cots_pred(t) = fmax(cots_prev + dcots, eps);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:151:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  151 |     fast_pred(t) = fmax(fast_prev + dfast, eps);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:161:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  161 |     slow_pred(t) = fmax(slow_prev + dslow, eps);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:180:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  180 |   nll += Type(0.01) * pow(fmax(Type(0.0), cots_mort_base - Type(2.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:181:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  181 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(0.05) - cots_mort_base), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:184:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  184 |   nll += Type(0.01) * pow(fmax(Type(0.0), temp_optimal - Type(32.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:185:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  185 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(24.0) - temp_optimal), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:188:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  188 |   nll += Type(0.01) * pow(fmax(Type(0.0), fast_carrying_cap - Type(80.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:189:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  189 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(10.0) - fast_carrying_cap), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:190:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  190 |   nll += Type(0.01) * pow(fmax(Type(0.0), slow_carrying_cap - Type(80.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:191:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  191 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(10.0) - slow_carrying_cap), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:194:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  194 |   nll += Type(0.1) * pow(fmax(Type(0.0), conversion_eff - Type(1.0)), 2);\n      |                               ^~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:95:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   95 |     cots_prev = fmax(cots_prev, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:96:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   96 |     fast_prev = fmax(fast_prev, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:97:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   97 |     slow_prev = fmax(slow_prev, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:139:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  139 |     cots_pred(t) = fmax(cots_prev + dcots, eps);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:151:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  151 |     fast_pred(t) = fmax(fast_prev + dfast, eps);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:161:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  161 |     slow_pred(t) = fmax(slow_prev + dslow, eps);\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:180:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  180 |   nll += Type(0.01) * pow(fmax(Type(0.0), cots_mort_base - Type(2.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:181:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  181 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(0.05) - cots_mort_base), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:184:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  184 |   nll += Type(0.01) * pow(fmax(Type(0.0), temp_optimal - Type(32.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:185:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  185 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(24.0) - temp_optimal), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:188:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  188 |   nll += Type(0.01) * pow(fmax(Type(0.0), fast_carrying_cap - Type(80.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:189:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  189 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(10.0) - fast_carrying_cap), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:190:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  190 |   nll += Type(0.01) * pow(fmax(Type(0.0), slow_carrying_cap - Type(80.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:191:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  191 |   nll += Type(0.01) * pow(fmax(Type(0.0), Type(10.0) - slow_carrying_cap), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp:194:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  194 |   nll += Type(0.1) * pow(fmax(Type(0.0), conversion_eff - Type(1.0)), 2);\n      |                               ^~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "SUCCESS",
      "objective_value": 0.4207,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         19     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "fast_growth": 0.9238,
        "cots_pred": [
          0.2615,
          0.3627,
          0.4925,
          0.6226,
          0.7119,
          0.7488,
          0.7577,
          0.7587,
          0.7579,
          0.7567,
          0.903,
          0.737,
          1.0678,
          0.9743,
          0.5929,
          0.5482,
          0.5037,
          0.4555,
          0.4037,
          0.3518,
          0.3074,
          0.2791,
          0.2731,
          0.2922,
          0.3369,
          0.405
        ],
        "slow_growth": 0.279,
        "temp_optimal": 29.9513,
        "allee_strength": 0.0183,
        "density_mort": 1.2311,
        "allee_threshold": 0.0183,
        "attack_fast": 9.9526,
        "temp_effect": 0.1231,
        "fast_pred": [
          10.0694,
          14.2388,
          18.7189,
          22.4839,
          24.7137,
          25.5521,
          25.729,
          25.7057,
          25.6217,
          25.5097,
          25.3785,
          22.4984,
          22.3364,
          16.0712,
          10.3699,
          9.148,
          8.0256,
          7.0185,
          6.2097,
          5.7163,
          5.6586,
          6.1341,
          7.2083,
          8.906,
          11.1674,
          13.7703
        ],
        "conversion_eff": 0.1198,
        "fast_carrying_cap": 61.9067,
        "attack_slow": 3.7257,
        "slow_carrying_cap": 39.3673,
        "handling_time": 0.0422,
        "sigma_fast": 6.298,
        "food_limitation": 2.0019,
        "slow_pred": [
          12.7726,
          13.461,
          13.9334,
          14.1324,
          14.0721,
          13.8496,
          13.5774,
          13.3104,
          13.0603,
          12.8265,
          12.6064,
          11.8892,
          11.5551,
          10.065,
          8.2413,
          7.323,
          6.4914,
          5.745,
          5.1045,
          4.6039,
          4.2756,
          4.1299,
          4.1453,
          4.2788,
          4.4827,
          4.7114
        ],
        "cots_recruit_base": 1.5836,
        "sigma_cots": 0.3335,
        "sigma_slow": 2.2428,
        "cots_mort_base": 1.6487
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.3627,
            0.4925,
            0.6226,
            0.7119,
            0.7488,
            0.7577,
            0.7587,
            0.7579,
            0.7567,
            0.903,
            0.737,
            1.0678,
            0.9743,
            0.5929,
            0.5482,
            0.5037,
            0.4555,
            0.4037,
            0.3518,
            0.3074,
            0.2791,
            0.2731,
            0.2922,
            0.3369,
            0.405
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            14.2388,
            18.7189,
            22.4839,
            24.7137,
            25.5521,
            25.729,
            25.7057,
            25.6217,
            25.5097,
            25.3785,
            22.4984,
            22.3364,
            16.0712,
            10.3699,
            9.148,
            8.0256,
            7.0185,
            6.2097,
            5.7163,
            5.6586,
            6.1341,
            7.2083,
            8.906,
            11.1674,
            13.7703
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            13.461,
            13.9334,
            14.1324,
            14.0721,
            13.8496,
            13.5774,
            13.3104,
            13.0603,
            12.8265,
            12.6064,
            11.8892,
            11.5551,
            10.065,
            8.2413,
            7.323,
            6.4914,
            5.745,
            5.1045,
            4.6039,
            4.2756,
            4.1299,
            4.1453,
            4.2788,
            4.4827,
            4.7114
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp -o POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.so POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\nlog_cots_recruit_base       log_temp_effect          temp_optimal \n                 -1.0                  -1.5                  28.0 \n   log_cots_mort_base   log_allee_threshold    log_allee_strength \n                 -1.0                  -2.0                  -1.5 \n     log_density_mort   log_food_limitation       log_attack_fast \n                 -1.0                   0.0                   0.5 \n      log_attack_slow     log_handling_time    log_conversion_eff \n                 -0.5                  -2.0                  -1.5 \nStarting model phases\nNumber of phases: 4 \nPhase 1 \nInitial parameter values for phase 1 :\nlog_cots_recruit_base    log_cots_mort_base       log_attack_fast \n                 -1.0                  -1.0                   0.5 \n      log_attack_slow       log_fast_growth       log_slow_growth \n                 -0.5                  -0.5                  -1.5 \nFinal parameter values for phase 1 :\nlog_cots_recruit_base    log_cots_mort_base       log_attack_fast \n           0.02224640           -0.01357997            0.85397428 \n      log_attack_slow       log_fast_growth       log_slow_growth \n          -0.33887084           -0.74039029           -2.63699456 \nConvergence message: relative convergence (4) \nNumber of iterations: 63 \nObjective function value: 308.8204 \nGradient at solution for phase 1 :\n             [,1]          [,2]         [,3]         [,4]          [,5]\n[1,] 1.069641e-05 -0.0001010534 8.268173e-06 6.157511e-06 -1.453939e-05\n              [,6]\n[1,] -7.094272e-06\nPhase 2 \nInitial parameter values for phase 2 :\n    log_temp_effect        temp_optimal    log_density_mort log_food_limitation \n               -1.5                28.0                -1.0                 0.0 \n log_conversion_eff   fast_carrying_cap   slow_carrying_cap \n               -1.5                50.0                40.0 \nFinal parameter values for phase 2 :\n    log_temp_effect        temp_optimal    log_density_mort log_food_limitation \n       -1.533560342        27.984859671        -1.001240021         0.003929677 \n log_conversion_eff   fast_carrying_cap   slow_carrying_cap \n       -1.501829152        49.999098083        40.000084954 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 308.2712 \nGradient at solution for phase 2 :\n         [,1]     [,2]     [,3]       [,4]      [,5]      [,6]        [,7]\n[1,] 12.90816 5.677856 1.994497 -0.6506459 -11.14505 0.3858254 -0.03590726\nPhase 3 \nInitial parameter values for phase 3 :\nlog_allee_threshold  log_allee_strength   log_handling_time \n               -2.0                -1.5                -2.0 \nFinal parameter values for phase 3 :\nlog_allee_threshold  log_allee_strength   log_handling_time \n          -1.345486           -2.258497           -2.002099 \nConvergence message: relative convergence (4) \nNumber of iterations: 11 \nObjective function value: 308.0485 \nGradient at solution for phase 3 :\n             [,1]        [,2]        [,3]\n[1,] 2.489783e-05 8.31656e-06 0.001193899\nPhase 4 \nInitial parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n          -1.0            0.5            0.5 \nFinal parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n    -0.7062939      1.8384697      0.8273268 \nConvergence message: relative convergence (4) \nNumber of iterations: 9 \nObjective function value: 162.3005 \nGradient at solution for phase 4 :\n             [,1]         [,2]         [,3]\n[1,] 0.0001266255 7.208605e-05 0.0001552359\nFinal Phase\nInitial parameter values for final phase:\nlog_cots_recruit_base       log_temp_effect          temp_optimal \n          0.022246398          -1.533560342          27.984859671 \n   log_cots_mort_base   log_allee_threshold    log_allee_strength \n         -0.013579966          -1.345485657          -2.258497001 \n     log_density_mort   log_food_limitation       log_attack_fast \n         -1.001240021           0.003929677           0.853974278 \n      log_attack_slow     log_handling_time    log_conversion_eff \n         -0.338870845          -2.002099017          -1.501829152 \n      log_fast_growth       log_slow_growth     fast_carrying_cap \n         -0.740390285          -2.636994562          49.999098083 \n    slow_carrying_cap        log_sigma_cots        log_sigma_fast \n         40.000084954          -0.706293913           1.838469651 \n       log_sigma_slow \n          0.827326795 \nFinal parameter values for final phase:\nlog_cots_recruit_base       log_temp_effect          temp_optimal \n           0.45970205           -2.09509132           29.95126434 \n   log_cots_mort_base   log_allee_threshold    log_allee_strength \n           0.50000000           -4.00000000           -4.00000000 \n     log_density_mort   log_food_limitation       log_attack_fast \n           0.20787074            0.69411823            2.29783071 \n      log_attack_slow     log_handling_time    log_conversion_eff \n           1.31526480           -3.16500101           -2.12218617 \n      log_fast_growth       log_slow_growth     fast_carrying_cap \n          -0.07921584           -1.27654273           61.90671367 \n    slow_carrying_cap        log_sigma_cots        log_sigma_fast \n          39.36732566           -1.09812109            1.84023392 \n       log_sigma_slow \n           0.80774650 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 151.8861 \nGradient at solution for final phase:\n           [,1]      [,2]      [,3]     [,4]         [,5]         [,6]     [,7]\n[1,] -0.4734209 0.5422478 0.3301793 19.52126 1.288975e-06 8.967603e-08 9.605933\n          [,8]      [,9]       [,10]    [,11]     [,12]    [,13]    [,14]\n[1,] 0.8884911 -4.573143 0.003990685 36.24896 -29.59426 9.361049 1.005767\n          [,15]      [,16]     [,17]       [,18]      [,19]\n[1,] 0.08790391 0.01097426 0.0752671 -0.07900528 0.02654274\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 22\n $ fast_growth      : num 0.924\n $ cots_pred        : num [1:26] 0.262 0.363 0.493 0.623 0.712 ...\n $ slow_growth      : num 0.279\n $ temp_optimal     : num 30\n $ allee_strength   : num 0.0183\n $ density_mort     : num 1.23\n $ allee_threshold  : num 0.0183\n $ attack_fast      : num 9.95\n $ temp_effect      : num 0.123\n $ fast_pred        : num [1:26] 10.1 14.2 18.7 22.5 24.7 ...\n $ conversion_eff   : num 0.12\n $ fast_carrying_cap: num 61.9\n $ attack_slow      : num 3.73\n $ slow_carrying_cap: num 39.4\n $ handling_time    : num 0.0422\n $ sigma_fast       : num 6.3\n $ food_limitation  : num 2\n $ slow_pred        : num [1:26] 12.8 13.5 13.9 14.1 14.1 ...\n $ cots_recruit_base: num 1.58\n $ sigma_cots       : num 0.333\n $ sigma_slow       : num 2.24\n $ cots_mort_base   : num 1.65\nNULL\n\nDEBUG: Available variables in report:\n [1] \"fast_growth\"       \"cots_pred\"         \"slow_growth\"      \n [4] \"temp_optimal\"      \"allee_strength\"    \"density_mort\"     \n [7] \"allee_threshold\"   \"attack_fast\"       \"temp_effect\"      \n[10] \"fast_pred\"         \"conversion_eff\"    \"fast_carrying_cap\"\n[13] \"attack_slow\"       \"slow_carrying_cap\" \"handling_time\"    \n[16] \"sigma_fast\"        \"food_limitation\"   \"slow_pred\"        \n[19] \"cots_recruit_base\" \"sigma_cots\"        \"sigma_slow\"       \n[22] \"cots_mort_base\"   \n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.3627042 0.492512 0.6226481 0.711897 0.7487729 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.2615  0.3545  0.5259  0.5639  0.7547  1.0678 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 14.23875 18.71885 22.48391 24.71367 25.55214 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  5.659   8.246  14.005  15.537  24.160  25.729 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 13.46101 13.93338 14.13237 14.07207 13.84964 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.130   4.810  10.810   9.409  13.248  14.132 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.3627042 0.492512 0.6226481 0.711897 0.7487729 ...\nMSE (normalized): 0.6445519 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 14.23875 18.71885 22.48391 24.71367 25.55214 ...\nMSE (normalized): 0.3886449 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 13.46101 13.93338 14.13237 14.07207 13.84964 ...\nMSE (normalized): 0.2288947 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n0.6445519 0.3886449 0.2288947 \n\nDEBUG: Final objective value (mean of MSEs): 0.4206972 \n\nFinal objective function value: 0.4206972 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 0.4207,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         19     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"fast_growth\": 0.9238,\n    \"cots_pred\": [0.2615, 0.3627, 0.4925, 0.6226, 0.7119, 0.7488, 0.7577, 0.7587, 0.7579, 0.7567, 0.903, 0.737, 1.0678, 0.9743, 0.5929, 0.5482, 0.5037, 0.4555, 0.4037, 0.3518, 0.3074, 0.2791, 0.2731, 0.2922, 0.3369, 0.405],\n    \"slow_growth\": 0.279,\n    \"temp_optimal\": 29.9513,\n    \"allee_strength\": 0.0183,\n    \"density_mort\": 1.2311,\n    \"allee_threshold\": 0.0183,\n    \"attack_fast\": 9.9526,\n    \"temp_effect\": 0.1231,\n    \"fast_pred\": [10.0694, 14.2388, 18.7189, 22.4839, 24.7137, 25.5521, 25.729, 25.7057, 25.6217, 25.5097, 25.3785, 22.4984, 22.3364, 16.0712, 10.3699, 9.148, 8.0256, 7.0185, 6.2097, 5.7163, 5.6586, 6.1341, 7.2083, 8.906, 11.1674, 13.7703],\n    \"conversion_eff\": 0.1198,\n    \"fast_carrying_cap\": 61.9067,\n    \"attack_slow\": 3.7257,\n    \"slow_carrying_cap\": 39.3673,\n    \"handling_time\": 0.0422,\n    \"sigma_fast\": 6.298,\n    \"food_limitation\": 2.0019,\n    \"slow_pred\": [12.7726, 13.461, 13.9334, 14.1324, 14.0721, 13.8496, 13.5774, 13.3104, 13.0603, 12.8265, 12.6064, 11.8892, 11.5551, 10.065, 8.2413, 7.323, 6.4914, 5.745, 5.1045, 4.6039, 4.2756, 4.1299, 4.1453, 4.2788, 4.4827, 4.7114],\n    \"cots_recruit_base\": 1.5836,\n    \"sigma_cots\": 0.3335,\n    \"sigma_slow\": 2.2428,\n    \"cots_mort_base\": 1.6487\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.3627, 0.4925, 0.6226, 0.7119, 0.7488, 0.7577, 0.7587, 0.7579, 0.7567, 0.903, 0.737, 1.0678, 0.9743, 0.5929, 0.5482, 0.5037, 0.4555, 0.4037, 0.3518, 0.3074, 0.2791, 0.2731, 0.2922, 0.3369, 0.405],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 14.2388, 18.7189, 22.4839, 24.7137, 25.5521, 25.729, 25.7057, 25.6217, 25.5097, 25.3785, 22.4984, 22.3364, 16.0712, 10.3699, 9.148, 8.0256, 7.0185, 6.2097, 5.7163, 5.6586, 6.1341, 7.2083, 8.906, 11.1674, 13.7703],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 13.461, 13.9334, 14.1324, 14.0721, 13.8496, 13.5774, 13.3104, 13.0603, 12.8265, 12.6064, 11.8892, 11.5551, 10.065, 8.2413, 7.323, 6.4914, 5.745, 5.1045, 4.6039, 4.2756, 4.1299, 4.1453, 4.2788, 4.4827, 4.7114],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "3": {
      "status": "SUCCESS",
      "objective_value": 0.4207
    },
    "4": {
      "status": "SUCCESS",
      "objective_value": 1.2407,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         19     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "fast_growth": 0.09,
        "cots_pred": [
          0.2615,
          0.2284,
          0.3003,
          0.1056,
          0.312,
          0.0606,
          0.2153,
          0.3202,
          0.0267,
          0.1071,
          0.3142,
          0.0512,
          0.2151,
          1.2912,
          1e-08,
          4.3305e-08,
          1.8776e-07,
          8.1498e-07,
          3.5412e-06,
          0,
          0.0001,
          0.0003,
          0.0013,
          0.0055,
          0.0237,
          0.0962
        ],
        "slow_growth": 0.051,
        "temp_optimal": 28,
        "allee_strength": 1.0043,
        "density_mort": 13.4025,
        "allee_threshold": 37.1787,
        "attack_fast": 19294.7211,
        "temp_effect": 1.3825,
        "fast_pred": [
          10.0694,
          10.0474,
          10.0999,
          9.9203,
          10.3084,
          10.0568,
          10.5827,
          10.6199,
          10.2873,
          10.9296,
          11.3199,
          10.9788,
          11.5614,
          11.559,
          7.4539,
          8.0247,
          8.631,
          9.2736,
          9.9533,
          10.6706,
          11.4257,
          12.2185,
          13.0478,
          13.9095,
          14.7879,
          15.6181
        ],
        "conversion_eff": 1,
        "fast_carrying_cap": 49.8517,
        "attack_slow": 22026.4658,
        "slow_carrying_cap": 40.3373,
        "handling_time": 0.1433,
        "sigma_fast": 7.3891,
        "food_limitation": 1.0557,
        "slow_pred": [
          12.7726,
          12.1385,
          11.6476,
          10.8791,
          10.8747,
          10.0903,
          10.2508,
          9.852,
          9.0828,
          9.3483,
          9.3457,
          8.648,
          8.8254,
          8.4784,
          4.7133,
          4.9257,
          5.1464,
          5.3755,
          5.6132,
          5.8598,
          6.1153,
          6.3799,
          6.6532,
          6.9335,
          7.2125,
          7.4555
        ],
        "cots_recruit_base": 7.3891,
        "sigma_cots": 7.3395,
        "sigma_slow": 3.5243,
        "cots_mort_base": 2.5574
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.2284,
            0.3003,
            0.1056,
            0.312,
            0.0606,
            0.2153,
            0.3202,
            0.0267,
            0.1071,
            0.3142,
            0.0512,
            0.2151,
            1.2912,
            1e-08,
            4.3305e-08,
            1.8776e-07,
            8.1498e-07,
            3.5412e-06,
            0,
            0.0001,
            0.0003,
            0.0013,
            0.0055,
            0.0237,
            0.0962
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            10.0474,
            10.0999,
            9.9203,
            10.3084,
            10.0568,
            10.5827,
            10.6199,
            10.2873,
            10.9296,
            11.3199,
            10.9788,
            11.5614,
            11.559,
            7.4539,
            8.0247,
            8.631,
            9.2736,
            9.9533,
            10.6706,
            11.4257,
            12.2185,
            13.0478,
            13.9095,
            14.7879,
            15.6181
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            12.1385,
            11.6476,
            10.8791,
            10.8747,
            10.0903,
            10.2508,
            9.852,
            9.0828,
            9.3483,
            9.3457,
            8.648,
            8.8254,
            8.4784,
            4.7133,
            4.9257,
            5.1464,
            5.3755,
            5.6132,
            5.8598,
            6.1153,
            6.3799,
            6.6532,
            6.9335,
            7.2125,
            7.4555
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.cpp -o POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.so POPULATIONS/POPULATION_0012/INDIVIDUAL_TQBY095W/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\nlog_cots_recruit_base       log_temp_effect          temp_optimal \n               -1.000                -1.500                28.500 \n   log_cots_mort_base   log_allee_threshold    log_allee_strength \n                0.939                -2.000                -1.500 \n     log_density_mort   log_food_limitation       log_attack_fast \n               -1.000                 0.000                 0.500 \n      log_attack_slow     log_handling_time    log_conversion_eff \n               -0.500                -2.000                -1.500 \nStarting model phases\nNumber of phases: 4 \nPhase 1 \nInitial parameter values for phase 1 :\nlog_cots_recruit_base    log_cots_mort_base       log_attack_fast \n               -1.000                 0.939                 0.500 \n      log_attack_slow       log_fast_growth       log_slow_growth \n               -0.500                -0.500                -1.500 \nClamping starts up to lower bounds for:\n log_attack_slow \nFinal parameter values for phase 1 :\nlog_cots_recruit_base    log_cots_mort_base       log_attack_fast \n             2.000000              0.939000             10.000000 \n      log_attack_slow       log_fast_growth       log_slow_growth \n             9.370213             -2.041929             -4.000000 \nConvergence message: relative convergence (4) \nNumber of iterations: 31 \nObjective function value: 22870.29 \nGradient at solution for phase 1 :\n          [,1]     [,2]         [,3]        [,4]         [,5]     [,6]\n[1,] -77.41631 457.7841 -0.008089857 0.001144256 0.0003168077 19.63488\nPhase 2 \nInitial parameter values for phase 2 :\n    log_temp_effect        temp_optimal    log_density_mort log_food_limitation \n               -1.5                28.5                -1.0                 0.0 \n log_conversion_eff   fast_carrying_cap   slow_carrying_cap \n               -1.5                50.0                40.0 \nClamping starts up to lower bounds for:\n log_temp_effect, log_density_mort \nFinal parameter values for phase 2 :\n    log_temp_effect        temp_optimal    log_density_mort log_food_limitation \n         0.32280387         28.00001763          2.59410239          0.02740674 \n log_conversion_eff   fast_carrying_cap   slow_carrying_cap \n        -0.18956610         49.86183817         39.96466970 \nConvergence message: function evaluation limit reached without convergence (9) \nNumber of iterations: 133 \nObjective function value: 5697.135 \nGradient at solution for phase 2 :\n          [,1]      [,2]      [,3]     [,4]      [,5]      [,6]       [,7]\n[1,] -12.76485 -31.82273 -1340.083 47.09493 -1900.189 -2.626557 -0.3287085\nPhase 3 \nInitial parameter values for phase 3 :\nlog_allee_threshold  log_allee_strength   log_handling_time \n               -2.0                -1.5                -2.0 \nClamping starts up to lower bounds for:\n log_allee_threshold, log_allee_strength \nFinal parameter values for phase 3 :\nlog_allee_threshold  log_allee_strength   log_handling_time \n           3.724917            0.000000           -2.131086 \nConvergence message: function evaluation limit reached without convergence (9) \nNumber of iterations: 127 \nObjective function value: 5692 \nGradient at solution for phase 3 :\n          [,1]      [,2]      [,3]\n[1,] -82.42934 -11385.56 -80749.02\nPhase 4 \nInitial parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n          -1.0            0.5            0.5 \nFinal parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n      1.989647       2.000000       1.318251 \nConvergence message: relative convergence (4) \nNumber of iterations: 12 \nObjective function value: 269.5404 \nGradient at solution for phase 4 :\n             [,1]      [,2]         [,3]\n[1,] 6.628942e-07 -41.37316 -2.10447e-05\nFinal Phase\nInitial parameter values for final phase:\nlog_cots_recruit_base       log_temp_effect          temp_optimal \n           2.00000000            0.32280387           28.00001763 \n   log_cots_mort_base   log_allee_threshold    log_allee_strength \n           0.93900000            3.72491746            0.00000000 \n     log_density_mort   log_food_limitation       log_attack_fast \n           2.59410239            0.02740674           10.00000000 \n      log_attack_slow     log_handling_time    log_conversion_eff \n           9.37021290           -2.13108637           -0.18956610 \n      log_fast_growth       log_slow_growth     fast_carrying_cap \n          -2.04192852           -4.00000000           49.86183817 \n    slow_carrying_cap        log_sigma_cots        log_sigma_fast \n          39.96466970            1.98964684            2.00000000 \n       log_sigma_slow \n           1.31825148 \nFinal parameter values for final phase:\nlog_cots_recruit_base       log_temp_effect          temp_optimal \n          2.000000000           0.323857780          28.000000000 \n   log_cots_mort_base   log_allee_threshold    log_allee_strength \n          0.939000000           3.615735639           0.004267262 \n     log_density_mort   log_food_limitation       log_attack_fast \n          2.595440784           0.054209445           9.867586820 \n      log_attack_slow     log_handling_time    log_conversion_eff \n         10.000000000          -1.942922913           0.000000000 \n      log_fast_growth       log_slow_growth     fast_carrying_cap \n         -2.407439603          -2.975336929          49.851725441 \n    slow_carrying_cap        log_sigma_cots        log_sigma_fast \n         40.337263083           1.993273298           2.000000000 \n       log_sigma_slow \n          1.259673401 \nConvergence message: function evaluation limit reached without convergence (9) \nNumber of iterations: 53 \nObjective function value: 264.8064 \nGradient at solution for final phase:\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]\n[1,] -7.016464 11.46428 21.17001 785.9108 2.328663 306.2711 1164.304 14.17095\n           [,9]       [,10]    [,11]     [,12]    [,13]    [,14]      [,15]\n[1,] 0.03004825 -0.06145793 2144.001 -2144.615 2.110285 0.504622 0.01280248\n           [,16]     [,17]     [,18]     [,19]\n[1,] -0.01667944 0.1712064 -35.31377 0.3785841\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 22\n $ fast_growth      : num 0.09\n $ cots_pred        : num [1:26] 0.262 0.228 0.3 0.106 0.312 ...\n $ slow_growth      : num 0.051\n $ temp_optimal     : num 28\n $ allee_strength   : num 1\n $ density_mort     : num 13.4\n $ allee_threshold  : num 37.2\n $ attack_fast      : num 19295\n $ temp_effect      : num 1.38\n $ fast_pred        : num [1:26] 10.07 10.05 10.1 9.92 10.31 ...\n $ conversion_eff   : num 1\n $ fast_carrying_cap: num 49.9\n $ attack_slow      : num 22026\n $ slow_carrying_cap: num 40.3\n $ handling_time    : num 0.143\n $ sigma_fast       : num 7.39\n $ food_limitation  : num 1.06\n $ slow_pred        : num [1:26] 12.8 12.1 11.6 10.9 10.9 ...\n $ cots_recruit_base: num 7.39\n $ sigma_cots       : num 7.34\n $ sigma_slow       : num 3.52\n $ cots_mort_base   : num 2.56\nNULL\n\nDEBUG: Available variables in report:\n [1] \"fast_growth\"       \"cots_pred\"         \"slow_growth\"      \n [4] \"temp_optimal\"      \"allee_strength\"    \"density_mort\"     \n [7] \"allee_threshold\"   \"attack_fast\"       \"temp_effect\"      \n[10] \"fast_pred\"         \"conversion_eff\"    \"fast_carrying_cap\"\n[13] \"attack_slow\"       \"slow_carrying_cap\" \"handling_time\"    \n[16] \"sigma_fast\"        \"food_limitation\"   \"slow_pred\"        \n[19] \"cots_recruit_base\" \"sigma_cots\"        \"sigma_slow\"       \n[22] \"cots_mort_base\"   \n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.22838 0.3003243 0.1056404 0.312015 0.06055818 \nDEBUG: Summary statistics:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n0.0000000 0.0001233 0.0558950 0.1514042 0.2251047 1.2912212 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 10.04744 10.09989 9.920295 10.30842 10.05684 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  7.454  10.050  10.601  10.898  11.526  15.618 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 12.13848 11.64756 10.87914 10.8747 10.09035 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.713   6.181   8.563   8.255  10.031  12.773 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.22838 0.3003243 0.1056404 0.312015 0.06055818 ...\nMSE (normalized): 1.908378 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 10.04744 10.09989 9.920295 10.30842 10.05684 ...\nMSE (normalized): 1.258125 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 12.13848 11.64756 10.87914 10.8747 10.09035 ...\nMSE (normalized): 0.5556849 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n1.9083781 1.2581255 0.5556849 \n\nDEBUG: Final objective value (mean of MSEs): 1.24073 \n\nFinal objective function value: 1.24073 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 1.2407,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         19     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"fast_growth\": 0.09,\n    \"cots_pred\": [0.2615, 0.2284, 0.3003, 0.1056, 0.312, 0.0606, 0.2153, 0.3202, 0.0267, 0.1071, 0.3142, 0.0512, 0.2151, 1.2912, 1e-08, 4.3305e-08, 1.8776e-07, 8.1498e-07, 3.5412e-06, 0, 0.0001, 0.0003, 0.0013, 0.0055, 0.0237, 0.0962],\n    \"slow_growth\": 0.051,\n    \"temp_optimal\": 28,\n    \"allee_strength\": 1.0043,\n    \"density_mort\": 13.4025,\n    \"allee_threshold\": 37.1787,\n    \"attack_fast\": 19294.7211,\n    \"temp_effect\": 1.3825,\n    \"fast_pred\": [10.0694, 10.0474, 10.0999, 9.9203, 10.3084, 10.0568, 10.5827, 10.6199, 10.2873, 10.9296, 11.3199, 10.9788, 11.5614, 11.559, 7.4539, 8.0247, 8.631, 9.2736, 9.9533, 10.6706, 11.4257, 12.2185, 13.0478, 13.9095, 14.7879, 15.6181],\n    \"conversion_eff\": 1,\n    \"fast_carrying_cap\": 49.8517,\n    \"attack_slow\": 22026.4658,\n    \"slow_carrying_cap\": 40.3373,\n    \"handling_time\": 0.1433,\n    \"sigma_fast\": 7.3891,\n    \"food_limitation\": 1.0557,\n    \"slow_pred\": [12.7726, 12.1385, 11.6476, 10.8791, 10.8747, 10.0903, 10.2508, 9.852, 9.0828, 9.3483, 9.3457, 8.648, 8.8254, 8.4784, 4.7133, 4.9257, 5.1464, 5.3755, 5.6132, 5.8598, 6.1153, 6.3799, 6.6532, 6.9335, 7.2125, 7.4555],\n    \"cots_recruit_base\": 7.3891,\n    \"sigma_cots\": 7.3395,\n    \"sigma_slow\": 3.5243,\n    \"cots_mort_base\": 2.5574\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.2284, 0.3003, 0.1056, 0.312, 0.0606, 0.2153, 0.3202, 0.0267, 0.1071, 0.3142, 0.0512, 0.2151, 1.2912, 1e-08, 4.3305e-08, 1.8776e-07, 8.1498e-07, 3.5412e-06, 0, 0.0001, 0.0003, 0.0013, 0.0055, 0.0237, 0.0962],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 10.0474, 10.0999, 9.9203, 10.3084, 10.0568, 10.5827, 10.6199, 10.2873, 10.9296, 11.3199, 10.9788, 11.5614, 11.559, 7.4539, 8.0247, 8.631, 9.2736, 9.9533, 10.6706, 11.4257, 12.2185, 13.0478, 13.9095, 14.7879, 15.6181],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 12.1385, 11.6476, 10.8791, 10.8747, 10.0903, 10.2508, 9.852, 9.0828, 9.3483, 9.3457, 8.648, 8.8254, 8.4784, 4.7133, 4.9257, 5.1464, 5.3755, 5.6132, 5.8598, 6.1153, 6.3799, 6.6532, 6.9335, 7.2125, 7.4555],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "5": {
      "status": "SUCCESS",
      "objective_value": 1.2407
    }
  }
}