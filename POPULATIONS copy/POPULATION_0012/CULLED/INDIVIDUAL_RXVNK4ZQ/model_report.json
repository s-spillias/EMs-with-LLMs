{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp -o POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:124:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  124 |     cots_pred(t) = fmax(cots_prev + cots_change, Type(0.0));    // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\nIn file included from /usr/include/c++/13/cmath:47,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Macros.h:679,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Core:19,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Dense:1,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:92,\n                 from POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:127:31: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  127 |     Type fast_available = fmax(fast_prev - predation_threshold, Type(0.0)); // Available fast coral above threshold (% cover)\n      |                           ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:132:31: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  132 |     Type slow_available = fmax(slow_prev - predation_threshold, Type(0.0)); // Available slow coral above threshold (% cover)\n      |                           ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:144:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  144 |     fast_pred(t) = fmax(fast_prev + fast_change, Type(0.0));    // Update fast coral (non-negative, % cover)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:150:24: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  150 |     slow_pred(t) = fmax(slow_prev + slow_change, Type(0.0));    // Update slow coral (non-negative, % cover)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:124:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  124 |     cots_pred(t) = fmax(cots_prev + cots_change, Type(0.0));    // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:127:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  127 |     Type fast_available = fmax(fast_prev - predation_threshold, Type(0.0)); // Available fast coral above threshold (% cover)\n      |                           ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:132:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  132 |     Type slow_available = fmax(slow_prev - predation_threshold, Type(0.0)); // Available slow coral above threshold (% cover)\n      |                           ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:144:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  144 |     fast_pred(t) = fmax(fast_prev + fast_change, Type(0.0));    // Update fast coral (non-negative, % cover)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:150:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  150 |     slow_pred(t) = fmax(slow_prev + slow_change, Type(0.0));    // Update slow coral (non-negative, % cover)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:124:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  124 |     cots_pred(t) = fmax(cots_prev + cots_change, Type(0.0));    // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:127:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  127 |     Type fast_available = fmax(fast_prev - predation_threshold, Type(0.0)); // Available fast coral above threshold (% cover)\n      |                           ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:132:31: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  132 |     Type slow_available = fmax(slow_prev - predation_threshold, Type(0.0)); // Available slow coral above threshold (% cover)\n      |                           ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                               |\n      |                               CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:144:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  144 |     fast_pred(t) = fmax(fast_prev + fast_change, Type(0.0));    // Update fast coral (non-negative, % cover)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:150:24: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  150 |     slow_pred(t) = fmax(slow_prev + slow_change, Type(0.0));    // Update slow coral (non-negative, % cover)\n      |                    ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                        |\n      |                        CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp -o POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: error: \u2018posfun\u2019 was not declared in this scope\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:129:33: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  129 |     Type fast_available = posfun(fast_above_threshold, Type(0.0), eps); // Available fast coral above threshold (% cover)\n      |                           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:135:33: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  135 |     Type slow_available = posfun(slow_above_threshold, Type(0.0), eps); // Available slow coral above threshold (% cover)\n      |                           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:148:26: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  148 |     fast_pred(t) = posfun(fast_new, Type(0.0), eps);             // Update fast coral (non-negative, % cover)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:155:26: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  155 |     slow_pred(t) = posfun(slow_new, Type(0.0), eps);             // Update slow coral (non-negative, % cover)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = double]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2035:7:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: error: \u2018posfun\u2019 was not declared in this scope\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:129:33: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  129 |     Type fast_available = posfun(fast_above_threshold, Type(0.0), eps); // Available fast coral above threshold (% cover)\n      |                           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:135:33: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  135 |     Type slow_available = posfun(slow_above_threshold, Type(0.0), eps); // Available slow coral above threshold (% cover)\n      |                           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:148:26: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  148 |     fast_pred(t) = posfun(fast_new, Type(0.0), eps);             // Update fast coral (non-negative, % cover)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:155:26: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  155 |     slow_pred(t) = posfun(slow_new, Type(0.0), eps);             // Update slow coral (non-negative, % cover)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: error: \u2018posfun\u2019 was not declared in this scope\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:129:33: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  129 |     Type fast_available = posfun(fast_above_threshold, Type(0.0), eps); // Available fast coral above threshold (% cover)\n      |                           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:135:33: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  135 |     Type slow_available = posfun(slow_above_threshold, Type(0.0), eps); // Available slow coral above threshold (% cover)\n      |                           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:148:26: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  148 |     fast_pred(t) = posfun(fast_new, Type(0.0), eps);             // Update fast coral (non-negative, % cover)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:155:26: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  155 |     slow_pred(t) = posfun(slow_new, Type(0.0), eps);             // Update slow coral (non-negative, % cover)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: error: \u2018posfun\u2019 was not declared in this scope\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:129:33: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  129 |     Type fast_available = posfun(fast_above_threshold, Type(0.0), eps); // Available fast coral above threshold (% cover)\n      |                           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:135:33: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  135 |     Type slow_available = posfun(slow_above_threshold, Type(0.0), eps); // Available slow coral above threshold (% cover)\n      |                           ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:148:26: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  148 |     fast_pred(t) = posfun(fast_new, Type(0.0), eps);             // Update fast coral (non-negative, % cover)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:155:26: error: \u2018posfun\u2019 was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation\n  155 |     slow_pred(t) = posfun(slow_new, Type(0.0), eps);             // Update slow coral (non-negative, % cover)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nPOPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp:125:26: note: \u2018posfun\u2019 declared here, later in the translation unit\n  125 |     cots_pred(t) = posfun(cots_new, Type(0.0), eps);             // Update COTS (non-negative, individuals/m\u00b2)\n      |                    ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "3": {
      "status": "SUCCESS",
      "objective_value": 0.4861,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         24     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "sigma_slow": 0.4126,
        "immigration_efficiency": 0.4858,
        "cots_mort_base": 0.1302,
        "competition_coef": 0.6972,
        "temp_growth_opt": 27.8264,
        "attack_fast": 12.1814,
        "predation_threshold": 1.9871,
        "slow_pred": [
          12.7726,
          13.0956,
          13.1662,
          12.8627,
          12.9416,
          12.7698,
          12.3511,
          11.7456,
          11.1041,
          10.2243,
          9.3517,
          8.5612,
          7.5132,
          6.285,
          5.4441,
          5.3881,
          5.1943,
          4.9645,
          4.9614,
          5.0357,
          5.0379,
          5.2313,
          5.4695,
          5.7111,
          5.747,
          5.9152
        ],
        "sigma_cots": 0.3686,
        "slow_growth": 0.1003,
        "attack_slow": 0.2022,
        "sigma_fast": 0.4123,
        "cots_recruit_base": 0.5431,
        "allee_strength": 6.2288,
        "temp_width": 1.9982,
        "cots_pred": [
          0.2615,
          0.336,
          0.4044,
          0.3539,
          0.4507,
          0.5632,
          0.6507,
          0.7027,
          0.7837,
          0.9177,
          0.91,
          1.2631,
          1.5569,
          1.1976,
          0.6864,
          0.7685,
          0.7034,
          0.5221,
          0.4333,
          0.3838,
          0.2837,
          0.2759,
          0.3031,
          0.3666,
          0.3126,
          0.3295
        ],
        "slow_K": 54.5982,
        "density_mort": 0.2021,
        "fast_K": 49.9246,
        "handling_fast": 0.1676,
        "temp_growth_width": 2.9971,
        "cots_mort_starv": 1.7004,
        "fast_growth": 0.6036,
        "allee_threshold": 0.0498,
        "handling_slow": 0.0785,
        "temp_opt": 28.1116,
        "fast_pred": [
          10.0694,
          12.337,
          14.244,
          14.7577,
          17.3982,
          19.5742,
          21.1436,
          22.033,
          22.8901,
          21.9581,
          21.4733,
          20.8085,
          19.0152,
          14.682,
          9.4666,
          9.5582,
          8.3438,
          6.3286,
          5.7423,
          5.6533,
          5.1385,
          5.8457,
          7.0798,
          8.7711,
          9.3375,
          11.2163
        ]
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.336,
            0.4044,
            0.3539,
            0.4507,
            0.5632,
            0.6507,
            0.7027,
            0.7837,
            0.9177,
            0.91,
            1.2631,
            1.5569,
            1.1976,
            0.6864,
            0.7685,
            0.7034,
            0.5221,
            0.4333,
            0.3838,
            0.2837,
            0.2759,
            0.3031,
            0.3666,
            0.3126,
            0.3295
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            12.337,
            14.244,
            14.7577,
            17.3982,
            19.5742,
            21.1436,
            22.033,
            22.8901,
            21.9581,
            21.4733,
            20.8085,
            19.0152,
            14.682,
            9.4666,
            9.5582,
            8.3438,
            6.3286,
            5.7423,
            5.6533,
            5.1385,
            5.8457,
            7.0798,
            8.7711,
            9.3375,
            11.2163
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            13.0956,
            13.1662,
            12.8627,
            12.9416,
            12.7698,
            12.3511,
            11.7456,
            11.1041,
            10.2243,
            9.3517,
            8.5612,
            7.5132,
            6.285,
            5.4441,
            5.3881,
            5.1943,
            4.9645,
            4.9614,
            5.0357,
            5.0379,
            5.2313,
            5.4695,
            5.7111,
            5.747,
            5.9152
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp -o POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.so POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n log_cots_recruit_base           log_temp_opt         log_temp_width \n                 -1.60                   3.35                   0.69 \n   log_allee_threshold     log_allee_strength     log_cots_mort_base \n                 -1.20                   0.69                  -0.69 \n   log_cots_mort_starv       log_density_mort immigration_efficiency \n                  0.00                  -1.60                   0.30 \n       log_fast_growth        log_slow_growth             log_fast_K \n                 -0.36                  -1.20                   3.50 \nStarting model phases\nNumber of phases: 4 \nPhase 1 \nInitial parameter values for phase 1 :\nlog_cots_recruit_base   log_allee_threshold    log_cots_mort_base \n                -1.60                 -1.20                 -0.69 \n      log_fast_growth       log_slow_growth       log_attack_fast \n                -0.36                 -1.20                  0.69 \n      log_attack_slow \n                 0.00 \nFinal parameter values for phase 1 :\nlog_cots_recruit_base   log_allee_threshold    log_cots_mort_base \n           -0.6109858            -3.0000000            -2.0388488 \n      log_fast_growth       log_slow_growth       log_attack_fast \n           -0.5068243            -2.3000000             2.5000000 \n      log_attack_slow \n           -1.6000000 \nConvergence message: relative convergence (4) \nNumber of iterations: 52 \nObjective function value: 58.17386 \nGradient at solution for phase 1 :\n              [,1]       [,2]         [,3]        [,4]     [,5]       [,6]\n[1,] -0.0007087593 0.03164024 0.0002899599 0.000489213 1.275014 -0.1376095\n        [,7]\n[1,] 5.13032\nPhase 2 \nInitial parameter values for phase 2 :\n          log_temp_opt     log_allee_strength    log_cots_mort_starv \n                  3.35                   0.69                   0.00 \nimmigration_efficiency             log_fast_K             log_slow_K \n                  0.30                   3.50                   2.80 \n     log_handling_fast      log_handling_slow \n                 -1.60                  -1.20 \nFinal parameter values for phase 2 :\n          log_temp_opt     log_allee_strength    log_cots_mort_starv \n             3.3372773              1.8291858              0.5308747 \nimmigration_efficiency             log_fast_K             log_slow_K \n             0.4853340              3.9102486              4.0000000 \n     log_handling_fast      log_handling_slow \n            -1.7861198             -2.5448290 \nConvergence message: relative convergence (4) \nNumber of iterations: 54 \nObjective function value: 52.66035 \nGradient at solution for phase 2 :\n              [,1]         [,2]          [,3]         [,4]          [,5]\n[1,] -0.0005403714 3.149265e-09 -1.250775e-05 2.284647e-05 -7.711676e-05\n            [,6]          [,7]         [,8]\n[1,] -0.08329771 -7.128226e-05 1.520266e-06\nPhase 3 \nInitial parameter values for phase 3 :\n         log_temp_width        log_density_mort    log_competition_coef \n                   0.69                   -1.60                   -0.36 \n    log_temp_growth_opt   log_temp_growth_width log_predation_threshold \n                   3.33                    1.10                    0.69 \nFinal parameter values for phase 3 :\n         log_temp_width        log_density_mort    log_competition_coef \n              0.6914736              -1.5989752              -0.3602081 \n    log_temp_growth_opt   log_temp_growth_width log_predation_threshold \n              3.3294822               1.0983982               0.6879384 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 52.65356 \nGradient at solution for phase 3 :\n           [,1]      [,2]      [,3]     [,4]      [,5]    [,6]\n[1,] -0.1838442 -1.051624 0.3219039 2.191761 0.7896259 1.36572\nPhase 4 \nInitial parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n         -0.69          -0.36          -0.36 \nFinal parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n    -0.9981787     -0.8860075     -0.8853104 \nConvergence message: relative convergence (4) \nNumber of iterations: 7 \nObjective function value: 40.61208 \nGradient at solution for phase 4 :\n              [,1]         [,2]          [,3]\n[1,] -2.469174e-05 8.808555e-05 -3.235169e-05\nFinal Phase\nInitial parameter values for final phase:\n  log_cots_recruit_base            log_temp_opt          log_temp_width \n             -0.6109858               3.3372773               0.6914736 \n    log_allee_threshold      log_allee_strength      log_cots_mort_base \n             -3.0000000               1.8291858              -2.0388488 \n    log_cots_mort_starv        log_density_mort  immigration_efficiency \n              0.5308747              -1.5989752               0.4853340 \n        log_fast_growth         log_slow_growth              log_fast_K \n             -0.5068243              -2.3000000               3.9102486 \n             log_slow_K    log_competition_coef     log_temp_growth_opt \n              4.0000000              -0.3602081               3.3294822 \n  log_temp_growth_width         log_attack_fast         log_attack_slow \n              1.0983982               2.5000000              -1.6000000 \n      log_handling_fast       log_handling_slow log_predation_threshold \n             -1.7861198              -2.5448290               0.6879384 \n         log_sigma_cots          log_sigma_fast          log_sigma_slow \n             -0.9981787              -0.8860075              -0.8853104 \nFinal parameter values for final phase:\n  log_cots_recruit_base            log_temp_opt          log_temp_width \n             -0.6104961               3.3361812               0.6922299 \n    log_allee_threshold      log_allee_strength      log_cots_mort_base \n             -3.0000000               1.8291858              -2.0390055 \n    log_cots_mort_starv        log_density_mort  immigration_efficiency \n              0.5308650              -1.5989626               0.4858347 \n        log_fast_growth         log_slow_growth              log_fast_K \n             -0.5048627              -2.3000000               3.9105134 \n             log_slow_K    log_competition_coef     log_temp_growth_opt \n              4.0000000              -0.3606670               3.3259837 \n  log_temp_growth_width         log_attack_fast         log_attack_slow \n              1.0976445               2.4999072              -1.5983895 \n      log_handling_fast       log_handling_slow log_predation_threshold \n             -1.7860960              -2.5448005               0.6866749 \n         log_sigma_cots          log_sigma_fast          log_sigma_slow \n             -0.9981639              -0.8860337              -0.8853078 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 40.5561 \nGradient at solution for final phase:\n          [,1]      [,2]      [,3]         [,4]         [,5]      [,6]\n[1,] -1.126385 -4.742957 -1.767345 0.0008507959 2.068234e-05 0.3080424\n           [,7]       [,8]      [,9]     [,10]    [,11]    [,12]     [,13]\n[1,] -0.1233134 -0.1986786 -1.324291 -3.132819 3.208689 1.904438 -1.004946\n        [,14]    [,15]    [,16]     [,17]     [,18]   [,19]      [,20]    [,21]\n[1,] 0.804205 3.753148 2.790591 0.1727592 -3.485596 2.25946 -0.2459738 3.437529\n          [,22]     [,23]        [,24]\n[1,] -0.1516423 0.2633221 -0.002353485\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 27\n $ sigma_slow            : num 0.413\n $ immigration_efficiency: num 0.486\n $ cots_mort_base        : num 0.13\n $ competition_coef      : num 0.697\n $ temp_growth_opt       : num 27.8\n $ attack_fast           : num 12.2\n $ predation_threshold   : num 1.99\n $ slow_pred             : num [1:26] 12.8 13.1 13.2 12.9 12.9 ...\n $ sigma_cots            : num 0.369\n $ slow_growth           : num 0.1\n $ attack_slow           : num 0.202\n $ sigma_fast            : num 0.412\n $ cots_recruit_base     : num 0.543\n $ allee_strength        : num 6.23\n $ temp_width            : num 2\n $ cots_pred             : num [1:26] 0.262 0.336 0.404 0.354 0.451 ...\n $ slow_K                : num 54.6\n $ density_mort          : num 0.202\n $ fast_K                : num 49.9\n $ handling_fast         : num 0.168\n $ temp_growth_width     : num 3\n $ cots_mort_starv       : num 1.7\n $ fast_growth           : num 0.604\n $ allee_threshold       : num 0.0498\n $ handling_slow         : num 0.0785\n $ temp_opt              : num 28.1\n $ fast_pred             : num [1:26] 10.1 12.3 14.2 14.8 17.4 ...\nNULL\n\nDEBUG: Available variables in report:\n [1] \"sigma_slow\"             \"immigration_efficiency\" \"cots_mort_base\"        \n [4] \"competition_coef\"       \"temp_growth_opt\"        \"attack_fast\"           \n [7] \"predation_threshold\"    \"slow_pred\"              \"sigma_cots\"            \n[10] \"slow_growth\"            \"attack_slow\"            \"sigma_fast\"            \n[13] \"cots_recruit_base\"      \"allee_strength\"         \"temp_width\"            \n[16] \"cots_pred\"              \"slow_K\"                 \"density_mort\"          \n[19] \"fast_K\"                 \"handling_fast\"          \"temp_growth_width\"     \n[22] \"cots_mort_starv\"        \"fast_growth\"            \"allee_threshold\"       \n[25] \"handling_slow\"          \"temp_opt\"               \"fast_pred\"             \n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.3360479 0.4043535 0.3539439 0.4506618 0.5632418 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.2615  0.3405  0.4864  0.6047  0.7522  1.5569 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 12.33702 14.24403 14.75767 17.39823 19.57416 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  5.138   8.451  11.777  13.264  19.434  22.890 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 13.09563 13.16619 12.86267 12.94156 12.7698 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.961   5.402   6.899   8.417  12.200  13.166 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.3360479 0.4043535 0.3539439 0.4506618 0.5632418 ...\nMSE (normalized): 0.543869 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 12.33702 14.24403 14.75767 17.39823 19.57416 ...\nMSE (normalized): 0.4826054 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 13.09563 13.16619 12.86267 12.94156 12.7698 ...\nMSE (normalized): 0.4318122 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n0.5438690 0.4826054 0.4318122 \n\nDEBUG: Final objective value (mean of MSEs): 0.4860955 \n\nFinal objective function value: 0.4860955 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 0.4861,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         24     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"sigma_slow\": 0.4126,\n    \"immigration_efficiency\": 0.4858,\n    \"cots_mort_base\": 0.1302,\n    \"competition_coef\": 0.6972,\n    \"temp_growth_opt\": 27.8264,\n    \"attack_fast\": 12.1814,\n    \"predation_threshold\": 1.9871,\n    \"slow_pred\": [12.7726, 13.0956, 13.1662, 12.8627, 12.9416, 12.7698, 12.3511, 11.7456, 11.1041, 10.2243, 9.3517, 8.5612, 7.5132, 6.285, 5.4441, 5.3881, 5.1943, 4.9645, 4.9614, 5.0357, 5.0379, 5.2313, 5.4695, 5.7111, 5.747, 5.9152],\n    \"sigma_cots\": 0.3686,\n    \"slow_growth\": 0.1003,\n    \"attack_slow\": 0.2022,\n    \"sigma_fast\": 0.4123,\n    \"cots_recruit_base\": 0.5431,\n    \"allee_strength\": 6.2288,\n    \"temp_width\": 1.9982,\n    \"cots_pred\": [0.2615, 0.336, 0.4044, 0.3539, 0.4507, 0.5632, 0.6507, 0.7027, 0.7837, 0.9177, 0.91, 1.2631, 1.5569, 1.1976, 0.6864, 0.7685, 0.7034, 0.5221, 0.4333, 0.3838, 0.2837, 0.2759, 0.3031, 0.3666, 0.3126, 0.3295],\n    \"slow_K\": 54.5982,\n    \"density_mort\": 0.2021,\n    \"fast_K\": 49.9246,\n    \"handling_fast\": 0.1676,\n    \"temp_growth_width\": 2.9971,\n    \"cots_mort_starv\": 1.7004,\n    \"fast_growth\": 0.6036,\n    \"allee_threshold\": 0.0498,\n    \"handling_slow\": 0.0785,\n    \"temp_opt\": 28.1116,\n    \"fast_pred\": [10.0694, 12.337, 14.244, 14.7577, 17.3982, 19.5742, 21.1436, 22.033, 22.8901, 21.9581, 21.4733, 20.8085, 19.0152, 14.682, 9.4666, 9.5582, 8.3438, 6.3286, 5.7423, 5.6533, 5.1385, 5.8457, 7.0798, 8.7711, 9.3375, 11.2163]\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.336, 0.4044, 0.3539, 0.4507, 0.5632, 0.6507, 0.7027, 0.7837, 0.9177, 0.91, 1.2631, 1.5569, 1.1976, 0.6864, 0.7685, 0.7034, 0.5221, 0.4333, 0.3838, 0.2837, 0.2759, 0.3031, 0.3666, 0.3126, 0.3295],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 12.337, 14.244, 14.7577, 17.3982, 19.5742, 21.1436, 22.033, 22.8901, 21.9581, 21.4733, 20.8085, 19.0152, 14.682, 9.4666, 9.5582, 8.3438, 6.3286, 5.7423, 5.6533, 5.1385, 5.8457, 7.0798, 8.7711, 9.3375, 11.2163],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 13.0956, 13.1662, 12.8627, 12.9416, 12.7698, 12.3511, 11.7456, 11.1041, 10.2243, 9.3517, 8.5612, 7.5132, 6.285, 5.4441, 5.3881, 5.1943, 4.9645, 4.9614, 5.0357, 5.0379, 5.2313, 5.4695, 5.7111, 5.747, 5.9152],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "4": {
      "status": "SUCCESS",
      "objective_value": 0.4861
    },
    "5": {
      "status": "SUCCESS",
      "objective_value": 5.1055,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         24     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "sigma_slow": 1.001,
        "immigration_efficiency": 0.6351,
        "cots_mort_base": 1,
        "competition_coef": 1,
        "temp_growth_opt": 28.3204,
        "attack_fast": 21863.3391,
        "predation_threshold": 6.332,
        "slow_pred": [
          12.7726,
          14.5964,
          14.4166,
          14.3667,
          13.8633,
          12.8925,
          12.4228,
          12.1454,
          11.7304,
          11.7099,
          10.7445,
          9.6575,
          7.6142,
          6.2158,
          6.2159,
          8.4541,
          7.2112,
          6.0526,
          6.1475,
          6.3682,
          6.2849,
          6.7668,
          7.3683,
          9.0237,
          7.2038,
          6.6905
        ],
        "sigma_cots": 7.783,
        "slow_growth": 1,
        "attack_slow": 1.0374,
        "sigma_fast": 1.001,
        "cots_recruit_base": 5.0634,
        "allee_strength": 1.1296,
        "temp_width": 28.9218,
        "cots_pred": [
          0.2615,
          0.1539,
          0.0527,
          0.0043,
          1e-08,
          9.8219e-09,
          9.8266e-09,
          9.827e-09,
          9.8273e-09,
          0.9491,
          1.3557,
          3.0634,
          2.7335,
          2.6137,
          2.5726,
          2.6836,
          2.6237,
          2.5978,
          2.6193,
          2.5747,
          2.5732,
          2.6174,
          2.6202,
          2.6536,
          2.6215,
          2.6211
        ],
        "slow_K": 27.2125,
        "density_mort": 1.0279,
        "fast_K": 31.7318,
        "handling_fast": 1.0358,
        "temp_growth_width": 1.1122,
        "cots_mort_starv": 1.0584,
        "fast_growth": 1.0429,
        "allee_threshold": 1.0101,
        "handling_slow": 1.0633,
        "temp_opt": 27.7291,
        "fast_pred": [
          10.0694,
          12.7419,
          13.9391,
          13.9018,
          15.3161,
          16.561,
          17.1096,
          17.4337,
          17.9182,
          17.9422,
          17.2615,
          16.1506,
          14.5843,
          12.2959,
          9.7727,
          11.7037,
          10.1803,
          7.7511,
          5.3886,
          5.6109,
          5.6203,
          6.1189,
          7.6073,
          8.8329,
          6.332,
          7.0588
        ]
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.1539,
            0.0527,
            0.0043,
            1e-08,
            9.8219e-09,
            9.8266e-09,
            9.827e-09,
            9.8273e-09,
            0.9491,
            1.3557,
            3.0634,
            2.7335,
            2.6137,
            2.5726,
            2.6836,
            2.6237,
            2.5978,
            2.6193,
            2.5747,
            2.5732,
            2.6174,
            2.6202,
            2.6536,
            2.6215,
            2.6211
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            12.7419,
            13.9391,
            13.9018,
            15.3161,
            16.561,
            17.1096,
            17.4337,
            17.9182,
            17.9422,
            17.2615,
            16.1506,
            14.5843,
            12.2959,
            9.7727,
            11.7037,
            10.1803,
            7.7511,
            5.3886,
            5.6109,
            5.6203,
            6.1189,
            7.6073,
            8.8329,
            6.332,
            7.0588
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            14.5964,
            14.4166,
            14.3667,
            13.8633,
            12.8925,
            12.4228,
            12.1454,
            11.7304,
            11.7099,
            10.7445,
            9.6575,
            7.6142,
            6.2158,
            6.2159,
            8.4541,
            7.2112,
            6.0526,
            6.1475,
            6.3682,
            6.2849,
            6.7668,
            7.3683,
            9.0237,
            7.2038,
            6.6905
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.cpp -o POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.so POPULATIONS/POPULATION_0012/INDIVIDUAL_RXVNK4ZQ/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n log_cots_recruit_base           log_temp_opt         log_temp_width \n                -1.600                  3.329                  3.329 \n   log_allee_threshold     log_allee_strength     log_cots_mort_base \n                -1.200                  0.690                 -0.690 \n   log_cots_mort_starv       log_density_mort immigration_efficiency \n                 0.000                 -1.600                  0.300 \n       log_fast_growth        log_slow_growth             log_fast_K \n                -0.360                 -1.200                  3.500 \nStarting model phases\nNumber of phases: 4 \nPhase 1 \nInitial parameter values for phase 1 :\nlog_cots_recruit_base   log_allee_threshold    log_cots_mort_base \n                -1.60                 -1.20                 -0.69 \n      log_fast_growth       log_slow_growth       log_attack_fast \n                -0.36                 -1.20                  0.69 \n      log_attack_slow \n                 0.00 \nClamping starts up to lower bounds for:\n log_cots_recruit_base, log_allee_threshold, log_cots_mort_base, log_fast_growth, log_slow_growth, log_attack_slow \nFinal parameter values for phase 1 :\nlog_cots_recruit_base   log_allee_threshold    log_cots_mort_base \n           1.45118476            0.01013156            0.00000000 \n      log_fast_growth       log_slow_growth       log_attack_fast \n           0.00000000            0.00000000           10.00000000 \n      log_attack_slow \n           0.01000000 \nConvergence message: X-convergence (3) \nNumber of iterations: 81 \nObjective function value: 4349.775 \nGradient at solution for phase 1 :\n         [,1]     [,2]     [,3]     [,4]     [,5]         [,6]     [,7]\n[1,] 123.0542 -176.063 16.58656 391.5552 579.3109 -0.001975069 1.089407\nPhase 2 \nInitial parameter values for phase 2 :\n          log_temp_opt     log_allee_strength    log_cots_mort_starv \n                 3.329                  0.690                  0.000 \nimmigration_efficiency             log_fast_K             log_slow_K \n                 0.300                  3.500                  2.800 \n     log_handling_fast      log_handling_slow \n                -1.600                 -1.200 \nClamping starts up to lower bounds for:\n log_handling_fast, log_handling_slow \nFinal parameter values for phase 2 :\n          log_temp_opt     log_allee_strength    log_cots_mort_starv \n            3.33078693             0.65168843             0.07567337 \nimmigration_efficiency             log_fast_K             log_slow_K \n            0.29352560             3.49561459             2.93426773 \n     log_handling_fast      log_handling_slow \n            0.00100000             0.00100000 \nConvergence message: function evaluation limit reached without convergence (9) \nNumber of iterations: 68 \nObjective function value: 4231.798 \nGradient at solution for phase 2 :\n         [,1]    [,2]     [,3]     [,4]      [,5]     [,6]      [,7]      [,8]\n[1,] 309663.5 1970663 77413.49 -8496618 -83340.06 -5948.43 -11884.26 0.8520762\nPhase 3 \nInitial parameter values for phase 3 :\n         log_temp_width        log_density_mort    log_competition_coef \n                 3.3290                 -1.6000                 -0.3600 \n    log_temp_growth_opt   log_temp_growth_width log_predation_threshold \n                 3.3495                  1.1000                  0.6900 \nClamping starts up to lower bounds for:\n log_density_mort, log_competition_coef \nFinal parameter values for phase 3 :\n         log_temp_width        log_density_mort    log_competition_coef \n               3.401000                0.000000                0.000000 \n    log_temp_growth_opt   log_temp_growth_width log_predation_threshold \n               3.367000                0.100000                2.305653 \nConvergence message: relative convergence (4) \nNumber of iterations: 13 \nObjective function value: 11162.94 \nGradient at solution for phase 3 :\n          [,1]     [,2]     [,3]      [,4]     [,5]         [,6]\n[1,] -1.789228 155.4556 203.4893 -2288.841 179.9506 -0.001961011\nPhase 4 \nInitial parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n         -0.69          -0.36          -0.36 \nClamping starts up to lower bounds for:\n log_sigma_cots, log_sigma_fast, log_sigma_slow \nFinal parameter values for phase 4 :\nlog_sigma_cots log_sigma_fast log_sigma_slow \n    2.70214561     0.04779763     0.17497978 \nConvergence message: relative convergence (4) \nNumber of iterations: 10 \nObjective function value: 187.2067 \nGradient at solution for phase 4 :\n              [,1]        [,2]         [,3]\n[1,] -2.929999e-06 7.26813e-07 8.860341e-07\nFinal Phase\nInitial parameter values for final phase:\n  log_cots_recruit_base            log_temp_opt          log_temp_width \n             1.45118476              3.33078693              3.40100000 \n    log_allee_threshold      log_allee_strength      log_cots_mort_base \n             0.01013156              0.65168843              0.00000000 \n    log_cots_mort_starv        log_density_mort  immigration_efficiency \n             0.07567337              0.00000000              0.29352560 \n        log_fast_growth         log_slow_growth              log_fast_K \n             0.00000000              0.00000000              3.49561459 \n             log_slow_K    log_competition_coef     log_temp_growth_opt \n             2.93426773              0.00000000              3.36700000 \n  log_temp_growth_width         log_attack_fast         log_attack_slow \n             0.10000000             10.00000000              0.01000000 \n      log_handling_fast       log_handling_slow log_predation_threshold \n             0.00100000              0.00100000              2.30565310 \n         log_sigma_cots          log_sigma_fast          log_sigma_slow \n             2.70214561              0.04779763              0.17497978 \nFinal parameter values for final phase:\n  log_cots_recruit_base            log_temp_opt          log_temp_width \n           1.622043e+00            3.322483e+00            3.364595e+00 \n    log_allee_threshold      log_allee_strength      log_cots_mort_base \n           1.000111e-02            1.218976e-01            9.292245e-12 \n    log_cots_mort_starv        log_density_mort  immigration_efficiency \n           5.678044e-02            2.752341e-02            6.351352e-01 \n        log_fast_growth         log_slow_growth              log_fast_K \n           4.205092e-02            0.000000e+00            3.457320e+00 \n             log_slow_K    log_competition_coef     log_temp_growth_opt \n           3.303678e+00            3.987958e-12            3.343581e+00 \n  log_temp_growth_width         log_attack_fast         log_attack_slow \n           1.063112e-01            9.992567e+00            3.675833e-02 \n      log_handling_fast       log_handling_slow log_predation_threshold \n           3.518138e-02            6.141185e-02            1.845610e+00 \n         log_sigma_cots          log_sigma_fast          log_sigma_slow \n           2.051940e+00            1.000000e-03            1.000000e-03 \nConvergence message: function evaluation limit reached without convergence (9) \nNumber of iterations: 90 \nObjective function value: 144.201 \nGradient at solution for final phase:\n          [,1]     [,2]      [,3]     [,4]      [,5]     [,6]     [,7]     [,8]\n[1,] -2262.778 17.52809 -19.23351 704.4354 -549.8492 635.7008 34.79301 1572.786\n          [,9]    [,10]    [,11]   [,12]     [,13]    [,14]     [,15]    [,16]\n[1,] -258.8781 889.0719 1.715175 3340.46 -2090.933 -464.887 -7079.308 1070.144\n          [,17]    [,18]    [,19]     [,20]     [,21]      [,22]    [,23]\n[1,] -0.1061424 25.49181 1149.174 -77.90772 -327.6098 0.09416653 20.77536\n        [,24]\n[1,] 19.58508\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 27\n $ sigma_slow            : num 1\n $ immigration_efficiency: num 0.635\n $ cots_mort_base        : num 1\n $ competition_coef      : num 1\n $ temp_growth_opt       : num 28.3\n $ attack_fast           : num 21863\n $ predation_threshold   : num 6.33\n $ slow_pred             : num [1:26] 12.8 14.6 14.4 14.4 13.9 ...\n $ sigma_cots            : num 7.78\n $ slow_growth           : num 1\n $ attack_slow           : num 1.04\n $ sigma_fast            : num 1\n $ cots_recruit_base     : num 5.06\n $ allee_strength        : num 1.13\n $ temp_width            : num 28.9\n $ cots_pred             : num [1:26] 2.62e-01 1.54e-01 5.27e-02 4.31e-03 1.00e-08 ...\n $ slow_K                : num 27.2\n $ density_mort          : num 1.03\n $ fast_K                : num 31.7\n $ handling_fast         : num 1.04\n $ temp_growth_width     : num 1.11\n $ cots_mort_starv       : num 1.06\n $ fast_growth           : num 1.04\n $ allee_threshold       : num 1.01\n $ handling_slow         : num 1.06\n $ temp_opt              : num 27.7\n $ fast_pred             : num [1:26] 10.1 12.7 13.9 13.9 15.3 ...\nNULL\n\nDEBUG: Available variables in report:\n [1] \"sigma_slow\"             \"immigration_efficiency\" \"cots_mort_base\"        \n [4] \"competition_coef\"       \"temp_growth_opt\"        \"attack_fast\"           \n [7] \"predation_threshold\"    \"slow_pred\"              \"sigma_cots\"            \n[10] \"slow_growth\"            \"attack_slow\"            \"sigma_fast\"            \n[13] \"cots_recruit_base\"      \"allee_strength\"         \"temp_width\"            \n[16] \"cots_pred\"              \"slow_K\"                 \"density_mort\"          \n[19] \"fast_K\"                 \"handling_fast\"          \"temp_growth_width\"     \n[22] \"cots_mort_starv\"        \"fast_growth\"            \"allee_threshold\"       \n[25] \"handling_slow\"          \"temp_opt\"               \"fast_pred\"             \n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.1539226 0.05271749 0.0043061 1e-08 9.821924e-09 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n0.00000 0.07802 2.57398 1.63718 2.62090 3.06338 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 12.74189 13.93908 13.90185 15.31607 16.56098 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  5.389   7.643  12.000  11.739  15.942  17.942 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 14.59642 14.41663 14.3667 13.86335 12.89251 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  6.053   6.710   8.739   9.574  12.353  14.596 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.1539226 0.05271749 0.0043061 1e-08 9.821924e-09 ...\nMSE (normalized): 14.23623 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 12.74189 13.93908 13.90185 15.31607 16.56098 ...\nMSE (normalized): 0.6299666 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 14.59642 14.41663 14.3667 13.86335 12.89251 ...\nMSE (normalized): 0.4503916 \n\nDEBUG: MSE values:\n  cots_dat   fast_dat   slow_dat \n14.2362291  0.6299666  0.4503916 \n\nDEBUG: Final objective value (mean of MSEs): 5.105529 \n\nFinal objective function value: 5.105529 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 5.1055,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         24     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"sigma_slow\": 1.001,\n    \"immigration_efficiency\": 0.6351,\n    \"cots_mort_base\": 1,\n    \"competition_coef\": 1,\n    \"temp_growth_opt\": 28.3204,\n    \"attack_fast\": 21863.3391,\n    \"predation_threshold\": 6.332,\n    \"slow_pred\": [12.7726, 14.5964, 14.4166, 14.3667, 13.8633, 12.8925, 12.4228, 12.1454, 11.7304, 11.7099, 10.7445, 9.6575, 7.6142, 6.2158, 6.2159, 8.4541, 7.2112, 6.0526, 6.1475, 6.3682, 6.2849, 6.7668, 7.3683, 9.0237, 7.2038, 6.6905],\n    \"sigma_cots\": 7.783,\n    \"slow_growth\": 1,\n    \"attack_slow\": 1.0374,\n    \"sigma_fast\": 1.001,\n    \"cots_recruit_base\": 5.0634,\n    \"allee_strength\": 1.1296,\n    \"temp_width\": 28.9218,\n    \"cots_pred\": [0.2615, 0.1539, 0.0527, 0.0043, 1e-08, 9.8219e-09, 9.8266e-09, 9.827e-09, 9.8273e-09, 0.9491, 1.3557, 3.0634, 2.7335, 2.6137, 2.5726, 2.6836, 2.6237, 2.5978, 2.6193, 2.5747, 2.5732, 2.6174, 2.6202, 2.6536, 2.6215, 2.6211],\n    \"slow_K\": 27.2125,\n    \"density_mort\": 1.0279,\n    \"fast_K\": 31.7318,\n    \"handling_fast\": 1.0358,\n    \"temp_growth_width\": 1.1122,\n    \"cots_mort_starv\": 1.0584,\n    \"fast_growth\": 1.0429,\n    \"allee_threshold\": 1.0101,\n    \"handling_slow\": 1.0633,\n    \"temp_opt\": 27.7291,\n    \"fast_pred\": [10.0694, 12.7419, 13.9391, 13.9018, 15.3161, 16.561, 17.1096, 17.4337, 17.9182, 17.9422, 17.2615, 16.1506, 14.5843, 12.2959, 9.7727, 11.7037, 10.1803, 7.7511, 5.3886, 5.6109, 5.6203, 6.1189, 7.6073, 8.8329, 6.332, 7.0588]\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.1539, 0.0527, 0.0043, 1e-08, 9.8219e-09, 9.8266e-09, 9.827e-09, 9.8273e-09, 0.9491, 1.3557, 3.0634, 2.7335, 2.6137, 2.5726, 2.6836, 2.6237, 2.5978, 2.6193, 2.5747, 2.5732, 2.6174, 2.6202, 2.6536, 2.6215, 2.6211],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 12.7419, 13.9391, 13.9018, 15.3161, 16.561, 17.1096, 17.4337, 17.9182, 17.9422, 17.2615, 16.1506, 14.5843, 12.2959, 9.7727, 11.7037, 10.1803, 7.7511, 5.3886, 5.6109, 5.6203, 6.1189, 7.6073, 8.8329, 6.332, 7.0588],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 14.5964, 14.4166, 14.3667, 13.8633, 12.8925, 12.4228, 12.1454, 11.7304, 11.7099, 10.7445, 9.6575, 7.6142, 6.2158, 6.2159, 8.4541, 7.2112, 6.0526, 6.1475, 6.3682, 6.2849, 6.7668, 7.3683, 9.0237, 7.2038, 6.6905],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "6": {
      "status": "SUCCESS",
      "objective_value": 5.1055
    }
  }
}