{
  "individual": "INDIVIDUAL_Z2QV9ASR",
  "qualitative_description": "The C++ candidate implements all canonical NPZ functional roles (uptake, recycling, mixing, growth, grazing, mortality, mixing) but with different, more mechanistic/partitioned formulations than the TRUTH script. Uptake is Michaelis\u2013Menten in N multiplied by a co-limitation/light term (self-shading + hyperbolic light saturation) rather than the TRUTH's a/(b + c*P) factor. Grazing is a Holling/Hill type (general h) with an explicit assimilation efficiency; recycling is split into mortality remineralization, excretion and egestion routing. Physical exchange (D_mix) is present for N and P in forms equivalent to TRUTH, and additionally for Z in the candidate. The candidate also adds explicit temperature/Q10 modification of rates and density-dependent (quadratic) zooplankton mortality\u2014processes absent or handled differently in TRUTH.",
  "characteristic_scores": {
    "nutrient_equation_uptake": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Michaelis-Menten uptake",
      "explanation": "Candidate: fN = N_prev / (K_N + N_prev); muP = mu_max * temp_mod * co_lim; uptake = muP * P_prev; and nutrient equation uses dN = -uptake + ... (lines: 'Type fN = N_prev / (K_N + N_prev);', 'Type uptake = muP * P_prev;', 'Type dN = -uptake + remin_N + mix_in_N;'). This is Michaelis\u2013Menten-type uptake (N/(K+N)) multiplied by a co-limitation term rather than the TRUTH's exact a/(b + c*P) factor."
    },
    "nutrient_equation_recycling": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Explicit remineralization (mortality + excretion + egestion)",
      "explanation": "Candidate computes remin_N explicitly: 'Type remin_N = r_PN * mortP + r_ZN * mortZ + excrZ + egestN;' and adds it to dN ('Type dN = -uptake + remin_N + mix_in_N;'). This splits recycling into P mortality fraction, Z mortality fraction, excretion and egested fraction\u2014an alternate (more explicit) routing compared with TRUTH's aggregated recycling terms."
    },
    "nutrient_equation_mixing": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "linear mixing/entrainment D_mix*(N_in - N)",
      "explanation": "Candidate mixing appears as 'Type mix_in_N = D_mix * (N_in - N_prev);' and is included in dN ('... + mix_in_N;'), which is algebraically equivalent to TRUTH's k*(N0 - N) mixing term."
    },
    "phytoplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Michaelis-Menten nutrient \u00d7 light co-limitation (smooth-min style)",
      "explanation": "Candidate forms nutrient and light limitation: 'fN = N_prev / (K_N + N_prev);', 'L_eff = L_avail * exp(-k_shade * P_prev);', 'fL = L_eff / (K_L + L_eff + tiny);', then combines them with alpha_colim into 'co_lim' and sets 'muP = mu_max * temp_mod * co_lim;' and 'uptake = muP * P_prev' which provides P growth. This is a Michaelis\u2013Menten nutrient term combined with a co-limitation/light function (alternate to TRUTH's a/(b + c*P))."
    },
    "phytoplankton_equation_grazing_loss": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Holling/Hill grazing (Type II/III family)",
      "explanation": "Candidate grazing: 'Type Ph = pow(P_prev, h); Type Kh = pow(K_P + tiny, h); Type func_resp = Ph / (Kh + Ph); Type grazing = gZ_rate * func_resp * Z_prev;' and dP uses '- grazing'. This is a Holling/Hill functional response (alternate but in the same family as TRUTH's saturating P^2/(mu^2+P^2))."
    },
    "phytoplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "linear mortality",
      "explanation": "Candidate uses linear phytoplankton mortality 'Type mortP = mP_rate * P_prev;' and subtracts it in dP ('Type dP = uptake - grazing - mortP - dilP;'). This is a standard linear mortality term (an alternate parametrization of TRUTH's linear losses)."
    },
    "phytoplankton_equation_mixing": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "linear dilution D_mix * P",
      "explanation": "Candidate includes 'Type dilP = D_mix * P_prev;' and dP subtracts dilP ('... - dilP;'), directly matching TRUTH's P mixing/loss term structurally (k*P)."
    },
    "zooplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "assimilated grazing AE_Z * grazing (Holling family)",
      "explanation": "Candidate growth is from assimilated grazing: in dZ: 'Type dZ = AE_Z * grazing - mortZ - excrZ - dilZ;' with 'grazing' computed as a Holling/Hill rate. TRUTH uses (alpha * lambda_ * P^2/(mu^2 + P^2)) * Z; both are grazing-driven growth with assimilation but candidate uses a Hill formulation and explicit AE_Z."
    },
    "zooplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "linear + quadratic mortality",
      "explanation": "Candidate mortZ includes linear + quadratic: 'Type mortZ = mZL_rate * Z_prev + gamma_Z * Z_prev * Z_prev;' and dZ subtracts mortZ. TRUTH only had a linear Z loss (q*Z), so candidate uses an alternate (expanded) mortality closure including density dependence."
    },
    "zooplankton_equation_mixing": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "linear dilution D_mix * Z",
      "explanation": "Candidate includes an explicit zooplankton dilution: 'Type dilZ = D_mix * Z_prev;' and dZ subtracts dilZ ('... - dilZ;'). TRUTH did not include an explicit Z mixing term, so this is an alternate (and an extra) implementation of mixing for Z."
    }
  },
  "aggregate_scores": {
    "raw_total": 6.5790000000000015,
    "normalized_total": 0.7314876584389595,
    "final_score": 0.7314876584389595
  },
  "extra_components_count": 4,
  "extra_components_description": "- Temperature dependence (Q10 modifier: temp_mod = pow(Q10, (T - T_ref)/10)) that multiplies biological rates.\n- Explicit zooplankton excretion and egestion routing: excrZ = ex_Z * Z; egestN = f_egest_N * (1 - AE_Z) * grazing (separately routed to N).\n- Quadratic zooplankton mortality term gamma_Z * Z^2 (density-dependent mortality) in mortZ.\n- Explicit zooplankton dilution/mixing term dilZ = D_mix * Z (mixing loss for Z)."
}