{
  "individual": "INDIVIDUAL_Q57YE5OZ",
  "qualitative_description": "The candidate C++ NPZ implements the canonical ecological roles (nutrient uptake, recycling, mixing; phytoplankton growth, grazing and mortality; zooplankton growth and mortality). Functional forms differ in places from the TRUTH Python model but are within standard alternate families: Monod (Michaelis\u2013Menten) nutrient uptake with an added seasonal light/temperature modifier, Holling-type III grazing, linear phytoplankton mortality, and quadratic zooplankton mortality with variable assimilation efficiency. The mixing term on nutrients is implemented identically to TRUTH. One canonical term present in TRUTH (an explicit mixing/entrainment loss applied to phytoplankton) is missing in the candidate. The candidate also adds explicit seasonal forcing on growth and a nutrient-dependent (variable) assimilation efficiency, both not present in TRUTH.",
  "characteristic_scores": {
    "nutrient_equation_uptake": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Michaelis-Menten / Monod uptake",
      "explanation": "Candidate uses a Monod uptake and subtracts it from N: \"Type f_N = N_prev / (K_N + N_prev + eps);\" then \"Type growth_P = mu_max * f_N * f_env * P_prev;\" and dN contains \"-uptake_N\" via \"Type uptake_N = growth_P;\" and \"Type dN = (-uptake_N + recycle + mixing_flux) * dt;\". TRUTH uses N/(e+N)*(...) * P; both are saturating Monod-like uptake but not identical, so ALTERNATE."
    },
    "nutrient_equation_recycling": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Recycling from unassimilated grazing and mortalities",
      "explanation": "Candidate recycles unassimilated ingestion and mortality with a fraction remin_frac: \"Type unassimilated = (Type(1.0) - beta_eff) * G; Type recycle = remin_frac * (unassimilated + mort_P + mort_Z);\" and dN adds + recycle. This matches the ecological role of TRUTH's recycled terms but uses a single remin_frac closure rather than TRUTH's separate terms, so ALTERNATE."
    },
    "nutrient_equation_mixing": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "first-order mixing k*(N_deep - N) (entrainment/dilution)",
      "explanation": "Candidate implements first-order mixing identical in form to TRUTH: \"Type mixing_flux = k_mix * (N_deep - N_prev);\" and includes it in dN via \"Type dN = (... + mixing_flux) * dt;\". TRUTH uses k*(N0 - N). Structure is equivalent (TRUTH_MATCH)."
    },
    "phytoplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Monod nutrient limitation multiplied by seasonal modifier (f_env)",
      "explanation": "Candidate growth: \"Type growth_P = mu_max * f_N * f_env * P_prev;\" with \"Type f_N = N_prev / (K_N + N_prev + eps);\" and f_env computed from a sinusoidal/logit modifier. TRUTH's growth uses N/(e+N)*(a/(b + c*P))*P. Both are saturating nutrient-limited growth but forms differ and candidate includes explicit seasonal forcing, so ALTERNATE."
    },
    "phytoplankton_equation_grazing_loss": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Holling type III grazing G = g_max * P^h/(K_G^h + P^h) * Z",
      "explanation": "Candidate implements Holling-III grazing: \"Type P_h = pow(P_prev + eps, hill_exponent); Type G = g_max * (P_h / (pow(K_G + eps, hill_exponent) + P_h + eps)) * Z_prev;\" and dP subtracts G (dP includes \"- G\"). TRUTH uses lambda * P^2/(mu^2 + P^2) * Z; same mathematical family (Holling III), so TRUTH_MATCH."
    },
    "phytoplankton_equation_mortality": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "linear mortality mP * P",
      "explanation": "Candidate uses linear phytoplankton loss: \"Type mort_P = mP * P_prev;\" and dP subtracts mort_P (dP = (growth_P - G - mort_P) * dt). TRUTH uses r * P linear loss; structure equivalent (TRUTH_MATCH)."
    },
    "phytoplankton_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "No explicit mixing/entrainment loss term applied to P is present. dP is computed as \"dP = (growth_P - G - mort_P) * dt;\" with no \"- k_mix * P\" or similar. TRUTH includes -(s + k)*P (mixing loss on P); candidate lacks this term."
    },
    "zooplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "grazing assimilation beta_eff * G (variable assimilation efficiency)",
      "explanation": "Candidate grows Z from assimilated grazing: \"Type beta_eff = beta * (beta_min_frac + (Type(1.0) - beta_min_frac) * f_N);\" and \"Type dZ = (beta_eff * G - mort_Z) * dt;\". TRUTH uses a constant alpha * grazing. Candidate uses a nutrient-dependent beta_eff (extra complexity), so ALTERNATE."
    },
    "zooplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "quadratic mortality mZ_quadratic * Z^2",
      "explanation": "Candidate uses density-dependent quadratic zooplankton mortality: \"Type mort_Z = mZ_quadratic * Z_prev * Z_prev;\" and dZ subtracts mort_Z. TRUTH uses linear loss (-q * Z); quadratic is an alternate from the catalog, so ALTERNATE."
    }
  },
  "aggregate_scores": {
    "raw_total": 6.331,
    "normalized_total": 0.703679004112482,
    "final_score": 0.703679004112482
  },
  "extra_components_count": 2,
  "extra_components_description": "1) Seasonal environmental modifier f_env(t): a time-varying (inv_logit(sin(...))) modifier applied to phytoplankton growth (adds explicit seasonality/light/temperature). 2) Nutrient-dependent variable assimilation efficiency beta_eff (beta_min_frac floor): assimilation efficiency depends on nutrient limitation f_N (reduces assimilation under low N)."
}