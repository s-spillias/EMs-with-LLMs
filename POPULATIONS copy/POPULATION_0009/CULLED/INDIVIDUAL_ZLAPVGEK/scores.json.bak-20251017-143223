{
  "individual": "INDIVIDUAL_ZLAPVGEK",
  "qualitative_description": "The C++ candidate implements a standard NPZ structure (growth, grazing, losses, recycling, mixing) but uses different functional forms and extra modifiers versus the TRUTH Python model. Nutrient uptake/growth are implemented as Michaelis\u2013Menten nutrient limitation combined with a separate seasonal/environmental modifier and a smooth co-limitation operator rather than the TRUTH multiplicative N/(e+N) * (a/(b + c P)). Grazing and zooplankton growth use a Holling-type saturating functional response (generalized power h_fr) and assimilation efficiency, which can reproduce the TRUTH grazing form when h_fr=2. Recycling is handled by an explicit remineralization fraction applied to unassimilated ingestion, phytoplankton loss and zooplankton mortality. Physical mixing is present for nutrients as a relaxation to an external concentration (same form as TRUTH) but there is no explicit mixing term applied to phytoplankton in the candidate. The candidate adds seasonal environmental forcing and a quadratic (density-dependent) zooplankton mortality term that are not in the TRUTH model. Overall the candidate matches many ecological roles but differs in several mechanistic details and adds a couple of extra processes.",
  "characteristic_scores": {
    "nutrient_equation_uptake": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Michaelis\u2013Menten uptake with smooth co-limitation",
      "explanation": "Candidate uses fN = Np / (k_N + Np + eps) and combines nutrient and environmental limitation via f_lim (smooth co-limitation), then mu = mu_max * f_lim and Gp = mu * Pp. Nutrient uptake enters dN/dt as -Gp (see: \"Type fN = Np / (k_N + Np + eps);\" \"Type f_lim = ...;\" \"Type Gp = mu * Pp;\" and \"Type dNdt = -Gp + Remin + N_mix;\"). This is a Michaelis\u2013Menten style uptake with a different (smooth) co-limitation compared to TRUTH's N/(e+N) * (a/(b + c*P)) * P."
    },
    "nutrient_equation_recycling": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Remineralization of unassimilated ingestion and mortalities",
      "explanation": "Candidate computes Unass = (1 - beta_assim) * I, P_loss = m_p * Pp, Z_loss = m1 * Zp + m2 * Zp * Zp and then Remin = r_rem * (P_loss + Unass + Z_loss). Remin is added to dN/dt (\"Type Remin = r_rem * (P_loss + Unass + Z_loss);\" \"Type dNdt = -Gp + Remin + N_mix;\"). This matches the ecological role of recycling in TRUTH but uses different grouping and includes mortalities and unassimilated ingestion aggregated with a fraction r_rem."
    },
    "nutrient_equation_mixing": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Relaxation/mixing: k_mix * (N_ext - N)",
      "explanation": "Candidate uses an explicit mixing/relaxation term N_mix = k_mix * (N_ext - Np) included in dN/dt (\"Type N_mix = k_mix * (N_ext - Np);\" \"Type dNdt = -Gp + Remin + N_mix;\"). This is the same mathematical form as TRUTH's k*(N0 - N)."
    },
    "phytoplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Michaelis\u2013Menten nutrient limitation combined with environmental logistic co-limitation (smooth minimum)",
      "explanation": "Candidate growth: fN = Np/(k_N+Np), fE = 1/(1+exp(-theta_E*(E_eff - E50))), f_lim = pow(fN^-phi + fE^-phi, -1/phi), mu = mu_max * f_lim, Gp = mu * Pp (\"Type fN = ...; Type fE = ...; Type f_lim = ...; Type mu = mu_max * f_lim; Type Gp = mu * Pp;\"). TRUTH used N/(e+N)*(a/(b + c*P))*P. The candidate uses a different but literature-supported co-limitation formulation rather than the TRUTH multiplicative light term."
    },
    "phytoplankton_equation_grazing_loss": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Holling-type grazing (P^h/(k_P^h + P^h))",
      "explanation": "Candidate grazing: Ph = pow(Pp + eps, h_fr); g = g_max * Ph / (pow(k_P + eps, h_fr) + Ph); I = g * Zp; and dP/dt subtracts I (\"Type Ph = pow(Pp + eps, h_fr); Type g = g_max * Ph / (...); Type I = g * Zp; dPdt = Gp - I - P_loss;\"). TRUTH uses (lambda_ * P^2 / (mu^2 + P^2)) * Z which is a special case of this Holling form with h_fr=2 and parameter mapping g_max=lambda_, k_P=mu."
    },
    "phytoplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear mortality (m_p * P)",
      "explanation": "Candidate includes a linear, non-grazing phytoplankton loss P_loss = m_p * Pp and subtracts it in dP/dt (\"Type P_loss = m_p * Pp; dPdt = Gp - I - P_loss;\"). TRUTH has linear loss terms (-r*P and -(s+k)*P). The candidate matches the ecological role as a linear mortality but uses a single m_p parameter."
    },
    "phytoplankton_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "No explicit mixing/entrainment term acting on phytoplankton is present. dP/dt is computed as Gp - I - P_loss and there is no k_mix*(... - P) or similar in the P update (see dPdt update: \"Type dPdt = Gp - I - P_loss;\" and later P_pred update). TRUTH includes mixing/physical loss on P (-(s + k)*P)."
    },
    "zooplankton_equation_growth": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Assimilation: beta_assim * ingestion (g(P) * Z)",
      "explanation": "Candidate uses Z_growth = beta_assim * I with I = g * Zp and dZdt = Z_growth - Z_loss (\"Type Z_growth = beta_assim * I; Type dZdt = Z_growth - Z_loss;\"). TRUTH's zooplankton growth is alpha * lambda_ * P^2/(mu^2 + P^2) * Z, which is equivalent to assimilation efficiency times a Holling grazing term (map beta_assim->alpha, g_max->lambda_, h_fr=2)."
    },
    "zooplankton_equation_mortality": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Linear mortality (plus extra quadratic term)",
      "explanation": "Candidate includes a linear zooplankton mortality term m1 * Zp (\"Type Z_loss = m1 * Zp + m2 * Zp * Zp;\") which maps to TRUTH's q * Z (linear loss). Because a linear term is present the best match is TRUTH_MATCH; note the candidate also adds an extra quadratic mortality term m2 * Z^2 (see extra components)."
    }
  },
  "aggregate_scores": {
    "raw_total": 7.081,
    "normalized_total": 0.7870401244859399,
    "final_score": 0.7870401244859399
  },
  "extra_components_count": 2,
  "extra_components_description": "- Seasonal/environmental driver and logistic environmental modifier (env_amp, env_phase, env_period, fE): an explicit sinusoidal environmental forcing and logistic transform (E_base -> E_eff -> fE) applied to growth (not present in TRUTH).\n- Quadratic zooplankton mortality (m2 * Z^2): density-dependent zooplankton mortality added to the linear mortality term (TRUTH only has linear zooplankton loss)."
}