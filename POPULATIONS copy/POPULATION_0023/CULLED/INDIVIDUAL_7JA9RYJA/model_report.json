{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp -o POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:4:31: error: using template type parameter \u2018Type\u2019 after \u2018class\u2019\n    4 | Type objective_function<class Type>::operator() ()\n      |                               ^~~~\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:4:35: error: template argument 1 is invalid\n    4 | Type objective_function<class Type>::operator() ()\n      |                                   ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:4:6: error: \u2018Type operator()()\u2019 must be a member function\n    4 | Type objective_function<class Type>::operator() ()\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp -o POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:95:22: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   95 |     cots_curr = fmax(cots_curr, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<double>\nIn file included from /usr/include/c++/13/cmath:47,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Macros.h:679,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Core:19,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Dense:1,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:92,\n                 from POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:96:22: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   96 |     fast_curr = fmax(fast_curr, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:97:22: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n   97 |     slow_curr = fmax(slow_curr, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:107:25: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  107 |     allee_effect = fmax(allee_effect, Type(0.01)); // Prevent complete recruitment failure\n      |                         ^~~~~~~~~~~~\n      |                         |\n      |                         CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:151:26: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  151 |     cots_pred(t+1) = fmax(cots_pred(t+1), eps);\n      |                      ~~~~^~~~~~~~~~~~~~~~~~~~~\n      |                          |\n      |                          Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:152:26: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  152 |     fast_pred(t+1) = fmax(fast_pred(t+1), eps);\n      |                      ~~~~^~~~~~~~~~~~~~~~~~~~~\n      |                          |\n      |                          Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:153:26: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<double>\u2019} to \u2018double\u2019\n  153 |     slow_pred(t+1) = fmax(slow_pred(t+1), eps);\n      |                      ~~~~^~~~~~~~~~~~~~~~~~~~~\n      |                          |\n      |                          Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<double>, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<double>}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:182:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  182 |   nll += Type(10.0) * pow(fmax(Type(0.0), r_cots - Type(2.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:183:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  183 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(0.01) - r_cots), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:186:33: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  186 |   nll += Type(100.0) * pow(fmax(Type(0.0), allee_strength - Type(1.0)), 2);\n      |                                 ^~~~~~~~~\n      |                                 |\n      |                                 CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:187:33: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  187 |   nll += Type(100.0) * pow(fmax(Type(0.0), Type(0.0) - allee_strength), 2);\n      |                                 ^~~~~~~~~\n      |                                 |\n      |                                 CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:190:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  190 |   nll += Type(10.0) * pow(fmax(Type(0.0), competition_strength - Type(2.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:191:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  191 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(0.0) - competition_strength), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:194:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  194 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(0.1) - feeding_preference), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:197:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  197 |   nll += Type(10.0) * pow(fmax(Type(0.0), temp_opt - Type(32.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:198:32: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  198 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(20.0) - temp_opt), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:95:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   95 |     cots_curr = fmax(cots_curr, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:96:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   96 |     fast_curr = fmax(fast_curr, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:97:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n   97 |     slow_curr = fmax(slow_curr, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:107:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  107 |     allee_effect = fmax(allee_effect, Type(0.01)); // Prevent complete recruitment failure\n      |                         ^~~~~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:151:26: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  151 |     cots_pred(t+1) = fmax(cots_pred(t+1), eps);\n      |                      ~~~~^~~~~~~~~~~~~~~~~~~~~\n      |                          |\n      |                          Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:152:26: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  152 |     fast_pred(t+1) = fmax(fast_pred(t+1), eps);\n      |                      ~~~~^~~~~~~~~~~~~~~~~~~~~\n      |                          |\n      |                          Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:153:26: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<double> >\u2019} to \u2018double\u2019\n  153 |     slow_pred(t+1) = fmax(slow_pred(t+1), eps);\n      |                      ~~~~^~~~~~~~~~~~~~~~~~~~~\n      |                          |\n      |                          Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<double> >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<double> >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:182:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  182 |   nll += Type(10.0) * pow(fmax(Type(0.0), r_cots - Type(2.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:183:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  183 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(0.01) - r_cots), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:186:33: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  186 |   nll += Type(100.0) * pow(fmax(Type(0.0), allee_strength - Type(1.0)), 2);\n      |                                 ^~~~~~~~~\n      |                                 |\n      |                                 CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:187:33: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  187 |   nll += Type(100.0) * pow(fmax(Type(0.0), Type(0.0) - allee_strength), 2);\n      |                                 ^~~~~~~~~\n      |                                 |\n      |                                 CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:190:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  190 |   nll += Type(10.0) * pow(fmax(Type(0.0), competition_strength - Type(2.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:191:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  191 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(0.0) - competition_strength), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:194:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  194 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(0.1) - feeding_preference), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:197:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  197 |   nll += Type(10.0) * pow(fmax(Type(0.0), temp_opt - Type(32.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:198:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  198 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(20.0) - temp_opt), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:95:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   95 |     cots_curr = fmax(cots_curr, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:96:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   96 |     fast_curr = fmax(fast_curr, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:97:22: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n   97 |     slow_curr = fmax(slow_curr, eps);\n      |                      ^~~~~~~~~\n      |                      |\n      |                      CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:107:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  107 |     allee_effect = fmax(allee_effect, Type(0.01)); // Prevent complete recruitment failure\n      |                         ^~~~~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:151:26: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  151 |     cots_pred(t+1) = fmax(cots_pred(t+1), eps);\n      |                      ~~~~^~~~~~~~~~~~~~~~~~~~~\n      |                          |\n      |                          Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:152:26: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  152 |     fast_pred(t+1) = fmax(fast_pred(t+1), eps);\n      |                      ~~~~^~~~~~~~~~~~~~~~~~~~~\n      |                          |\n      |                          Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:153:26: error: cannot convert \u2018Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar\u2019 {aka \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019} to \u2018double\u2019\n  153 |     slow_pred(t+1) = fmax(slow_pred(t+1), eps);\n      |                      ~~~~^~~~~~~~~~~~~~~~~~~~~\n      |                          |\n      |                          Eigen::DenseCoeffsBase<Eigen::Array<CppAD::AD<CppAD::AD<CppAD::AD<double> > >, -1, 1, 0, -1, 1>, 1>::Scalar {aka CppAD::AD<CppAD::AD<CppAD::AD<double> > >}\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:182:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  182 |   nll += Type(10.0) * pow(fmax(Type(0.0), r_cots - Type(2.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:183:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  183 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(0.01) - r_cots), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:186:33: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  186 |   nll += Type(100.0) * pow(fmax(Type(0.0), allee_strength - Type(1.0)), 2);\n      |                                 ^~~~~~~~~\n      |                                 |\n      |                                 CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:187:33: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  187 |   nll += Type(100.0) * pow(fmax(Type(0.0), Type(0.0) - allee_strength), 2);\n      |                                 ^~~~~~~~~\n      |                                 |\n      |                                 CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:190:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  190 |   nll += Type(10.0) * pow(fmax(Type(0.0), competition_strength - Type(2.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:191:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  191 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(0.0) - competition_strength), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:194:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  194 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(0.1) - feeding_preference), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:197:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  197 |   nll += Type(10.0) * pow(fmax(Type(0.0), temp_opt - Type(32.0)), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp:198:32: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  198 |   nll += Type(10.0) * pow(fmax(Type(0.0), Type(20.0) - temp_opt), 2);\n      |                                ^~~~~~~~~\n      |                                |\n      |                                CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "3": {
      "status": "SUCCESS",
      "objective_value": 1.4489,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         21     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "r_cots": 1.9997,
        "m_cots": 0.1019,
        "cots_pred": [
          0.2615,
          0.2914,
          0.1843,
          0.2606,
          0.2522,
          0.2181,
          0.2478,
          0.2704,
          0.2086,
          0.3922,
          0.248,
          0.3843,
          0.752,
          1e-08,
          1.0015e-07,
          3.4579e-07,
          1.0038e-06,
          2.9057e-06,
          8.4104e-06,
          0.0001,
          0.0009,
          0.0074,
          0.0637,
          0.2945,
          0.3266,
          0.4459
        ],
        "temp_opt": 25.3863,
        "allee_strength": 0.0016,
        "coral_to_cots": 0.3774,
        "feeding_preference": 1.0011,
        "allee_threshold": 0.2301,
        "attack_fast": 0.3523,
        "temp_effect_max": 4.9204,
        "fast_pred": [
          10.0694,
          7.9086,
          7.5366,
          7.6645,
          7.8604,
          8.2325,
          8.721,
          9.2314,
          9.8252,
          10.5546,
          11.1931,
          12.27,
          13.1993,
          14.2547,
          16.7526,
          17.6035,
          18.0196,
          18.4172,
          18.8229,
          19.2359,
          19.6548,
          20.0778,
          20.5009,
          20.8979,
          21.2702,
          22.3277
        ],
        "K_cots_base": 0.4173,
        "dd_mortality": 0.5925,
        "attack_slow": 1.9878,
        "temp_width": 0.9513,
        "handling_time": 0.441,
        "r_fast": 1.5909,
        "sigma_fast": 1.0737,
        "r_slow": 0.1031,
        "competition_strength": 1.8769,
        "slow_pred": [
          12.7726,
          12.2218,
          11.8023,
          11.6251,
          11.302,
          10.9916,
          10.7297,
          10.391,
          9.9922,
          9.6826,
          9.0248,
          8.6095,
          7.9354,
          6.6796,
          6.6035,
          6.424,
          6.2182,
          6.0067,
          5.7914,
          5.573,
          5.3521,
          5.1286,
          4.8967,
          4.6011,
          4.0598,
          3.5319
        ],
        "K_coral": 30.1084,
        "sigma_cots": 1.01,
        "sigma_slow": 0.4645
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.2914,
            0.1843,
            0.2606,
            0.2522,
            0.2181,
            0.2478,
            0.2704,
            0.2086,
            0.3922,
            0.248,
            0.3843,
            0.752,
            1e-08,
            1.0015e-07,
            3.4579e-07,
            1.0038e-06,
            2.9057e-06,
            8.4104e-06,
            0.0001,
            0.0009,
            0.0074,
            0.0637,
            0.2945,
            0.3266,
            0.4459
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            7.9086,
            7.5366,
            7.6645,
            7.8604,
            8.2325,
            8.721,
            9.2314,
            9.8252,
            10.5546,
            11.1931,
            12.27,
            13.1993,
            14.2547,
            16.7526,
            17.6035,
            18.0196,
            18.4172,
            18.8229,
            19.2359,
            19.6548,
            20.0778,
            20.5009,
            20.8979,
            21.2702,
            22.3277
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            12.2218,
            11.8023,
            11.6251,
            11.302,
            10.9916,
            10.7297,
            10.391,
            9.9922,
            9.6826,
            9.0248,
            8.6095,
            7.9354,
            6.6796,
            6.6035,
            6.424,
            6.2182,
            6.0067,
            5.7914,
            5.573,
            5.3521,
            5.1286,
            4.8967,
            4.6011,
            4.0598,
            3.5319
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp -o POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.so POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n         log_r_cots     log_K_cots_base          log_m_cots log_allee_threshold \n             -0.693              -0.693              -1.204              -2.303 \n     allee_strength    log_dd_mortality            temp_opt      log_temp_width \n              0.500              -1.609              27.000               0.693 \nlog_temp_effect_max          log_r_fast          log_r_slow         log_K_coral \n              0.693              -0.357              -1.204               3.912 \nStarting model phases\nNumber of phases: 3 \nPhase 1 \nInitial parameter values for phase 1 :\n     log_r_cots      log_m_cots        temp_opt      log_r_fast      log_r_slow \n         -0.693          -1.204          27.000          -0.357          -1.204 \nlog_attack_fast log_attack_slow \n         -0.693          -1.204 \nFinal parameter values for phase 1 :\n     log_r_cots      log_m_cots        temp_opt      log_r_fast      log_r_slow \n      0.6930000      -2.3030000      25.4542018       0.4308875      -2.3030000 \nlog_attack_fast log_attack_slow \n     -1.0553236       0.6930000 \nConvergence message: relative convergence (4) \nNumber of iterations: 24 \nObjective function value: 27503.28 \nGradient at solution for phase 1 :\n          [,1]     [,2]         [,3]        [,4]     [,5]         [,6]\n[1,] -10146.47 576.0985 -0.009629543 0.000381307 8.426541 0.0002759058\n          [,7]\n[1,] -1.535927\nPhase 2 \nInitial parameter values for phase 2 :\n    log_K_cots_base log_allee_threshold      allee_strength    log_dd_mortality \n             -0.693              -2.303               0.500              -1.609 \n        log_K_coral   log_handling_time  feeding_preference \n              3.912              -1.609               2.000 \nFinal parameter values for phase 2 :\n    log_K_cots_base log_allee_threshold      allee_strength    log_dd_mortality \n         -0.8387032          -1.4696963           0.0000000          -0.4757269 \n        log_K_coral   log_handling_time  feeding_preference \n          3.4010000          -0.8190265           1.0000000 \nConvergence message: function evaluation limit reached without convergence (9) \nNumber of iterations: 136 \nObjective function value: 20855.56 \nGradient at solution for phase 2 :\n          [,1] [,2]     [,3]    [,4]     [,5]     [,6]     [,7]\n[1,] -272.2405    0 7712.498 39.2628 315.7178 7.127842 1.896507\nPhase 3 \nInitial parameter values for phase 3 :\n      log_temp_width  log_temp_effect_max competition_strength \n               0.693                0.693                0.500 \n   log_coral_to_cots       log_sigma_cots       log_sigma_fast \n              -2.303               -1.609               -0.693 \n      log_sigma_slow \n              -0.693 \nFinal parameter values for phase 3 :\n      log_temp_width  log_temp_effect_max competition_strength \n         -0.12713597           1.56981454           1.90440683 \n   log_coral_to_cots       log_sigma_cots       log_sigma_fast \n         -0.98060198           0.00000000           0.09364455 \n      log_sigma_slow \n         -0.74591446 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 908.7289 \nGradient at solution for phase 3 :\n           [,1]       [,2]       [,3] [,4]      [,5]      [,6]       [,7]\n[1,] -0.1885675 -0.0154645 -0.1401284    0 -1612.039 0.7971053 -0.5798784\nFinal Phase\nInitial parameter values for final phase:\n          log_r_cots      log_K_cots_base           log_m_cots \n          0.69300000          -0.83870321          -2.30300000 \n log_allee_threshold       allee_strength     log_dd_mortality \n         -1.46969633           0.00000000          -0.47572695 \n            temp_opt       log_temp_width  log_temp_effect_max \n         25.45420178          -0.12713597           1.56981454 \n          log_r_fast           log_r_slow          log_K_coral \n          0.43088748          -2.30300000           3.40100000 \ncompetition_strength      log_attack_fast      log_attack_slow \n          1.90440683          -1.05532360           0.69300000 \n   log_handling_time   feeding_preference    log_coral_to_cots \n         -0.81902652           1.00000000          -0.98060198 \n      log_sigma_cots       log_sigma_fast       log_sigma_slow \n          0.00000000           0.09364455          -0.74591446 \nFinal parameter values for final phase:\n          log_r_cots      log_K_cots_base           log_m_cots \n         0.692988427         -0.874006934         -2.283998013 \n log_allee_threshold       allee_strength     log_dd_mortality \n        -1.469331612          0.001638587         -0.523329527 \n            temp_opt       log_temp_width  log_temp_effect_max \n        25.386299078         -0.049885672          1.593382915 \n          log_r_fast           log_r_slow          log_K_coral \n         0.464282910         -2.272015989          3.404803146 \ncompetition_strength      log_attack_fast      log_attack_slow \n         1.876947518         -1.043361527          0.687040057 \n   log_handling_time   feeding_preference    log_coral_to_cots \n        -0.818652638          1.001124193         -0.974342843 \n      log_sigma_cots       log_sigma_fast       log_sigma_slow \n         0.000000000          0.061773030         -0.788454077 \nConvergence message: function evaluation limit reached without convergence (9) \nNumber of iterations: 142 \nObjective function value: 730.2417 \nGradient at solution for final phase:\n         [,1]      [,2]      [,3]       [,4]     [,5]      [,6]     [,7]\n[1,] 171.4227 -25.94401 -50.68716 -0.2419272 55.91038 -58.43702 35.92735\n          [,8]      [,9]     [,10]     [,11]     [,12]    [,13]    [,14]\n[1,] -31.16803 -125.3215 -20.15961 -5.530456 -206.7903 96.39914 1.046804\n         [,15]    [,16]    [,17] [,18]    [,19]   [,20]    [,21]\n[1,] -1.487258 6.573739 1.045629     0 -1269.82 3.29439 4.316639\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 24\n $ r_cots              : num 2\n $ m_cots              : num 0.102\n $ cots_pred           : num [1:26] 0.262 0.291 0.184 0.261 0.252 ...\n $ temp_opt            : num 25.4\n $ allee_strength      : num 0.00164\n $ coral_to_cots       : num 0.377\n $ feeding_preference  : num 1\n $ allee_threshold     : num 0.23\n $ attack_fast         : num 0.352\n $ temp_effect_max     : num 4.92\n $ fast_pred           : num [1:26] 10.07 7.91 7.54 7.66 7.86 ...\n $ K_cots_base         : num 0.417\n $ dd_mortality        : num 0.593\n $ attack_slow         : num 1.99\n $ temp_width          : num 0.951\n $ handling_time       : num 0.441\n $ r_fast              : num 1.59\n $ sigma_fast          : num 1.07\n $ r_slow              : num 0.103\n $ competition_strength: num 1.88\n $ slow_pred           : num [1:26] 12.8 12.2 11.8 11.6 11.3 ...\n $ K_coral             : num 30.1\n $ sigma_cots          : num 1.01\n $ sigma_slow          : num 0.465\nNULL\n\nDEBUG: Available variables in report:\n [1] \"r_cots\"               \"m_cots\"               \"cots_pred\"           \n [4] \"temp_opt\"             \"allee_strength\"       \"coral_to_cots\"       \n [7] \"feeding_preference\"   \"allee_threshold\"      \"attack_fast\"         \n[10] \"temp_effect_max\"      \"fast_pred\"            \"K_cots_base\"         \n[13] \"dd_mortality\"         \"attack_slow\"          \"temp_width\"          \n[16] \"handling_time\"        \"r_fast\"               \"sigma_fast\"          \n[19] \"r_slow\"               \"competition_strength\" \"slow_pred\"           \n[22] \"K_coral\"              \"sigma_cots\"           \"sigma_slow\"          \n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.2913518 0.1842925 0.26058 0.2522499 0.2181084 \nDEBUG: Summary statistics:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n0.0000000 0.0002999 0.2329465 0.1965524 0.2861201 0.7520142 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 7.908557 7.536607 7.664496 7.860389 8.232525 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  7.537   9.380  13.727  14.312  19.133  22.328 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 12.2218 11.80233 11.62511 11.30196 10.99165 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  3.532   5.628   7.308   7.998  10.645  12.773 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.2913518 0.1842925 0.26058 0.2522499 0.2181084 ...\nMSE (normalized): 2.010881 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 7.908557 7.536607 7.664496 7.860389 8.232525 ...\nMSE (normalized): 1.880833 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 12.2218 11.80233 11.62511 11.30196 10.99165 ...\nMSE (normalized): 0.4550691 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n2.0108805 1.8808335 0.4550691 \n\nDEBUG: Final objective value (mean of MSEs): 1.448928 \n\nFinal objective function value: 1.448928 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 1.4489,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         21     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"r_cots\": 1.9997,\n    \"m_cots\": 0.1019,\n    \"cots_pred\": [0.2615, 0.2914, 0.1843, 0.2606, 0.2522, 0.2181, 0.2478, 0.2704, 0.2086, 0.3922, 0.248, 0.3843, 0.752, 1e-08, 1.0015e-07, 3.4579e-07, 1.0038e-06, 2.9057e-06, 8.4104e-06, 0.0001, 0.0009, 0.0074, 0.0637, 0.2945, 0.3266, 0.4459],\n    \"temp_opt\": 25.3863,\n    \"allee_strength\": 0.0016,\n    \"coral_to_cots\": 0.3774,\n    \"feeding_preference\": 1.0011,\n    \"allee_threshold\": 0.2301,\n    \"attack_fast\": 0.3523,\n    \"temp_effect_max\": 4.9204,\n    \"fast_pred\": [10.0694, 7.9086, 7.5366, 7.6645, 7.8604, 8.2325, 8.721, 9.2314, 9.8252, 10.5546, 11.1931, 12.27, 13.1993, 14.2547, 16.7526, 17.6035, 18.0196, 18.4172, 18.8229, 19.2359, 19.6548, 20.0778, 20.5009, 20.8979, 21.2702, 22.3277],\n    \"K_cots_base\": 0.4173,\n    \"dd_mortality\": 0.5925,\n    \"attack_slow\": 1.9878,\n    \"temp_width\": 0.9513,\n    \"handling_time\": 0.441,\n    \"r_fast\": 1.5909,\n    \"sigma_fast\": 1.0737,\n    \"r_slow\": 0.1031,\n    \"competition_strength\": 1.8769,\n    \"slow_pred\": [12.7726, 12.2218, 11.8023, 11.6251, 11.302, 10.9916, 10.7297, 10.391, 9.9922, 9.6826, 9.0248, 8.6095, 7.9354, 6.6796, 6.6035, 6.424, 6.2182, 6.0067, 5.7914, 5.573, 5.3521, 5.1286, 4.8967, 4.6011, 4.0598, 3.5319],\n    \"K_coral\": 30.1084,\n    \"sigma_cots\": 1.01,\n    \"sigma_slow\": 0.4645\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.2914, 0.1843, 0.2606, 0.2522, 0.2181, 0.2478, 0.2704, 0.2086, 0.3922, 0.248, 0.3843, 0.752, 1e-08, 1.0015e-07, 3.4579e-07, 1.0038e-06, 2.9057e-06, 8.4104e-06, 0.0001, 0.0009, 0.0074, 0.0637, 0.2945, 0.3266, 0.4459],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 7.9086, 7.5366, 7.6645, 7.8604, 8.2325, 8.721, 9.2314, 9.8252, 10.5546, 11.1931, 12.27, 13.1993, 14.2547, 16.7526, 17.6035, 18.0196, 18.4172, 18.8229, 19.2359, 19.6548, 20.0778, 20.5009, 20.8979, 21.2702, 22.3277],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 12.2218, 11.8023, 11.6251, 11.302, 10.9916, 10.7297, 10.391, 9.9922, 9.6826, 9.0248, 8.6095, 7.9354, 6.6796, 6.6035, 6.424, 6.2182, 6.0067, 5.7914, 5.573, 5.3521, 5.1286, 4.8967, 4.6011, 4.0598, 3.5319],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "4": {
      "status": "SUCCESS",
      "objective_value": 1.4489
    },
    "5": {
      "status": "SUCCESS",
      "objective_value": 3.4012,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         21     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "r_cots": 1.9997,
        "m_cots": 0.1,
        "cots_pred": [
          0.2615,
          0.068,
          0.2589,
          0.4058,
          0.1485,
          0.4907,
          0.1464,
          0.5109,
          0.2975,
          0.6982,
          1.0318,
          1e-08,
          1.6,
          1e-08,
          4.645e-08,
          1.9101e-07,
          9.1525e-07,
          4.2513e-06,
          0,
          0.0001,
          0.0004,
          0.0018,
          0.0082,
          0.0386,
          0.1747,
          0.574
        ],
        "temp_opt": 28,
        "allee_strength": 0,
        "coral_to_cots": 0.4602,
        "feeding_preference": 0.1,
        "allee_threshold": 0.1314,
        "attack_fast": 0.1,
        "temp_effect_max": 1.9615,
        "fast_pred": [
          10.0694,
          12.8163,
          15.9215,
          19.1425,
          22.3545,
          25.4807,
          28.1528,
          30.6124,
          32.4677,
          34.1861,
          35.5188,
          36.9893,
          39.0238,
          40.0923,
          42.5593,
          44.1459,
          45.0667,
          45.5317,
          45.7028,
          45.6888,
          45.5581,
          45.3515,
          45.0929,
          44.797,
          44.4757,
          44.154
        ],
        "K_cots_base": 0.4831,
        "dd_mortality": 0.1037,
        "attack_slow": 1.9989,
        "temp_width": 4.9978,
        "handling_time": 0.1504,
        "r_fast": 0.4368,
        "sigma_fast": 1.3651,
        "r_slow": 0.3202,
        "competition_strength": 0.641,
        "slow_pred": [
          12.7726,
          13.8757,
          15.9435,
          16.8944,
          16.8268,
          17.9545,
          16.9272,
          17.6543,
          16.1506,
          15.7775,
          13.127,
          8.8227,
          9.764,
          2.8434,
          3.2212,
          3.6079,
          4.0077,
          4.4257,
          4.8666,
          5.3338,
          5.8294,
          6.3541,
          6.904,
          7.4562,
          7.8998,
          7.7402
        ],
        "K_coral": 48.7882,
        "sigma_cots": 1.01,
        "sigma_slow": 0.5943
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.068,
            0.2589,
            0.4058,
            0.1485,
            0.4907,
            0.1464,
            0.5109,
            0.2975,
            0.6982,
            1.0318,
            1e-08,
            1.6,
            1e-08,
            4.645e-08,
            1.9101e-07,
            9.1525e-07,
            4.2513e-06,
            0,
            0.0001,
            0.0004,
            0.0018,
            0.0082,
            0.0386,
            0.1747,
            0.574
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            12.8163,
            15.9215,
            19.1425,
            22.3545,
            25.4807,
            28.1528,
            30.6124,
            32.4677,
            34.1861,
            35.5188,
            36.9893,
            39.0238,
            40.0923,
            42.5593,
            44.1459,
            45.0667,
            45.5317,
            45.7028,
            45.6888,
            45.5581,
            45.3515,
            45.0929,
            44.797,
            44.4757,
            44.154
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            13.8757,
            15.9435,
            16.8944,
            16.8268,
            17.9545,
            16.9272,
            17.6543,
            16.1506,
            15.7775,
            13.127,
            8.8227,
            9.764,
            2.8434,
            3.2212,
            3.6079,
            4.0077,
            4.4257,
            4.8666,
            5.3338,
            5.8294,
            6.3541,
            6.904,
            7.4562,
            7.8998,
            7.7402
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.cpp -o POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.so POPULATIONS/POPULATION_0023/INDIVIDUAL_7JA9RYJA/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n         log_r_cots     log_K_cots_base          log_m_cots log_allee_threshold \n             -0.693              -0.693              -1.204              -2.303 \n     allee_strength    log_dd_mortality            temp_opt      log_temp_width \n              0.500              -1.609              28.500               0.693 \nlog_temp_effect_max          log_r_fast          log_r_slow         log_K_coral \n              0.693              -0.357              -1.204               3.912 \nStarting model phases\nNumber of phases: 3 \nPhase 1 \nInitial parameter values for phase 1 :\n     log_r_cots      log_m_cots        temp_opt      log_r_fast      log_r_slow \n         -0.693          -1.204          28.500          -0.357          -1.204 \nlog_attack_fast log_attack_slow \n         -0.693          -1.204 \nFinal parameter values for phase 1 :\n     log_r_cots      log_m_cots        temp_opt      log_r_fast      log_r_slow \n      0.6930000      -2.3030000      28.0000000      -0.8319407      -1.1358153 \nlog_attack_fast log_attack_slow \n     -2.3030000       0.6930000 \nConvergence message: relative convergence (4) \nNumber of iterations: 20 \nObjective function value: 28283.37 \nGradient at solution for phase 1 :\n          [,1]     [,2]     [,3]         [,4]         [,5]     [,6]     [,7]\n[1,] -15564.93 184.8237 53.15692 -0.001692466 -0.001150975 5.365137 -10.7575\nPhase 2 \nInitial parameter values for phase 2 :\n    log_K_cots_base log_allee_threshold      allee_strength    log_dd_mortality \n             -0.693              -2.303               0.500              -1.609 \n        log_K_coral   log_handling_time  feeding_preference \n              3.912              -1.609               2.000 \nFinal parameter values for phase 2 :\n    log_K_cots_base log_allee_threshold      allee_strength    log_dd_mortality \n         -0.7302954          -2.0292527           0.0000000          -2.2634306 \n        log_K_coral   log_handling_time  feeding_preference \n          3.8894604          -1.8976683           0.1000000 \nConvergence message: function evaluation limit reached without convergence (9) \nNumber of iterations: 108 \nObjective function value: 21506.5 \nGradient at solution for phase 2 :\n          [,1] [,2]    [,3]     [,4]     [,5]      [,6]      [,7]\n[1,] -359.6659    0 8027.39 2.577144 360.4329 0.1156412 0.7022413\nPhase 3 \nInitial parameter values for phase 3 :\n      log_temp_width  log_temp_effect_max competition_strength \n               0.693                0.693                0.500 \n   log_coral_to_cots       log_sigma_cots       log_sigma_fast \n              -2.303               -1.609               -0.693 \n      log_sigma_slow \n              -0.693 \nFinal parameter values for phase 3 :\n      log_temp_width  log_temp_effect_max competition_strength \n           1.6090000            0.6342126            0.6357256 \n   log_coral_to_cots       log_sigma_cots       log_sigma_fast \n          -0.7760108            0.0000000            0.3040264 \n      log_sigma_slow \n          -0.5363395 \nConvergence message: relative convergence (4) \nNumber of iterations: 55 \nObjective function value: 950.8576 \nGradient at solution for phase 3 :\n          [,1]      [,2]         [,3] [,4]     [,5]          [,6]         [,7]\n[1,] -35.14464 0.1596979 0.0007516131    0 -1673.92 -0.0002816873 0.0002386532\nFinal Phase\nInitial parameter values for final phase:\n          log_r_cots      log_K_cots_base           log_m_cots \n           0.6930000           -0.7302954           -2.3030000 \n log_allee_threshold       allee_strength     log_dd_mortality \n          -2.0292527            0.0000000           -2.2634306 \n            temp_opt       log_temp_width  log_temp_effect_max \n          28.0000000            1.6090000            0.6342126 \n          log_r_fast           log_r_slow          log_K_coral \n          -0.8319407           -1.1358153            3.8894604 \ncompetition_strength      log_attack_fast      log_attack_slow \n           0.6357256           -2.3030000            0.6930000 \n   log_handling_time   feeding_preference    log_coral_to_cots \n          -1.8976683            0.1000000           -0.7760108 \n      log_sigma_cots       log_sigma_fast       log_sigma_slow \n           0.0000000            0.3040264           -0.5363395 \nFinal parameter values for final phase:\n          log_r_cots      log_K_cots_base           log_m_cots \n           0.6930000           -0.7275730           -2.3030000 \n log_allee_threshold       allee_strength     log_dd_mortality \n          -2.0292528            0.0000000           -2.2664042 \n            temp_opt       log_temp_width  log_temp_effect_max \n          28.0000000            1.6090000            0.6737349 \n          log_r_fast           log_r_slow          log_K_coral \n          -0.8283232           -1.1387230            3.8874882 \ncompetition_strength      log_attack_fast      log_attack_slow \n           0.6409892           -2.3029994            0.6925838 \n   log_handling_time   feeding_preference    log_coral_to_cots \n          -1.8944686            0.1000046           -0.7759984 \n      log_sigma_cots       log_sigma_fast       log_sigma_slow \n           0.0000000            0.3038553           -0.5373253 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 939.6608 \nGradient at solution for final phase:\n          [,1]     [,2]      [,3] [,4]     [,5]      [,6]     [,7]     [,8]\n[1,] -332.2524 338.7874 0.4156935    0 285.0044 -1.987164 5.273613 -43.6569\n          [,9]     [,10]    [,11]     [,12]     [,13]        [,14]     [,15]\n[1,] -305.7925 -4.461556 4.380197 -327.9699 -17.93808 -0.006886404 0.2705559\n         [,16]       [,17] [,18]     [,19]     [,20]    [,21]\n[1,] -1.301608 -0.06886087     0 -1653.123 0.2572765 1.051613\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 24\n $ r_cots              : num 2\n $ m_cots              : num 0.1\n $ cots_pred           : num [1:26] 0.262 0.068 0.259 0.406 0.148 ...\n $ temp_opt            : num 28\n $ allee_strength      : num 0\n $ coral_to_cots       : num 0.46\n $ feeding_preference  : num 0.1\n $ allee_threshold     : num 0.131\n $ attack_fast         : num 0.1\n $ temp_effect_max     : num 1.96\n $ fast_pred           : num [1:26] 10.1 12.8 15.9 19.1 22.4 ...\n $ K_cots_base         : num 0.483\n $ dd_mortality        : num 0.104\n $ attack_slow         : num 2\n $ temp_width          : num 5\n $ handling_time       : num 0.15\n $ r_fast              : num 0.437\n $ sigma_fast          : num 1.37\n $ r_slow              : num 0.32\n $ competition_strength: num 0.641\n $ slow_pred           : num [1:26] 12.8 13.9 15.9 16.9 16.8 ...\n $ K_coral             : num 48.8\n $ sigma_cots          : num 1.01\n $ sigma_slow          : num 0.594\nNULL\n\nDEBUG: Available variables in report:\n [1] \"r_cots\"               \"m_cots\"               \"cots_pred\"           \n [4] \"temp_opt\"             \"allee_strength\"       \"coral_to_cots\"       \n [7] \"feeding_preference\"   \"allee_threshold\"      \"attack_fast\"         \n[10] \"temp_effect_max\"      \"fast_pred\"            \"K_cots_base\"         \n[13] \"dd_mortality\"         \"attack_slow\"          \"temp_width\"          \n[16] \"handling_time\"        \"r_fast\"               \"sigma_fast\"          \n[19] \"r_slow\"               \"competition_strength\" \"slow_pred\"           \n[22] \"K_coral\"              \"sigma_cots\"           \"sigma_slow\"          \n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.06804678 0.2588802 0.4057886 0.1484601 0.4906874 \nDEBUG: Summary statistics:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n0.0000000 0.0000356 0.1072130 0.2583043 0.3787194 1.6000000 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 12.81631 15.92151 19.14251 22.35449 25.48068 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10.07   28.77   39.56   35.42   45.00   45.70 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 13.87568 15.94354 16.89436 16.82677 17.95454 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.843   5.458   8.361  10.115  15.902  17.955 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.06804678 0.2588802 0.4057886 0.1484601 0.4906874 ...\nMSE (normalized): 2.443495 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 12.81631 15.92151 19.14251 22.35449 25.48068 ...\nMSE (normalized): 6.988009 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 13.87568 15.94354 16.89436 16.82677 17.95454 ...\nMSE (normalized): 0.7721599 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n2.4434951 6.9880095 0.7721599 \n\nDEBUG: Final objective value (mean of MSEs): 3.401221 \n\nFinal objective function value: 3.401221 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 3.4012,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         21     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"r_cots\": 1.9997,\n    \"m_cots\": 0.1,\n    \"cots_pred\": [0.2615, 0.068, 0.2589, 0.4058, 0.1485, 0.4907, 0.1464, 0.5109, 0.2975, 0.6982, 1.0318, 1e-08, 1.6, 1e-08, 4.645e-08, 1.9101e-07, 9.1525e-07, 4.2513e-06, 0, 0.0001, 0.0004, 0.0018, 0.0082, 0.0386, 0.1747, 0.574],\n    \"temp_opt\": 28,\n    \"allee_strength\": 0,\n    \"coral_to_cots\": 0.4602,\n    \"feeding_preference\": 0.1,\n    \"allee_threshold\": 0.1314,\n    \"attack_fast\": 0.1,\n    \"temp_effect_max\": 1.9615,\n    \"fast_pred\": [10.0694, 12.8163, 15.9215, 19.1425, 22.3545, 25.4807, 28.1528, 30.6124, 32.4677, 34.1861, 35.5188, 36.9893, 39.0238, 40.0923, 42.5593, 44.1459, 45.0667, 45.5317, 45.7028, 45.6888, 45.5581, 45.3515, 45.0929, 44.797, 44.4757, 44.154],\n    \"K_cots_base\": 0.4831,\n    \"dd_mortality\": 0.1037,\n    \"attack_slow\": 1.9989,\n    \"temp_width\": 4.9978,\n    \"handling_time\": 0.1504,\n    \"r_fast\": 0.4368,\n    \"sigma_fast\": 1.3651,\n    \"r_slow\": 0.3202,\n    \"competition_strength\": 0.641,\n    \"slow_pred\": [12.7726, 13.8757, 15.9435, 16.8944, 16.8268, 17.9545, 16.9272, 17.6543, 16.1506, 15.7775, 13.127, 8.8227, 9.764, 2.8434, 3.2212, 3.6079, 4.0077, 4.4257, 4.8666, 5.3338, 5.8294, 6.3541, 6.904, 7.4562, 7.8998, 7.7402],\n    \"K_coral\": 48.7882,\n    \"sigma_cots\": 1.01,\n    \"sigma_slow\": 0.5943\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.068, 0.2589, 0.4058, 0.1485, 0.4907, 0.1464, 0.5109, 0.2975, 0.6982, 1.0318, 1e-08, 1.6, 1e-08, 4.645e-08, 1.9101e-07, 9.1525e-07, 4.2513e-06, 0, 0.0001, 0.0004, 0.0018, 0.0082, 0.0386, 0.1747, 0.574],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 12.8163, 15.9215, 19.1425, 22.3545, 25.4807, 28.1528, 30.6124, 32.4677, 34.1861, 35.5188, 36.9893, 39.0238, 40.0923, 42.5593, 44.1459, 45.0667, 45.5317, 45.7028, 45.6888, 45.5581, 45.3515, 45.0929, 44.797, 44.4757, 44.154],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 13.8757, 15.9435, 16.8944, 16.8268, 17.9545, 16.9272, 17.6543, 16.1506, 15.7775, 13.127, 8.8227, 9.764, 2.8434, 3.2212, 3.6079, 4.0077, 4.4257, 4.8666, 5.3338, 5.8294, 6.3541, 6.904, 7.4562, 7.8998, 7.7402],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "6": {
      "status": "SUCCESS",
      "objective_value": 3.4012
    }
  }
}