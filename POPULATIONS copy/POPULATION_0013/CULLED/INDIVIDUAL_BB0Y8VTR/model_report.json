{
  "iterations": {
    "1": {
      "status": "ERROR",
      "message": "Model failed to compile.",
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp -o POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.o",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<double>]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:1312:6:   required from here\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:105:25: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  105 |     fast_pred(t) = fmax(Type(0.0), fast_pred(t-1) + fast_growth - predation_loss_fast);\n      |                         ^~~~~~~~~\n      |                         |\n      |                         CppAD::AD<double>\nIn file included from /usr/include/c++/13/cmath:47,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/src/Core/util/Macros.h:679,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Core:19,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include/Eigen/Dense:1,\n                 from /home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/TMB.hpp:92,\n                 from POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:1:\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:106:25: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  106 |     slow_pred(t) = fmax(Type(0.0), slow_pred(t-1) + slow_growth - predation_loss_slow);\n      |                         ^~~~~~~~~\n      |                         |\n      |                         CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:107:25: error: cannot convert \u2018CppAD::AD<double>\u2019 to \u2018double\u2019\n  107 |     cots_pred(t) = fmax(Type(0.0), cots_pred(t-1) + cots_growth - cots_mortality + cotsimm_dat(t-1));\n      |                         ^~~~~~~~~\n      |                         |\n      |                         CppAD::AD<double>\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<double> >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2116:26:   required from here\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:105:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  105 |     fast_pred(t) = fmax(Type(0.0), fast_pred(t-1) + fast_growth - predation_loss_fast);\n      |                         ^~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:106:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  106 |     slow_pred(t) = fmax(Type(0.0), slow_pred(t-1) + slow_growth - predation_loss_slow);\n      |                         ^~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:107:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<double> >\u2019 to \u2018double\u2019\n  107 |     cots_pred(t) = fmax(Type(0.0), cots_pred(t-1) + cots_growth - cots_mortality + cotsimm_dat(t-1));\n      |                         ^~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<double> >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp: In instantiation of \u2018Type objective_function<Type>::operator()() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019:\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:917:29:   required from \u2018Type objective_function<Type>::evalUserTemplate() [with Type = CppAD::AD<CppAD::AD<CppAD::AD<double> > >]\u2019\n/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include/tmb_core.hpp:2365:28:   required from here\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:105:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  105 |     fast_pred(t) = fmax(Type(0.0), fast_pred(t-1) + fast_growth - predation_loss_fast);\n      |                         ^~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:106:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  106 |     slow_pred(t) = fmax(Type(0.0), slow_pred(t-1) + slow_growth - predation_loss_slow);\n      |                         ^~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nPOPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp:107:25: error: cannot convert \u2018CppAD::AD<CppAD::AD<CppAD::AD<double> > >\u2019 to \u2018double\u2019\n  107 |     cots_pred(t) = fmax(Type(0.0), cots_pred(t-1) + cots_growth - cots_mortality + cotsimm_dat(t-1));\n      |                         ^~~~~~~~~\n      |                         |\n      |                         CppAD::AD<CppAD::AD<CppAD::AD<double> > >\n/usr/include/x86_64-linux-gnu/bits/mathcalls.h:333:1: note:   initializing argument 1 of \u2018double fmax(double, double)\u2019\n  333 | __MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));\n      | ^\nmake: *** [/usr/lib/R/etc/Makeconf:204: POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.o] Error 1\nError in TMB::compile(file.path(individual_dir, model_file), flags = flags,  : \n  Compilation failed\nError: Compilation failed\nExecution halted"
    },
    "2": {
      "status": "SUCCESS",
      "objective_value": 1.7443,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         21     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "cots_pred": [
          0.2615,
          0.2887,
          0.329,
          0.4311,
          0.2767,
          0.3082,
          0.3828,
          0.3737,
          0.3424,
          0.33,
          1.7356,
          1.5383,
          2.835,
          3.4266,
          2.6135,
          0.878,
          1.0481,
          1.464,
          2.2865,
          1.3268,
          0.8368,
          0.3904,
          0.2925,
          0.2651,
          0.2907,
          0.1995
        ],
        "fast_pred": [
          10.0694,
          13.4737,
          16.7447,
          17.4645,
          23.7353,
          25.3166,
          25.061,
          26.2879,
          26.7584,
          26.8801,
          27.3141,
          19.9275,
          21.3624,
          14.6852,
          11.3123,
          7.2782,
          7.3382,
          5.1498,
          1.9492,
          2.2495,
          3.8469,
          6.8477,
          13.9502,
          23.47,
          28.4003,
          32.8891
        ],
        "slow_pred": [
          12.7726,
          12.7309,
          12.6763,
          12.6968,
          12.4084,
          12.3262,
          12.2872,
          12.0848,
          11.8767,
          11.7028,
          11.5017,
          10.4209,
          9.5342,
          8.0255,
          6.4169,
          5.3964,
          5.2342,
          5.1291,
          5.0161,
          4.3104,
          3.9608,
          3.7535,
          3.6749,
          3.6307,
          3.6156,
          3.5539
        ]
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.2887,
            0.329,
            0.4311,
            0.2767,
            0.3082,
            0.3828,
            0.3737,
            0.3424,
            0.33,
            1.7356,
            1.5383,
            2.835,
            3.4266,
            2.6135,
            0.878,
            1.0481,
            1.464,
            2.2865,
            1.3268,
            0.8368,
            0.3904,
            0.2925,
            0.2651,
            0.2907,
            0.1995
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            13.4737,
            16.7447,
            17.4645,
            23.7353,
            25.3166,
            25.061,
            26.2879,
            26.7584,
            26.8801,
            27.3141,
            19.9275,
            21.3624,
            14.6852,
            11.3123,
            7.2782,
            7.3382,
            5.1498,
            1.9492,
            2.2495,
            3.8469,
            6.8477,
            13.9502,
            23.47,
            28.4003,
            32.8891
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            12.7309,
            12.6763,
            12.6968,
            12.4084,
            12.3262,
            12.2872,
            12.0848,
            11.8767,
            11.7028,
            11.5017,
            10.4209,
            9.5342,
            8.0255,
            6.4169,
            5.3964,
            5.2342,
            5.1291,
            5.0161,
            4.3104,
            3.9608,
            3.7535,
            3.6749,
            3.6307,
            3.6156,
            3.5539
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp -o POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.so POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n           e_cots        c_max_fast          k_h_fast        c_max_slow \n             0.01             10.00             10.00              5.00 \n         k_h_slow            m_cots sst_m_cots_effect   T_ref_cots_mort \n            15.00              0.50              0.10             28.00 \n           r_fast            K_fast           comp_fs        T_opt_fast \n             0.80             60.00              1.00             27.50 \nStarting model phases\nNumber of phases: 5 \nPhase 1 \nInitial parameter values for phase 1 :\nm_cots r_fast r_slow \n   0.5    0.8    0.2 \nFinal parameter values for phase 1 :\n   m_cots    r_fast    r_slow \n0.2484350 2.3701976 0.4358892 \nConvergence message: relative convergence (4) \nNumber of iterations: 124 \nObjective function value: 381.5779 \nGradient at solution for phase 1 :\n            [,1]          [,2]        [,3]\n[1,] 0.005696197 -0.0005155735 0.006914712\nPhase 2 \nInitial parameter values for phase 2 :\n    e_cots c_max_fast c_max_slow \n      0.01      10.00       5.00 \nFinal parameter values for phase 2 :\n    e_cots c_max_fast c_max_slow \n0.02536526 7.41329667 3.63823134 \nConvergence message: relative convergence (4) \nNumber of iterations: 15 \nObjective function value: 340.6842 \nGradient at solution for phase 2 :\n            [,1]          [,2]        [,3]\n[1,] -0.02085599 -0.0002535984 0.000136036\nPhase 3 \nInitial parameter values for phase 3 :\n  k_h_fast   k_h_slow     K_fast T_opt_fast     K_slow T_opt_slow \n      10.0       15.0       60.0       27.5       70.0       28.0 \nFinal parameter values for phase 3 :\n  k_h_fast   k_h_slow     K_fast T_opt_fast     K_slow T_opt_slow \n  11.72647   50.00000   35.07309   25.69401   33.03568   34.42751 \nConvergence message: relative convergence (4) \nNumber of iterations: 66 \nObjective function value: 247.66 \nGradient at solution for phase 3 :\n              [,1]        [,2]          [,3]          [,4]         [,5]\n[1,] -3.748642e-05 -0.00976719 -1.675322e-05 -5.504741e-05 4.490742e-06\n             [,6]\n[1,] 7.963815e-06\nPhase 4 \nInitial parameter values for phase 4 :\nsst_m_cots_effect   T_ref_cots_mort           comp_fs        T_std_fast \n              0.1              28.0               1.0               3.0 \n          comp_sf        T_std_slow \n              1.0               4.0 \nFinal parameter values for phase 4 :\nsst_m_cots_effect   T_ref_cots_mort           comp_fs        T_std_fast \n       -0.5000000        26.4413135         0.9621288         2.0648425 \n          comp_sf        T_std_slow \n        0.3210674         2.9294635 \nConvergence message: relative convergence (4) \nNumber of iterations: 62 \nObjective function value: 161.1717 \nGradient at solution for phase 4 :\n         [,1]          [,2]         [,3]          [,4]          [,5]\n[1,] 83.61973 -0.0001595822 6.955344e-05 -9.276559e-05 -1.762965e-05\n             [,6]\n[1,] 1.806748e-05\nPhase 5 \nInitial parameter values for phase 5 :\nlog_sd_cots log_sd_fast log_sd_slow \n       -1.0        -1.5        -1.5 \nFinal parameter values for phase 5 :\n log_sd_cots  log_sd_fast  log_sd_slow \n-0.007675398 -0.663003051 -0.990581508 \nConvergence message: relative convergence (4) \nNumber of iterations: 7 \nObjective function value: 64.88941 \nGradient at solution for phase 5 :\n              [,1]          [,2]          [,3]\n[1,] -0.0003828617 -0.0002883275 -0.0003736564\nFinal Phase\nInitial parameter values for final phase:\n           e_cots        c_max_fast          k_h_fast        c_max_slow \n      0.025365255       7.413296668      11.726468242       3.638231340 \n         k_h_slow            m_cots sst_m_cots_effect   T_ref_cots_mort \n     50.000000000       0.248435022      -0.500000000      26.441313547 \n           r_fast            K_fast           comp_fs        T_opt_fast \n      2.370197632      35.073090604       0.962128787      25.694012308 \n       T_std_fast            r_slow            K_slow           comp_sf \n      2.064842516       0.435889159      33.035675843       0.321067363 \n       T_opt_slow        T_std_slow       log_sd_cots       log_sd_fast \n     34.427510412       2.929463466      -0.007675398      -0.663003051 \n      log_sd_slow \n     -0.990581508 \nFinal parameter values for final phase:\n           e_cots        c_max_fast          k_h_fast        c_max_slow \n       0.03672616        7.49228443       11.63181341        3.43793476 \n         k_h_slow            m_cots sst_m_cots_effect   T_ref_cots_mort \n      50.00000000        0.31238044       -0.49959506       26.41462045 \n           r_fast            K_fast           comp_fs        T_opt_fast \n       1.64373444       35.05504352        0.54923138       25.62189949 \n       T_std_fast            r_slow            K_slow           comp_sf \n       2.13036545        0.12828784       33.04095033        0.11174725 \n       T_opt_slow        T_std_slow       log_sd_cots       log_sd_fast \n      34.36387647        3.20862795       -0.14064238       -0.64219571 \n      log_sd_slow \n      -1.09733983 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 59.82043 \nGradient at solution for final phase:\n          [,1]       [,2]      [,3]     [,4]       [,5]     [,6]      [,7]\n[1,] -13.52175 -0.4710405 0.4746792 2.810597 -0.1621198 13.14466 0.1932201\n         [,8]     [,9]     [,10]     [,11]     [,12]     [,13]     [,14]\n[1,] 2.099631 5.924861 0.1952911 -1.062978 0.9173699 0.3376795 -10.78281\n           [,15]    [,16]     [,17]     [,18]      [,19]    [,20]     [,21]\n[1,] -0.03286986 1.547718 0.9668262 -2.096362 -0.1644259 2.878458 -3.523005\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 3\n $ cots_pred: num [1:26] 0.262 0.289 0.329 0.431 0.277 ...\n $ fast_pred: num [1:26] 10.1 13.5 16.7 17.5 23.7 ...\n $ slow_pred: num [1:26] 12.8 12.7 12.7 12.7 12.4 ...\nNULL\n\nDEBUG: Available variables in report:\n[1] \"cots_pred\" \"fast_pred\" \"slow_pred\"\n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.2887041 0.3289933 0.4310549 0.2767255 0.3081606 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.1995  0.2964  0.3866  0.9520  1.4297  3.4266 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 13.47372 16.74469 17.46447 23.73528 25.31655 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.949   8.021  17.105  16.914  25.253  32.889 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 12.73088 12.67631 12.69685 12.40844 12.32617 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  3.554   4.487   8.780   8.336  12.237  12.773 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.2887041 0.3289933 0.4310549 0.2767255 0.3081606 ...\nMSE (normalized): 4.238799 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 13.47372 16.74469 17.46447 23.73528 25.31655 ...\nMSE (normalized): 0.6982552 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 12.73088 12.67631 12.69685 12.40844 12.32617 ...\nMSE (normalized): 0.2958453 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n4.2387988 0.6982552 0.2958453 \n\nDEBUG: Final objective value (mean of MSEs): 1.7443 \n\nFinal objective function value: 1.7443 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 1.7443,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         21     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"cots_pred\": [0.2615, 0.2887, 0.329, 0.4311, 0.2767, 0.3082, 0.3828, 0.3737, 0.3424, 0.33, 1.7356, 1.5383, 2.835, 3.4266, 2.6135, 0.878, 1.0481, 1.464, 2.2865, 1.3268, 0.8368, 0.3904, 0.2925, 0.2651, 0.2907, 0.1995],\n    \"fast_pred\": [10.0694, 13.4737, 16.7447, 17.4645, 23.7353, 25.3166, 25.061, 26.2879, 26.7584, 26.8801, 27.3141, 19.9275, 21.3624, 14.6852, 11.3123, 7.2782, 7.3382, 5.1498, 1.9492, 2.2495, 3.8469, 6.8477, 13.9502, 23.47, 28.4003, 32.8891],\n    \"slow_pred\": [12.7726, 12.7309, 12.6763, 12.6968, 12.4084, 12.3262, 12.2872, 12.0848, 11.8767, 11.7028, 11.5017, 10.4209, 9.5342, 8.0255, 6.4169, 5.3964, 5.2342, 5.1291, 5.0161, 4.3104, 3.9608, 3.7535, 3.6749, 3.6307, 3.6156, 3.5539]\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.2887, 0.329, 0.4311, 0.2767, 0.3082, 0.3828, 0.3737, 0.3424, 0.33, 1.7356, 1.5383, 2.835, 3.4266, 2.6135, 0.878, 1.0481, 1.464, 2.2865, 1.3268, 0.8368, 0.3904, 0.2925, 0.2651, 0.2907, 0.1995],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 13.4737, 16.7447, 17.4645, 23.7353, 25.3166, 25.061, 26.2879, 26.7584, 26.8801, 27.3141, 19.9275, 21.3624, 14.6852, 11.3123, 7.2782, 7.3382, 5.1498, 1.9492, 2.2495, 3.8469, 6.8477, 13.9502, 23.47, 28.4003, 32.8891],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 12.7309, 12.6763, 12.6968, 12.4084, 12.3262, 12.2872, 12.0848, 11.8767, 11.7028, 11.5017, 10.4209, 9.5342, 8.0255, 6.4169, 5.3964, 5.2342, 5.1291, 5.0161, 4.3104, 3.9608, 3.7535, 3.6749, 3.6307, 3.6156, 3.5539],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning messages:\n1: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n2: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n3: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n4: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "3": {
      "status": "SUCCESS",
      "objective_value": 1.7443
    },
    "4": {
      "status": "SUCCESS",
      "objective_value": 1.3233,
      "model_summary": [
        "            Length Class  Mode     ",
        "par         21     -none- numeric  ",
        "objective    1     -none- numeric  ",
        "convergence  1     -none- numeric  ",
        "iterations   1     -none- numeric  ",
        "evaluations  2     -none- numeric  ",
        "message      1     -none- character"
      ],
      "model_report": {
        "cots_pred": [
          0.2615,
          0.3106,
          0.3752,
          0.5282,
          0.2896,
          0.3267,
          0.4207,
          0.3988,
          0.3462,
          0.3213,
          1.6954,
          1.404,
          2.6504,
          3.2127,
          2.3394,
          0.4876,
          0.6572,
          1.0566,
          1.9522,
          1.2654,
          0.8961,
          0.4197,
          0.3307,
          0.307,
          0.3462,
          0.2037
        ],
        "fast_pred": [
          10.0694,
          12.7961,
          15.4981,
          16.2145,
          21.5293,
          24.9132,
          26.0451,
          29.0468,
          31.0681,
          31.9277,
          32.6374,
          25.2925,
          24.5936,
          17.0815,
          11.0268,
          6.6285,
          7.0835,
          5.9293,
          3.4461,
          2.9709,
          3.5637,
          4.6448,
          7.42,
          11.2266,
          14.6175,
          20.9995
        ],
        "slow_pred": [
          12.7726,
          12.8759,
          12.9446,
          13.066,
          12.6812,
          12.7125,
          12.7925,
          12.6233,
          12.4408,
          12.3254,
          12.1337,
          10.9023,
          9.9674,
          8.3054,
          6.4799,
          5.3609,
          5.4006,
          5.4478,
          5.3703,
          4.6194,
          4.2187,
          3.9449,
          3.8733,
          3.8544,
          3.8853,
          3.8102
        ]
      },
      "plot_data": {
        "cots_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            0.2615,
            0.3106,
            0.3752,
            0.5282,
            0.2896,
            0.3267,
            0.4207,
            0.3988,
            0.3462,
            0.3213,
            1.6954,
            1.404,
            2.6504,
            3.2127,
            2.3394,
            0.4876,
            0.6572,
            1.0566,
            1.9522,
            1.2654,
            0.8961,
            0.4197,
            0.3307,
            0.307,
            0.3462,
            0.2037
          ],
          "Observed": [
            0.2615,
            0.5498,
            0.7268,
            0.5523,
            0.8281,
            0.547,
            0.758,
            0.6288,
            0.4762,
            0.6466,
            0.9107,
            2.152,
            0.6446,
            1.6723,
            0.4766,
            0.8075,
            0.3635,
            0.3728,
            0.6173,
            0.3107,
            0.256,
            0.2984,
            0.3362,
            0.2878,
            0.3221,
            0.4308
          ]
        },
        "fast_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            10.0694,
            12.7961,
            15.4981,
            16.2145,
            21.5293,
            24.9132,
            26.0451,
            29.0468,
            31.0681,
            31.9277,
            32.6374,
            25.2925,
            24.5936,
            17.0815,
            11.0268,
            6.6285,
            7.0835,
            5.9293,
            3.4461,
            2.9709,
            3.5637,
            4.6448,
            7.42,
            11.2266,
            14.6175,
            20.9995
          ],
          "Observed": [
            10.0694,
            17.7236,
            23.8276,
            19.4181,
            15.6354,
            32.4596,
            21.5567,
            34.1938,
            18.8708,
            27.3176,
            44.3301,
            13.3275,
            11.3741,
            8.3362,
            15.207,
            12.443,
            11.0666,
            10.6442,
            2.3628,
            2.76,
            3.7236,
            7.0355,
            10.2239,
            8.4754,
            9.0819,
            13.7314
          ]
        },
        "slow_pred": {
          "Year": [
            1980,
            1981,
            1982,
            1983,
            1984,
            1985,
            1986,
            1987,
            1988,
            1989,
            1990,
            1991,
            1992,
            1993,
            1994,
            1995,
            1996,
            1997,
            1998,
            1999,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005
          ],
          "Modeled": [
            12.7726,
            12.8759,
            12.9446,
            13.066,
            12.6812,
            12.7125,
            12.7925,
            12.6233,
            12.4408,
            12.3254,
            12.1337,
            10.9023,
            9.9674,
            8.3054,
            6.4799,
            5.3609,
            5.4006,
            5.4478,
            5.3703,
            4.6194,
            4.2187,
            3.9449,
            3.8733,
            3.8544,
            3.8853,
            3.8102
          ],
          "Observed": [
            12.7726,
            16.4147,
            12.7773,
            12.2798,
            15.1152,
            12.8194,
            10.4631,
            9.7251,
            13.2014,
            16.4512,
            11.1393,
            18.0832,
            11.5223,
            8.51,
            9.1622,
            5.3353,
            8.6044,
            7.2781,
            2.629,
            4.6951,
            1.5948,
            5.2172,
            2.6041,
            3.3618,
            7.3289,
            4.4014
          ]
        }
      },
      "stdout": "g++ -std=gnu++17 -I\"/usr/share/R/include\" -DNDEBUG -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/TMB/include\" -I\"/home/spi085/R/x86_64-pc-linux-gnu-library/4.4/RcppEigen/include\"   -DTMB_EIGEN_DISABLE_WARNINGS   -DTMB_LIB_INIT=R_init_model  -DCPPAD_FRAMEWORK      -fpic  -O2  -c POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.cpp -o POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.o\ng++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -Wl,-z,relro -o POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.so POPULATIONS/POPULATION_0013/INDIVIDUAL_BB0Y8VTR/model.o -L/usr/lib/R/lib -lR\n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nNA counts per required column:\n       Year    cots_dat    fast_dat    slow_dat     sst_dat cotsimm_dat \n          0           0           0           0           0           0 \n\nPARAMETER starts (first few):\n           e_cots        c_max_fast          k_h_fast        c_max_slow \n             0.01             10.00             10.00              5.00 \n         k_h_slow            m_cots sst_m_cots_effect   T_ref_cots_mort \n            15.00              0.50              0.10             28.00 \n           r_fast            K_fast           comp_fs        T_opt_fast \n             0.80             60.00              1.00             27.50 \nStarting model phases\nNumber of phases: 5 \nPhase 1 \nInitial parameter values for phase 1 :\nm_cots r_fast r_slow \n   0.5    0.8    0.2 \nFinal parameter values for phase 1 :\n   m_cots    r_fast    r_slow \n0.2484350 2.3701976 0.4358892 \nConvergence message: relative convergence (4) \nNumber of iterations: 124 \nObjective function value: 381.5779 \nGradient at solution for phase 1 :\n            [,1]          [,2]        [,3]\n[1,] 0.005696197 -0.0005155735 0.006914712\nPhase 2 \nInitial parameter values for phase 2 :\n    e_cots c_max_fast c_max_slow \n      0.01      10.00       5.00 \nFinal parameter values for phase 2 :\n    e_cots c_max_fast c_max_slow \n0.02536526 7.41329667 3.63823134 \nConvergence message: relative convergence (4) \nNumber of iterations: 15 \nObjective function value: 340.6842 \nGradient at solution for phase 2 :\n            [,1]          [,2]        [,3]\n[1,] -0.02085599 -0.0002535984 0.000136036\nPhase 3 \nInitial parameter values for phase 3 :\n  k_h_fast   k_h_slow     K_fast T_opt_fast     K_slow T_opt_slow \n      10.0       15.0       60.0       27.5       70.0       28.0 \nFinal parameter values for phase 3 :\n  k_h_fast   k_h_slow     K_fast T_opt_fast     K_slow T_opt_slow \n  11.28288   37.36407   35.64063   25.84268   33.92021   32.00000 \nConvergence message: relative convergence (4) \nNumber of iterations: 54 \nObjective function value: 248.2216 \nGradient at solution for phase 3 :\n             [,1]          [,2]         [,3]        [,4]          [,5]\n[1,] 9.485755e-06 -1.429695e-06 -1.67929e-06 2.16253e-05 -1.885821e-06\n           [,6]\n[1,] -0.4003116\nPhase 4 \nInitial parameter values for phase 4 :\nsst_m_cots_effect   T_ref_cots_mort           comp_fs        T_std_fast \n              0.1              28.0               1.0               3.0 \n          comp_sf        T_std_slow \n              1.0               4.0 \nFinal parameter values for phase 4 :\nsst_m_cots_effect   T_ref_cots_mort           comp_fs        T_std_fast \n       -0.7273721        26.3483362         0.8792623         1.8581152 \n          comp_sf        T_std_slow \n        0.7229212         2.9134098 \nConvergence message: relative convergence (4) \nNumber of iterations: 44 \nObjective function value: 151.6859 \nGradient at solution for phase 4 :\n              [,1]         [,2]          [,3]         [,4]        [,5]\n[1,] -0.0002269294 0.0001630017 -0.0002843168 0.0002517253 0.000227829\n              [,6]\n[1,] -9.337599e-05\nPhase 5 \nInitial parameter values for phase 5 :\nlog_sd_cots log_sd_fast log_sd_slow \n       -1.0        -1.5        -1.5 \nFinal parameter values for phase 5 :\nlog_sd_cots log_sd_fast log_sd_slow \n -0.1006975  -0.6528819  -0.9282813 \nConvergence message: both X-convergence and relative convergence (5) \nNumber of iterations: 10 \nObjective function value: 64.37387 \nGradient at solution for phase 5 :\n             [,1]         [,2]         [,3]\n[1,] 6.694695e-08 3.928352e-07 2.185096e-08\nFinal Phase\nInitial parameter values for final phase:\n           e_cots        c_max_fast          k_h_fast        c_max_slow \n       0.02536526        7.41329667       11.28287755        3.63823134 \n         k_h_slow            m_cots sst_m_cots_effect   T_ref_cots_mort \n      37.36406962        0.24843502       -0.72737209       26.34833625 \n           r_fast            K_fast           comp_fs        T_opt_fast \n       2.37019763       35.64063207        0.87926226       25.84267746 \n       T_std_fast            r_slow            K_slow           comp_sf \n       1.85811523        0.43588916       33.92021272        0.72292125 \n       T_opt_slow        T_std_slow       log_sd_cots       log_sd_fast \n      32.00000000        2.91340984       -0.10069747       -0.65288189 \n      log_sd_slow \n      -0.92828125 \nFinal parameter values for final phase:\n           e_cots        c_max_fast          k_h_fast        c_max_slow \n       0.00000000        7.26801334       11.12113268        3.27387539 \n         k_h_slow            m_cots sst_m_cots_effect   T_ref_cots_mort \n      37.39013403        0.19989161       -1.00000000       26.15992720 \n           r_fast            K_fast           comp_fs        T_opt_fast \n       0.93860824       35.61651079        0.06022186       25.60014635 \n       T_std_fast            r_slow            K_slow           comp_sf \n       2.29338385        0.08160440       33.92733478        0.09615033 \n       T_opt_slow        T_std_slow       log_sd_cots       log_sd_fast \n      31.83920104        3.26024729       -0.17224535       -0.86006285 \n      log_sd_slow \n      -0.99419901 \nConvergence message: iteration limit reached without convergence (10) \nNumber of iterations: 150 \nObjective function value: 53.29251 \nGradient at solution for final phase:\n       [,1]     [,2]       [,3]       [,4]       [,5]      [,6]    [,7]\n[1,] 104.44 1.843405 -0.3779222 -0.1669766 0.01701221 -14.11956 0.42227\n          [,8]     [,9]       [,10]    [,11]    [,12]     [,13]      [,14]\n[1,] -2.400111 -2.96182 -0.08169686 2.017264 1.162053 -1.078485 -0.1326118\n           [,15]    [,16]    [,17]      [,18]    [,19]    [,20]    [,21]\n[1,] -0.01272655 0.738303 0.303977 -0.5004905 2.348993 0.441156 2.140258\nAll phases completed\nSuccessfully updated parameters_metadata.json with optimized values\n[1] \"Train test split:\"\n[1] 1\n\nRunning model validation...\nNo test data available (train_test_split >= 1.0)\nNULL\n\nDEBUG: Report contents:\nList of 3\n $ cots_pred: num [1:26] 0.262 0.311 0.375 0.528 0.29 ...\n $ fast_pred: num [1:26] 10.1 12.8 15.5 16.2 21.5 ...\n $ slow_pred: num [1:26] 12.8 12.9 12.9 13.1 12.7 ...\nNULL\n\nDEBUG: Available variables in report:\n[1] \"cots_pred\" \"fast_pred\" \"slow_pred\"\n\nChecking predictions and calculating objective function...\n\nDEBUG: Processing cots_pred \nDEBUG: First few predictions: 0.2615042 0.3106442 0.3752276 0.528243 0.2896143 0.326669 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.2037  0.3277  0.4202  0.8771  1.2132  3.2127 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing fast_pred \nDEBUG: First few predictions: 10.06939 12.79615 15.49806 16.21448 21.52931 24.91318 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.971   7.168  15.058  16.087  24.833  32.637 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Processing slow_pred \nDEBUG: First few predictions: 12.77261 12.87588 12.94461 13.06603 12.68117 12.71254 \nDEBUG: Summary statistics:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  3.810   4.805   9.136   8.647  12.667  13.066 \nDEBUG: All zeros? FALSE \nDEBUG: Any infinities? FALSE \n\nDEBUG: Using the following variables for objective function:\ncots_dat -> cots_pred\nfast_dat -> fast_pred\nslow_dat -> slow_pred\n\nDEBUG: Calculating MSE for prediction variables only:\n\nDEBUG: cots_pred \nObserved: 0.2615042 0.5498196 0.7268086 0.5522907 0.828121 0.5470078 ...\nPredicted: 0.2615042 0.3106442 0.3752276 0.528243 0.2896143 0.326669 ...\nMSE (normalized): 3.271781 \n\nDEBUG: fast_pred \nObserved: 10.06939 17.72357 23.82758 19.41812 15.63542 32.45961 ...\nPredicted: 10.06939 12.79615 15.49806 16.21448 21.52931 24.91318 ...\nMSE (normalized): 0.4264393 \n\nDEBUG: slow_pred \nObserved: 12.77261 16.41474 12.77729 12.27975 15.11516 12.81941 ...\nPredicted: 12.77261 12.87588 12.94461 13.06603 12.68117 12.71254 ...\nMSE (normalized): 0.27164 \n\nDEBUG: MSE values:\n cots_dat  fast_dat  slow_dat \n3.2717807 0.4264393 0.2716400 \n\nDEBUG: Final objective value (mean of MSEs): 1.323287 \n\nFinal objective function value: 1.323287 \n\nJSON_REPORT_START\n{\n  \"status\": \"SUCCESS\",\n  \"objective_value\": 1.3233,\n  \"model_summary\": [\"            Length Class  Mode     \", \"par         21     -none- numeric  \", \"objective    1     -none- numeric  \", \"convergence  1     -none- numeric  \", \"iterations   1     -none- numeric  \", \"evaluations  2     -none- numeric  \", \"message      1     -none- character\"],\n  \"model_report\": {\n    \"cots_pred\": [0.2615, 0.3106, 0.3752, 0.5282, 0.2896, 0.3267, 0.4207, 0.3988, 0.3462, 0.3213, 1.6954, 1.404, 2.6504, 3.2127, 2.3394, 0.4876, 0.6572, 1.0566, 1.9522, 1.2654, 0.8961, 0.4197, 0.3307, 0.307, 0.3462, 0.2037],\n    \"fast_pred\": [10.0694, 12.7961, 15.4981, 16.2145, 21.5293, 24.9132, 26.0451, 29.0468, 31.0681, 31.9277, 32.6374, 25.2925, 24.5936, 17.0815, 11.0268, 6.6285, 7.0835, 5.9293, 3.4461, 2.9709, 3.5637, 4.6448, 7.42, 11.2266, 14.6175, 20.9995],\n    \"slow_pred\": [12.7726, 12.8759, 12.9446, 13.066, 12.6812, 12.7125, 12.7925, 12.6233, 12.4408, 12.3254, 12.1337, 10.9023, 9.9674, 8.3054, 6.4799, 5.3609, 5.4006, 5.4478, 5.3703, 4.6194, 4.2187, 3.9449, 3.8733, 3.8544, 3.8853, 3.8102]\n  },\n  \"plot_data\": {\n    \"cots_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [0.2615, 0.3106, 0.3752, 0.5282, 0.2896, 0.3267, 0.4207, 0.3988, 0.3462, 0.3213, 1.6954, 1.404, 2.6504, 3.2127, 2.3394, 0.4876, 0.6572, 1.0566, 1.9522, 1.2654, 0.8961, 0.4197, 0.3307, 0.307, 0.3462, 0.2037],\n      \"Observed\": [0.2615, 0.5498, 0.7268, 0.5523, 0.8281, 0.547, 0.758, 0.6288, 0.4762, 0.6466, 0.9107, 2.152, 0.6446, 1.6723, 0.4766, 0.8075, 0.3635, 0.3728, 0.6173, 0.3107, 0.256, 0.2984, 0.3362, 0.2878, 0.3221, 0.4308]\n    },\n    \"fast_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [10.0694, 12.7961, 15.4981, 16.2145, 21.5293, 24.9132, 26.0451, 29.0468, 31.0681, 31.9277, 32.6374, 25.2925, 24.5936, 17.0815, 11.0268, 6.6285, 7.0835, 5.9293, 3.4461, 2.9709, 3.5637, 4.6448, 7.42, 11.2266, 14.6175, 20.9995],\n      \"Observed\": [10.0694, 17.7236, 23.8276, 19.4181, 15.6354, 32.4596, 21.5567, 34.1938, 18.8708, 27.3176, 44.3301, 13.3275, 11.3741, 8.3362, 15.207, 12.443, 11.0666, 10.6442, 2.3628, 2.76, 3.7236, 7.0355, 10.2239, 8.4754, 9.0819, 13.7314]\n    },\n    \"slow_pred\": {\n      \"Year\": [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005],\n      \"Modeled\": [12.7726, 12.8759, 12.9446, 13.066, 12.6812, 12.7125, 12.7925, 12.6233, 12.4408, 12.3254, 12.1337, 10.9023, 9.9674, 8.3054, 6.4799, 5.3609, 5.4006, 5.4478, 5.3703, 4.6194, 4.2187, 3.9449, 3.8733, 3.8544, 3.8853, 3.8102],\n      \"Observed\": [12.7726, 16.4147, 12.7773, 12.2798, 15.1152, 12.8194, 10.4631, 9.7251, 13.2014, 16.4512, 11.1393, 18.0832, 11.5223, 8.51, 9.1622, 5.3353, 8.6044, 7.2781, 2.629, 4.6951, 1.5948, 5.2172, 2.6041, 3.3618, 7.3289, 4.4014]\n    }\n  }\n}\nJSON_REPORT_END",
      "stderr": "Loading required package: TMB\nLoading required package: jsonlite\nusing C++ compiler: \u2018g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0\u2019\nWarning messages:\n1: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n2: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n3: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n4: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n5: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n6: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n7: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\n8: In nlminb(start = par0, objective = model$fn, gradient = model$gr,  :\n  NA/NaN function evaluation\nWarning message:\n`aes_string()` was deprecated in ggplot2 3.0.0.\n\u2139 Please use tidy evaluation idioms with `aes()`.\n\u2139 See also `vignette(\"ggplot2-in-packages\")` for more information."
    },
    "5": {
      "status": "SUCCESS",
      "objective_value": 1.3233
    }
  }
}