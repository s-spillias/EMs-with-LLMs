{
  "individual": "INDIVIDUAL_6H6G8SKY",
  "qualitative_description": "The C++ candidate implements a standard NPZ structure with explicit nutrient uptake, phytoplankton growth, zooplankton grazing/assimilation, mortality and recycling. However its functional forms differ from the TRUTH model in key ways: uptake is implemented as Michaelis\u2013Menten nutrient limitation co-limited by an explicit, depth-integrated light term (new), grazing is Holling Type II (different from TRUTH's P^2/(mu^2 + P^2) form), recycling is a fixed fraction of dead biomass (rather than the TRUTH's specified grazing-dependent terms), and there is no explicit environmental mixing/dilution term for nutrients (TRUTH's k*(N0 - N) is absent). The candidate also includes quadratic zooplankton mortality and an explicit mixed-layer light attenuation calculation (I_0, MLD, k_w, k_p) that are not present in TRUTH. Overall the candidate maps to canonical ecological components but frequently as literature alternates rather than exact matches.",
  "characteristic_scores": {
    "nutrient_equation_uptake": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Michaelis-Menten uptake with light co-limitation",
      "explanation": "Candidate uses Monod nutrient limitation multiplied by a light limitation: \"Type nutrient_limitation = N_prev / (K_N + N_prev + eps);\" and \"Type uptake = r_P * nutrient_limitation * light_limitation * P_prev;\". TRUTH uses N/(e+N) times a different P-dependent factor; the candidate implements a Michaelis\u2013Menten nutrient uptake co-limited by explicit light (alternate formulation)."
    },
    "nutrient_equation_recycling": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Recycling from mortality as fixed fraction of dead biomass",
      "explanation": "Candidate computes recycling as a fraction of mortality: \"Type recycling = gamma_bounded * (P_loss + Z_loss);\" and then uses it in dN_dt: \"Type dN_dt = -epsilon_P_bounded * uptake + recycling;\". TRUTH uses specific grazing- and loss-derived terms (beta*lambda_*..., gamma*q*Z and r*P); candidate uses the alternate simple mortality-fraction recycling."
    },
    "nutrient_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "TRUTH has an explicit mixing/dilution term \"k * (N0 - N)\" in dN/dt. The candidate contains no analogous nutrient mixing or dilution term (no N0/k input into dN_dt); there is no code like \"... + k*(N0 - N)\"."
    },
    "phytoplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Monod (Michaelis-Menten) nutrient-limited growth with saturating light (I/(K_I+I))",
      "explanation": "Growth is implemented via uptake with nutrient and light co-limitation: \"Type light_limitation = I_avg / (K_I + I_avg + eps);\" and \"Type uptake = r_P * nutrient_limitation * light_limitation * P_prev;\" then \"dP_dt = epsilon_P_bounded * uptake - ...\". TRUTH uses N/(e+N) * (a/(b + c * P)) * P; candidate uses explicit light-saturation rather than TRUTH's P-dependent factor \u2014 so it matches the alternate light-limited Monod family."
    },
    "phytoplankton_equation_grazing_loss": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Holling Type II grazing",
      "explanation": "Candidate implements grazing as Holling II: \"Type grazing = g_max * (P_prev / (K_Z + P_prev + eps)) * Z_prev;\" and subtracts it in dP_dt: \"dP_dt = epsilon_P_bounded * uptake - grazing - P_loss;\". TRUTH uses a saturating P^2/(mu^2 + P^2) form; candidate's Holling II is a common alternate."
    },
    "phytoplankton_equation_mortality": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Linear mortality (m * P)",
      "explanation": "Candidate uses linear non-grazing mortality: \"Type P_loss = m_P * P_prev;\" and includes that as a loss in dP_dt: \"dP_dt = ... - P_loss;\". TRUTH includes linear losses (-r*P and -(s+k)*P); the candidate's linear mortality is mathematically the same form (linear loss)."
    },
    "phytoplankton_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "TRUTH includes physical loss via mixing (term (s + k)*P in dP_dt, and k*(N0 - N) in dN_dt). The candidate has no explicit mixing/entrainment term acting on P (no term like \"- k * P\" or an N0-driven dilution in dP_dt), so this component is absent."
    },
    "zooplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Assimilated Holling Type II grazing (growth = assimilation * grazing)",
      "explanation": "Candidate has zooplankton growth = assimilation * grazing: \"Type dZ_dt = epsilon_Z_bounded * grazing - Z_loss;\" with \"grazing = g_max * (P_prev / (K_Z + P_prev + eps)) * Z_prev;\". TRUTH uses alpha * lambda_ * P^2/(mu^2+P^2) * Z; candidate's form is the alternate Holling II with assimilation efficiency."
    },
    "zooplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear + quadratic mortality (linear + density-dependent loss)",
      "explanation": "Candidate includes both linear and quadratic zooplankton mortality: \"Type Z_loss_linear = m_Z * Z_prev;\" \"Type Z_loss_quadratic = m_Z2 * Z_prev * Z_prev;\" and \"Type Z_loss = Z_loss_linear + Z_loss_quadratic;\" used in dZ_dt: \"dZ_dt = epsilon_Z_bounded * grazing - Z_loss;\". TRUTH has only a linear loss (- q * Z); the quadratic term is an alternate (density-dependent) mortality form."
    }
  },
  "aggregate_scores": {
    "raw_total": 5.082,
    "normalized_total": 0.5648549516505502,
    "final_score": 0.5648549516505502
  },
  "extra_components_count": 2,
  "extra_components_description": "- Explicit, depth-integrated light limitation (I_0, MLD, k_w, k_p, I_avg and light_limitation): computes mixed-layer average irradiance and self-shading.\n- Quadratic zooplankton mortality (m_Z2 * Z^2): density-dependent mortality term representing higher-trophic-level predation."
}