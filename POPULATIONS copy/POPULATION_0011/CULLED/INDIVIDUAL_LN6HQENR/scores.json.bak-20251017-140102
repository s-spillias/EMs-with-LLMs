{
  "individual": "INDIVIDUAL_LN6HQENR",
  "qualitative_description": "The C++ candidate implements a standard NPZ with all core pathways (uptake \u2192 P growth, grazing \u2192 Z growth, recycling, and physical mixing). It uses multiplicative Michaelis-Menten nutrient limitation combined with an explicit seasonal light function and a Q10 temperature modifier for rates (alternates relative to TRUTH). Grazing is implemented as a flexible Holling-type (exponent h) which can reproduce the TRUTH Holling-III form when h=2, and assimilation/remineralization are explicit. Some closures (quadratic mortality, explicit excretion, yield conversion) are present that differ from the TRUTH algebra. Overall the candidate covers the canonical ecological roles but several terms are alternate formulations or additional processes not present in the TRUTH NPZ.",
  "characteristic_scores": {
    "nutrient_equation_uptake": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Michaelis-Menten uptake with multiplicative light limitation (LN * LI) and yield conversion",
      "explanation": "Uptake appears as U_N = G_P / (y_P + eps) with G_P = rP * Pprev and rP = mu_max * Theta_T * LN * LI; LN = Nprev / (K_N + Nprev + eps); LI = It / (K_I + It + eps). Code lines: \"Type U_N = G_P / (y_P + eps);\", \"Type G_P = rP * Pprev;\", \"Type rP = mu_max * Theta_T * LN * LI;\", \"Type LN = Nprev / (K_N + Nprev + eps);\""
    },
    "nutrient_equation_recycling": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Grazing and mortality routed to nutrients (remineralization): (1-beta)*G + rho_P*P_mort + rho_Z*Z_mort",
      "explanation": "Recycling is implemented as Type N_remin = (Type(1.0) - beta) * G + rho_P * P_mort + rho_Z * Z_mort; which partitions grazing (G) and mortality back to N. Code line: \"Type N_remin = (Type(1.0) - beta) * G + rho_P * P_mort + rho_Z * Z_mort;\" (Note: an explicit excretion term Z_excr is defined but not added to N_remin.)"
    },
    "nutrient_equation_mixing": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Relaxation/mixing: k_mix*(N_ext - N)",
      "explanation": "Mixing uses a relaxation form identical in structure to TRUTH's k*(N0 - N): \"Type N_mix = k_mix * (N_ext - Nprev);\" and this enters dN as dN = -U_N + N_remin + N_mix."
    },
    "phytoplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Multiplicative nutrient and light limitation: rP = mu_max * Theta_T * LN * LI; G_P = rP * P",
      "explanation": "Phytoplankton growth is implemented as G_P = rP * Pprev with rP = mu_max * Theta_T * LN * LI, where LN = N/(K_N+N) and LI = I/(K_I+I). Code lines: \"Type rP = mu_max * Theta_T * LN * LI;\", \"Type G_P = rP * Pprev;\" This is a Michaelis-Menten nutrient limitation multiplied by an explicit saturating light function (alternate to the TRUTH's a/(b+c*P) factor)."
    },
    "phytoplankton_equation_grazing_loss": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Holling-type grazing with exponent h (generalized Holling II/III): g_fun = g_max * Theta_T * P^h / (K_P^h + P^h); G = g_fun * Z",
      "explanation": "Grazing loss is G = g_fun * Zprev with \"Type g_fun = g_max * Theta_T * P_pow_h / (denom + eps); Type G = g_fun * Zprev;\" and P_pow_h = pow(Pprev + eps, h). This matches the Holling family (TRUTH uses P^2/(mu^2+P^2), a Holling-III special case)."
    },
    "phytoplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear plus quadratic mortality: P_mort = mPl * P + mPq * P^2",
      "explanation": "Non-grazing P losses are coded as \"Type P_mort = mPl * Pprev + mPq * Pprev * Pprev;\" (quadratic term is present in addition to linear mortality), which is a common alternate closure (density-dependent mortality)."
    },
    "phytoplankton_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "The candidate's dP = G_P - G - P_mort (\"Type dP = G_P - G - P_mort;\") includes no explicit physical mixing/entrainment term (e.g., -k_mix * P) analogous to TRUTH's -(s + k)*P. There is no line adding a k_mix*P loss for P."
    },
    "zooplankton_equation_growth": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Assimilated grazing to Z: Z_gain = beta * G (with G = g_fun * Z)",
      "explanation": "Z growth is implemented as Z_gain = beta * G and G includes Z (G = g_fun * Zprev), yielding the same structure as TRUTH's alpha * grazing * Z. Code lines: \"Type Z_gain = beta * G;\" and \"Type G = g_fun * Zprev;\" so dZ includes Z_gain."
    },
    "zooplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear plus quadratic mortality: Z_mort = mzl * Z + mZq * Z^2 (plus excretion ex_z * Z)",
      "explanation": "Zooplankton losses include \"Type Z_excr = ex_z * Zprev; Type Z_mort = mzl * Zprev + mZq * Zprev * Zprev;\" and dZ = Z_gain - Z_excr - Z_mort (\"Type dZ = Z_gain - Z_excr - Z_mort;\"). TRUTH uses linear mortality -q*Z only, so candidate uses an alternate (linear+quadratic) plus an explicit excretion term."
    }
  },
  "aggregate_scores": {
    "raw_total": 6.331,
    "normalized_total": 0.703679004112482,
    "final_score": 0.703679004112482
  },
  "extra_components_count": 5,
  "extra_components_description": "- Seasonal light forcing I(t) and explicit light limitation LI (I0, I_amp, K_I, phi_I): explicit time-varying irradiance forcing.\n- Temperature/Q10 modifier Theta_T on biological rates (Q10, T_ref, T_amp, phi_T): explicit temperature dependence of rates.\n- Stoichiometric yield y_P used to convert growth to nutrient uptake (U_N = G_P / y_P).\n- Explicit excretion term Z_excr = ex_z * Z (zooplankton excretion separated from mortality) \u2014 note it is not added to N_remin in the code.\n- Explicit quadratic mortality terms for P and Z (mPq * P^2, mZq * Z^2) in addition to linear mortality."
}