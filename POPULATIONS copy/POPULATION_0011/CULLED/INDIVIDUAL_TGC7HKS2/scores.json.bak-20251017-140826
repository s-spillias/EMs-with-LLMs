{
  "individual": "INDIVIDUAL_TGC7HKS2",
  "qualitative_description": "The C++ candidate implements all canonical NPZ processes (nutrient uptake tied to phytoplankton growth, recycling from mortality and unassimilated grazing, vertical mixing, phytoplankton growth with light & nutrient limitation, grazing losses, non-grazing mortality, and zooplankton growth from grazing and mortality). Where it differs from the TRUTH equations it typically uses well-known alternate formulations from the literature: Monod/Michaelis\u2013Menten style nutrient limitation combined with an explicit irradiance-based light function and self-shading, a Holling-type grazing with a generalized exponent and Beddington\u2013DeAngelis interference, and linear+quadratic mortality. A few terms match the TRUTH form exactly (mixing terms for N and P in linear form). The candidate also includes several extra processes not present in the TRUTH NPZ (temperature Q10 scaling, nutrient-dependent assimilation efficiency, BD interference, explicit I0/self-shading, explicit yield conversion, quadratic mortality for both P and Z, explicit Z mixing/export).",
  "characteristic_scores": {
    "nutrient_equation_uptake": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Monod / Michaelis-Menten uptake via P_growth / y_PN",
      "explanation": "Candidate computes nutrient-limited phytoplankton growth and converts it to uptake: \"Type fN_sat = Np / (K_N + Np + eps); ... Type P_growth = mu_T * f_I * fN_sat * fN_gate * Pp; ... Type N_uptake = P_growth / (y_PN + eps);\" This is a Monod-style nutrient limitation tied to growth (alternate to TRUTH's N/(e+N)*(a/(b+c*P))*P)."
    },
    "nutrient_equation_recycling": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Remineralization from P and Z losses + unassimilated grazing",
      "explanation": "Candidate forms remineralization as fractions of losses and unassimilated grazing: \"Type N_remin = rP_N * P_loss + rZ_N * Z_loss + (Type(1.0) - e_Z_eff) * Grazing;\" This matches the ecological role (recycling) but uses different parametrization than TRUTH's r*P + (beta*...)*Z + gamma*q*Z."
    },
    "nutrient_equation_mixing": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "linear mixing k*(N_deep - N)",
      "explanation": "Candidate uses linear mixing to deep pool exactly in form: \"Type N_mix = k_mix * (N_deep - Np);\" which is equivalent in form to TRUTH's k*(N0 - N)."
    },
    "phytoplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Monod nutrient limitation * saturating light f_I (explicit I0 with self-shading)",
      "explanation": "Candidate: \"Type I_eff = I0 * exp(-k_Ishade * Pp); Type f_I = I_eff / (K_I + I_eff + eps); Type fN_sat = Np / (K_N + Np + eps); Type P_growth = mu_T * f_I * fN_sat * fN_gate * Pp;\" This is a Monod-style growth with explicit irradiance and self-shading (alternate to TRUTH's combined N/(e+N)*(a/(b+c*P))*P)."
    },
    "phytoplankton_equation_grazing_loss": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Holling-type grazing with exponent h_exp and Beddington\u2013DeAngelis denominator",
      "explanation": "Candidate grazing: \"Type Ph = pow(P_eff, h_exp); Type Kg_h = pow(K_g + eps, h_exp); Type f_graz = Ph / (Kg_h + Ph); Type denom_BD = Type(1.0) + c_BD * Zp; Type Grazing = g_T * Zp * f_graz / denom_BD;\" This is a generalized Holling (including Type III when h_exp=2) with BD interference (alternate to TRUTH's lambda_*P^2/(mu^2 + P^2)*Z)."
    },
    "phytoplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear + quadratic mortality",
      "explanation": "Candidate defines: \"Type P_loss = mP1_T * Pp + mP2 * Pp * Pp;\" TRUTH has a linear loss term r*P (and s), so candidate extends this to include quadratic density-dependent mortality (alternate, and matches literature alternates)."
    },
    "phytoplankton_equation_mixing": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "linear mixing/export -k_mix * P",
      "explanation": "Candidate: \"Type P_mix = k_mix * (Type(0.0) - Pp);\" which is equivalent to -k_mix*P, same form as TRUTH's -k*P included in (s + k)*P."
    },
    "zooplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Growth from grazing with assimilation efficiency e_Z_eff",
      "explanation": "Candidate: \"Type e_Z_eff = e_Z * ((Type(1.0) - eta_e) + eta_e * fN_sat); ... Type dZ = e_Z_eff * Grazing - Z_loss + Z_mix;\" This is the classical grazer growth = assimilation * ingestion, but with nutrient-dependent e_Z_eff (alternate to TRUTH's alpha*lambda_*P^2/(mu^2 + P^2)*Z)."
    },
    "zooplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear + quadratic mortality",
      "explanation": "Candidate: \"Type Z_loss = mZ1_T * Zp + mZ2 * Zp * Zp;\" TRUTH uses linear loss q*Z only, so candidate uses both linear and quadratic mortality (alternate)."
    }
  },
  "aggregate_scores": {
    "raw_total": 6.581,
    "normalized_total": 0.7314660442369679,
    "final_score": 0.7314660442369679
  },
  "extra_components_count": 7,
  "extra_components_description": "- Temperature/Q10 scaling on rates (mu_T, g_T, mP1_T, mZ1_T): multiplies biological rates by pow(q10, (T_C-T_ref)/10).\n- Nutrient-dependent assimilation efficiency (e_Z_eff = e_Z * ((1-eta_e) + eta_e * fN_sat)): e_Z varies with fN_sat.\n- Beddington\u2013DeAngelis predator interference (denom_BD = 1 + c_BD * Z): reduces grazing at high Z.\n- Explicit light formulation with self-shading (I_eff = I0 * exp(-k_Ishade * P) and f_I = I_eff/(K_I + I_eff)).\n- Yield parameter linking P_growth to N_uptake (N_uptake = P_growth / y_PN) rather than direct term used in TRUTH.\n- Quadratic mortality terms for P and Z (mP2 * P^2, mZ2 * Z^2) in addition to linear mortality.\n- Explicit zooplankton mixing/export term (Z_mix = k_mix*(0 - Z))."
}