{
  "individual": "INDIVIDUAL_RFL1ORFL",
  "qualitative_description": "The C++ candidate implements all canonical NPZ roles (nutrient uptake, recycling, mixing; phytoplankton growth, grazing loss and mortality; zooplankton growth and mortality) but uses different mathematical choices for many processes. Nutrient uptake is represented as a Hill/Michaelis\u2013Menten-type limitation multiplied by an explicit irradiance-based light limitation (including photoinhibition and self-shading) rather than the TRUTH's combined N/(e+N) * a/(b + c*P) factor. Grazing is implemented as a sigmoidal Holling-like response with Beddington\u2013DeAngelis interference, and zooplankton growth is assimilation efficiency times grazing. The candidate adds several ecologically meaningful extras (temperature Q10 scaling, explicit irradiance/photoinhibition, stoichiometric yield linking P growth to N uptake, quadratic P and Z mortality, and predator interference), and omits an explicit mixing/entrainment loss term on P (TRUTH had a (s + k)*P term). Numerical safeguards and observation/penalty machinery are present but are implementation details rather than novel ecology.",
  "characteristic_scores": {
    "nutrient_equation_uptake": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Hill / Michaelis\u2013Menten uptake (generalized Monod) combined with explicit light limitation",
      "explanation": "Candidate computes nutrient limitation via fN = Nh / (Kh + Nh) where Nh = pow(Np + eps, hN) (Hill form) and then uses N_uptake = P_growth / (y_PN + eps) where P_growth = mu_max * theta_mu * fN * fI * Pp. Code lines: 'Type Nh = pow(Np + eps, hN); ... Type fN = Nh / (Kh + Nh + eps);' and 'Type N_uptake  = P_growth / (y_PN + eps);'. This is a Michaelis\u2013Menten/Hill uptake multiplied by light limitation (alternate to TRUTH's N/(e+N)*(a/(b + c*P))*P)."
    },
    "nutrient_equation_recycling": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Remineralization from P and Z losses and unassimilated grazing",
      "explanation": "Candidate sets N_remin = rP_N * P_losses + rZ_N * Z_losses + (1 - e_Z) * Z_grazing (code: 'Type N_remin   = rP_N * P_losses + rZ_N * Z_losses + (Type(1.0) - e_Z) * Z_grazing;'). This is functionally the same role as TRUTH's recycling terms but uses general fractions of losses and unassimilated grazing rather than TRUTH's specific beta/gamma terms, so it is an alternate formulation."
    },
    "nutrient_equation_mixing": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Linear mixing/entrainment: k_mix*(N_deep - N)",
      "explanation": "Candidate includes an identical linear mixing term in the N tendency: 'Type dN = k_mix * (N_deep - Np) - N_uptake + N_remin;'. This matches TRUTH's k*(N0 - N) form (same algebraic structure, different parameter names)."
    },
    "phytoplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Nutrient-limited growth multiplied by explicit irradiance-based f(I)",
      "explanation": "Candidate defines P_growth = mu_max * theta_mu * fN * fI * Pp where fN is Hill-type and fI is computed from irradiance with saturation and photoinhibition: 'Type P_growth = mu_max * theta_mu * fN * fI * Pp;' and 'Type fI = fI_base * fI_inhib;'. TRUTH uses (N/(e+N))*(a/(b+c*P))*P; the candidate's multiplicative nutrient*light structure is an alternate (explicit irradiance & photoinhibition) rather than identical."
    },
    "phytoplankton_equation_grazing_loss": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Holling-type (sigmoidal) grazing with Beddington\u2013DeAngelis interference",
      "explanation": "Candidate implements grazing as G_fun = Ph / (Kgh + Ph + eps) and Z_grazing = g_max * theta_g * (G_fun / (1 + c_BD * Zp)) * Zp (code: 'Type G_fun = Ph / (Kgh + Ph + eps);' and 'Type Z_grazing = g_max * theta_g * (G_fun / interference) * Zp;'). TRUTH uses lambda * P^2/(mu^2 + P^2) * Z (a simpler Holling-like term), so the candidate is an alternate family (BD interference + exponent)."
    },
    "phytoplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear plus quadratic mortality/loss (mP1*P + mP2*P^2)",
      "explanation": "Candidate sets P_losses = mP1 * Pp + mP2 * Pp * Pp (code: 'Type P_losses  = mP1 * Pp + mP2 * Pp * Pp;'). TRUTH uses linear terms (r*P and s*P) but no explicit quadratic P^2 mortality; thus the candidate uses an alternate (linear + density-dependent quadratic) loss."
    },
    "phytoplankton_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "TRUTH includes a (s + k)*P term representing physical loss/mixing on P. Candidate's dP is 'Type dP = P_growth - Z_grazing - P_losses;' (no explicit mixing/entrainment term on P). Therefore an explicit P mixing term analogous to TRUTH's (s + k)*P is missing."
    },
    "zooplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Assimilation efficiency times grazing (Z_growth = e_Z * Z_grazing)",
      "explanation": "Candidate computes Z_growth = e_Z * Z_grazing and then dZ = Z_growth - Z_losses (code: 'Type Z_growth  = e_Z * Z_grazing;' and 'Type dZ = Z_growth - Z_losses;'). TRUTH uses alpha * (grazing) * Z; functionally identical role but with a different grazing functional family, so marked ALTERNATE."
    },
    "zooplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear plus quadratic zooplankton mortality (mZ1*Z + mZ2*Z^2)",
      "explanation": "Candidate uses 'Type Z_losses  = mZ1 * Zp + mZ2 * Zp * Zp;' (code). TRUTH has a simple linear loss q*Z; the candidate adds quadratic density-dependence, an alternate but well-known mortality form."
    }
  },
  "aggregate_scores": {
    "raw_total": 5.831,
    "normalized_total": 0.6481049238635102,
    "final_score": 0.6481049238635102
  },
  "extra_components_count": 6,
  "extra_components_description": "1) Temperature Q10 scaling (theta_mu, theta_g): temperature dependence of mu_max and grazing. 2) Beddington\u2013DeAngelis predator interference (c_BD): reduces per-capita grazing at high Z. 3) Explicit irradiance-based light limitation with photoinhibition and background/self-shading (I0, K_I, k_phot, k_Ishade, k_Ibg): more mechanistic light module than TRUTH's P-dependent factor. 4) Quadratic phytoplankton mortality (mP2 * P^2): density-dependent P loss not present in TRUTH. 5) Quadratic zooplankton mortality (mZ2 * Z^2): density-dependent Z loss not present in TRUTH. 6) Stoichiometric yield parameter (y_PN): decouples P_growth from N_uptake (N_uptake = P_growth / y_PN)."
}