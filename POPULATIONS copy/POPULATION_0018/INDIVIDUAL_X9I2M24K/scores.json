{
  "individual": "INDIVIDUAL_X9I2M24K",
  "qualitative_description": "The C++ candidate implements a biologically richer NPZ than the TRUTH reference in some respects: it adds an explicit light module (seasonal forcing, depth-averaging, self-shading) and temperature (Q10) modifiers and uses a Holling II grazing and Michaelis\u2013Menten nutrient uptake coupled multiplicatively with light. Many core ecological roles are present (uptake, recycling, grazing, mortality, zooplankton growth), but key structural differences exist: the candidate uses Michaelis\u2013Menten nutrient limitation \u00d7 light rather than the TRUTH's N/(e+N)*(a/(b+cP)) uptake; grazing is Holling II (P/(K_P+P)) rather than the TRUTH Hill-2 form (P^2/(mu^2+P^2)); and the TRUTH mixing/dilution term k*(N0 - N) and phytoplankton physical loss (s+k)*P are not represented as state-dependent mixing in the candidate (candidate uses a constant N_input instead). The candidate also introduces variable assimilation efficiency and quadratic zooplankton mortality (both absent in TRUTH). Overall the candidate matches ecological roles but often with alternate functional forms and with several extra processes (light seasonality, Q10 temperature dependence, variable epsilon, quadratic Z mortality).",
  "characteristic_scores": {
    "nutrient_equation_uptake": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Michaelis-Menten uptake (N/(K_N + N)) multiplied by biomass and light limitation",
      "explanation": "Candidate: nutrient_uptake = phyto_growth; nutrient_limitation = N_prev / (K_N + N_prev + eps); phyto_growth = r_max * f_temp_phyto * nutrient_limitation * light_limitation * P_prev. (see lines: \"Type nutrient_limitation = N_prev / (K_N + N_prev + eps);\" and \"Type phyto_growth = r_max * f_temp_phyto * nutrient_limitation * light_limitation * P_prev;\" ) \u2014 this is Michaelis\u2013Menten uptake (alternate to TRUTH's N/(e+N)*(a/(b+c*P))*P)."
    },
    "nutrient_equation_recycling": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Recycling from zooplankton: mortality recycling + unassimilated fraction of grazing",
      "explanation": "Candidate: nutrient_from_zoo = gamma_Z * f_temp_remin * zoo_mortality + (1 - epsilon_effective) * grazing. (see: \"Type nutrient_from_zoo = gamma_Z * f_temp_remin * zoo_mortality + (Type(1.0) - epsilon_effective) * grazing;\") \u2014 implements recycling via mortality and unassimilated grazing, functionally matching TRUTH's recycling terms though with different parameterization."
    },
    "nutrient_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "TRUTH has state-dependent mixing k*(N0 - N). Candidate instead has a constant source term N_input in dN_dt: \"Type dN_dt = N_input - nutrient_uptake + nutrient_from_phyto + nutrient_from_zoo;\" \u2014 no k*(N0 - N)-style exchange/dilution term present."
    },
    "phytoplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Co-limited growth: Michaelis-Menten nutrient limitation \u00d7 light limitation (saturating light)",
      "explanation": "Candidate: phyto_growth = r_max * f_temp_phyto * nutrient_limitation * light_limitation * P_prev; with light_limitation = I_avg/(K_I + I_avg) and nutrient_limitation = N_prev/(K_N + N_prev). (see: \"Type light_limitation = I_avg / (K_I + I_avg + eps);\" and \"Type nutrient_limitation = N_prev / (K_N + N_prev + eps);\" and \"Type phyto_growth = r_max * f_temp_phyto * nutrient_limitation * light_limitation * P_prev;\") \u2014 multiplicative MM \u00d7 light form (alternate to TRUTH's specific N/(e+N)*(a/(b+cP)))."
    },
    "phytoplankton_equation_grazing_loss": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Holling Type II grazing (P/(K_P+P))",
      "explanation": "Candidate: grazing = g_max * f_temp_zoo * (P_prev / (K_P + P_prev + eps)) * Z_prev. (see: \"Type grazing = g_max * f_temp_zoo * (P_prev / (K_P + P_prev + eps)) * Z_prev;\") \u2014 Holling II, which is an alternate to the TRUTH Hill-2 form P^2/(mu^2+P^2)."
    },
    "phytoplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear mortality (temperature-modified)",
      "explanation": "Candidate: phyto_mortality = m_P * f_temp_remin * P_prev. (see: \"Type phyto_mortality = m_P * f_temp_remin * P_prev;\") \u2014 linear mortality term (an alternate representation; TRUTH uses a linear term r*P as well)."
    },
    "phytoplankton_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "TRUTH includes physical loss/mixing term -(s + k)*P in dP/dt. Candidate dP_dt = phyto_growth - phyto_mortality - grazing; there is no state-dependent P mixing/entrainment term present (see: \"Type dP_dt = phyto_growth - phyto_mortality - grazing;\")."
    },
    "zooplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Grazing-based growth with assimilation efficiency (variable epsilon)",
      "explanation": "Candidate: dZ_dt uses \"Type dZ_dt = epsilon_effective * grazing - zoo_mortality;\" with epsilon_effective = epsilon_min + (epsilon_max - epsilon_min) * nutrient_limitation. (see: \"Type epsilon_effective = epsilon_min + (epsilon_max - epsilon_min) * nutrient_limitation;\" and \"Type dZ_dt = epsilon_effective * grazing - zoo_mortality;\") \u2014 implements growth via assimilated fraction of grazing (variable epsilon), alternative to TRUTH's constant alpha * grazing."
    },
    "zooplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear + quadratic mortality (density-dependent quadratic term)",
      "explanation": "Candidate: zoo_mortality = (m_Z * f_temp_zoo * Z_prev) + (m_Z2 * Z_prev * Z_prev). (see: \"Type zoo_mortality = (m_Z * f_temp_zoo * Z_prev) + (m_Z2 * Z_prev * Z_prev);\") \u2014 includes both linear (like TRUTH's q*Z) and quadratic mortality (extra alternate closure)."
    },
    "zooplankton_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "TRUTH does not include explicit zooplankton mixing, but the canonical check expects an explicit physical loss term if present. Candidate dZ_dt = epsilon_effective * grazing - zoo_mortality; no P- or N-dependent mixing/entrainment term appears for Z (see: \"Type dZ_dt = epsilon_effective * grazing - zoo_mortality;\")."
    }
  },
  "aggregate_scores": {
    "raw_total": 4.164,
    "normalized_total": 0.4629753168779186,
    "final_score": 0.4629753168779186
  },
  "extra_components_count": 3,
  "extra_components_description": "- Temperature dependence (Q10 modifiers on growth/grazing/remineralization): multiplies biological rates (f_temp_phyto, f_temp_zoo, f_temp_remin).\n- Explicit light module with seasonal forcing, depth-averaged irradiance and self-shading (I_0_mean, I_0_amplitude, t_phase, k_w, k_c, z_mix, I_avg, light_limitation).\n- Variable assimilation efficiency and quadratic zooplankton mortality: epsilon_effective = epsilon_min + (epsilon_max - epsilon_min)*nutrient_limitation and m_Z2 * Z^2 in zoo mortality."
}