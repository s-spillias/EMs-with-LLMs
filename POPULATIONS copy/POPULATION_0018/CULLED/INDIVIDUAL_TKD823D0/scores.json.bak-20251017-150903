{
  "individual": "INDIVIDUAL_TKD823D0",
  "qualitative_description": "The C++ candidate implements all three state equations (N, P, Z) and preserves the canonical ecological roles (uptake, recycling, grazing, mortality, zooplankton growth) but uses alternate functional forms in key places. Uptake/growth is implemented as a Michaelis\u2013Menten nutrient term multiplied by an explicit depth-averaged light limitation (a new process not in TRUTH). Grazing is Holling Type II (candidate) vs a Hill/squared saturating form in TRUTH. Zooplankton growth is assimilation of grazing (same role) but mortality includes an additional quadratic term (extra density-dependent mortality). The candidate lacks an explicit mixing/dilution term that relaxes nutrients toward an ambient concentration (k*(N0 - N) in TRUTH) \u2014 instead it has a constant N_input source term. Overall: roles are present but several are ALTERNATE formulations; mixing is missing/incorrect relative to TRUTH; light limitation and quadratic mortality are extra processes relative to TRUTH.",
  "characteristic_scores": {
    "nutrient_equation_uptake": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Michaelis-Menten uptake (multiplicative with light co-limitation)",
      "explanation": "Candidate uses nutrient_limitation = N_prev / (K_N + N_prev) and sets nutrient_uptake = phyto_growth where phyto_growth = r_max * nutrient_limitation * light_limitation * P_prev. Code: \"Type nutrient_limitation = N_prev / (K_N + N_prev + eps);\" and \"Type phyto_growth = r_max * nutrient_limitation * light_limitation * P_prev;\". This is Michaelis\u2013Menten style uptake but multiplied by an explicit light factor (alternate vs TRUTH's (N/(e+N))*(a/(b + c * P))*P)."
    },
    "nutrient_equation_recycling": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Recycling from unassimilated grazing + mortality",
      "explanation": "Candidate returns nutrients from zooplankton via \"nutrient_from_zoo = gamma_Z * zoo_mortality + (Type(1.0) - epsilon) * grazing;\" (code) so unassimilated fraction of grazing + mortality/excretion feed nutrients. TRUTH has recycling terms \"(beta * lambda_ * P**2/(mu**2 + P**2)) * Z + gamma * q * Z\"; roles match but functional forms differ, so ALTERNATE."
    },
    "nutrient_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "TRUTH has an exchange/mixing term k*(N0 - N) that relaxes N toward an ambient concentration. The candidate uses a constant source term N_input in dN_dt: \"Type dN_dt = N_input - nutrient_uptake + nutrient_from_phyto + nutrient_from_zoo;\" but no relaxation/dilution term of the form (N0 - N)*k. Therefore the TRUTH mixing formulation is not present."
    },
    "phytoplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Multiplicative nutrient (Michaelis-Menten) \u00d7 light co-limitation",
      "explanation": "Candidate defines growth as \"Type phyto_growth = r_max * nutrient_limitation * light_limitation * P_prev;\" with nutrient_limitation = N/(K_N + N) and light_limitation computed from depth-averaged exponential attenuation. TRUTH growth is (N/(e+N))*(a/(b + c*P))*P. Functionally the candidate uses MM nutrient limitation but adds an explicit light co-limitation (alternate)."
    },
    "phytoplankton_equation_grazing_loss": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Holling Type II grazing",
      "explanation": "Candidate uses \"Type grazing = g_max * (P_prev / (K_P + P_prev + eps)) * Z_prev;\" and subtracts grazing from dP_dt: \"dP_dt = phyto_growth - phyto_mortality - grazing;\". TRUTH uses a P^2/(mu^2 + P^2) saturation (Hill-type). This is a standard alternate (Holling II) form."
    },
    "phytoplankton_equation_mortality": {
      "score": 3,
      "category": "TRUTH_MATCH",
      "matched_form": "Linear phytoplankton mortality",
      "explanation": "Candidate implements linear phytoplankton mortality: \"Type phyto_mortality = m_P * P_prev;\" and uses it in dP_dt: \"dP_dt = phyto_growth - phyto_mortality - grazing;\". TRUTH includes linear mortality terms (- r*P and -(s+k)*P) which together are linear losses; the candidate's single linear term is mathematically equivalent in role (linear mortality)."
    },
    "phytoplankton_equation_mixing": {
      "score": 0,
      "category": "NOT_PRESENT_OR_INCORRECT",
      "matched_form": "",
      "explanation": "TRUTH contains an explicit mixing/entrainment loss for P via -(s + k)*P. The candidate does not include any explicit mixing/entrainment term for phytoplankton; dP_dt = phyto_growth - phyto_mortality - grazing (no mixing)."
    },
    "zooplankton_equation_growth": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Assimilated grazing (epsilon * grazing)",
      "explanation": "Candidate: \"Type dZ_dt = epsilon * grazing - zoo_mortality;\" with grazing = g_max*(P/(K_P + P))*Z. TRUTH: growth = alpha * lambda_ * P^2/(mu^2 + P^2) * Z. Role (assimilation of consumed P) is the same but functional response and parameterization differ (alternate)."
    },
    "zooplankton_equation_mortality": {
      "score": 2,
      "category": "ALTERNATE",
      "matched_form": "Linear + quadratic (density-dependent) mortality",
      "explanation": "Candidate defines \"Type zoo_mortality = (m_Z * Z_prev) + (m_Z2 * Z_prev * Z_prev);\" and subtracts it in dZ_dt. TRUTH has only linear zooplankton mortality \"- q * Z\". The candidate therefore uses an alternate (linear + quadratic) mortality which matches documented alternate formulations (quadratic density dependence)."
    }
  },
  "aggregate_scores": {
    "raw_total": 5.082,
    "normalized_total": 0.5648549516505502,
    "final_score": 0.5648549516505502
  },
  "extra_components_count": 2,
  "extra_components_description": "1) Explicit depth\u2011averaged light limitation (I_0, k_w, k_c, H): computes light_limitation via an exponential attenuation / depth-average and multiplies phytoplankton growth. 2) Quadratic zooplankton mortality (m_Z2 * Z^2): density-dependent mortality term absent in the TRUTH model."
}